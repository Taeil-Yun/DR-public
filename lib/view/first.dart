import 'dart:async';

import 'package:DRPublic/widget/loading.dart';
import 'package:flutter/material.dart';

import 'package:intl/intl.dart';
import 'package:share_plus/share_plus.dart';
import 'package:extended_text/extended_text.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:percent_indicator/linear_percent_indicator.dart';
import 'package:youtube_player_iframe/youtube_player_iframe.dart';
import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';

import 'package:DRPublic/conf/texts.dart';
import 'package:DRPublic/conf/colors.dart';
import 'package:DRPublic/conf/enumerated.dart';
import 'package:DRPublic/component/toast/toast.dart';
import 'package:DRPublic/component/appbar/appbar.dart';
import 'package:DRPublic/component/date/date_calculator.dart';
import 'package:DRPublic/component/appbar/appbar_leading.dart';
import 'package:DRPublic/api/like/add.dart';
import 'package:DRPublic/api/like/cancel.dart';
import 'package:DRPublic/api/user/profile.dart';
import 'package:DRPublic/api/vote/vote_add.dart';
import 'package:DRPublic/api/post/main_post_list.dart';
import 'package:DRPublic/api/post/main_post_detail.dart';
import 'package:DRPublic/api/post/main_subscribe_post_list.dart';
import 'package:DRPublic/api/vote/vote_cancle.dart';
import 'package:DRPublic/api/gift/gift_history.dart';
import 'package:DRPublic/api/gift/gift_list.dart';
import 'package:DRPublic/api/gift/gift_send.dart';
import 'package:DRPublic/api/gift/gift_send_priced.dart';
import 'package:DRPublic/api/notification/notification_list.dart';
import 'package:DRPublic/api/post/main_feed_list.dart';
import 'package:DRPublic/view/detail/news_detail.dart';
import 'package:DRPublic/view/detail/post_detail.dart';
import 'package:DRPublic/view/detail/vote_detail.dart';
import 'package:DRPublic/widget/holding_balance.dart';
import 'package:DRPublic/widget/deep_link.dart';
import 'package:DRPublic/widget/label_category_widget.dart';
import 'package:DRPublic/widget/get_youtube_thumbnail.dart';
import 'package:DRPublic/widget/svg_asset.dart';
import 'package:DRPublic/widget/url_launcher.dart';
import 'package:DRPublic/widget/drawer_widget.dart';
import 'package:DRPublic/widget/text_widget.dart';

class FirstScreenBuilder extends StatefulWidget {
  FirstScreenBuilder({
    Key? key,
    required this.cardScrollController,
    required this.headlineScrollController,
    required this.galleryScrollController,
    required this.allListScrollController,
  }) : super(key: key);

  ScrollController cardScrollController;
  ScrollController headlineScrollController;
  ScrollController galleryScrollController;
  ScrollController allListScrollController;

  @override
  State<FirstScreenBuilder> createState() => _FirstScreenBuilderState();
}

class _FirstScreenBuilderState extends State<FirstScreenBuilder>
    with TickerProviderStateMixin {
  final _scaffoldKey = GlobalKey<ScaffoldState>();
  final TextEditingController _controller = TextEditingController();
  final FocusNode textFocusNode = FocusNode();
  final PageController _pageController = PageController();
  late TabController _tabController;

  var numberFormat = NumberFormat('###,###,###,###');

  LayoutType _layout = LayoutType.card;

  bool hasTypeSelected = false;
  bool hasSelected = false;
  bool loadState = false;

  String selectedText = '';

  int addLikeCount = 0;
  int addLikeCount2 = 0;
  int _currentTabIndex = 0;
  int selectedUserIndex = 0;
  int selectedPostType = 0;
  int lastNotificationCount = 0;
  int recentNotificationCount = 0;

  List<int> currentPage = [];
  List<int> currentPage2 = [];
  List<bool> getPostListMoreBtnState = [];
  List<bool> getSubscribeMoreBtnState = [];
  List<dynamic> postListData = [];
  List<dynamic> feedListData = [];
  List<dynamic> toggleData = [
    {
      'name': '전체',
      'state': true,
    },
    {
      'name': '국내증시',
      'state': false,
    },
    {
      'name': '해외증시',
      'state': false,
    },
    {
      'name': '파생상품',
      'state': false,
    },
    {
      'name': '암호화폐',
      'state': false,
    },
    {
      'name': '커뮤니티',
      'state': false,
    },
  ];

  Map<String, dynamic> getProfileData = {};
  Map<String, dynamic> getSubscribePostListData = {};
  Map<String, dynamic> getSubscribeFeedListData = {};

  @override
  void initState() {
    apiInitialize();
    notificationLength();

    _tabController = TabController(
      length: 2,
      vsync: this, // vsync에 this 형태로 전달해야 애니메이션이 정상 처리됨
    );
    _tabController.addListener(_handleTabSelection);

    super.initState();
  }

  @override
  void dispose() {
    _controller.dispose();
    textFocusNode.dispose();
    _pageController.dispose();

    super.dispose();
  }

  Future<void> apiInitialize() async {
    final _prefs = await SharedPreferences.getInstance();

    // print(_prefs.getString('AccessToken'));

    if (_prefs.getInt('NotificationCount') != null) {
      setState(
          () => lastNotificationCount = _prefs.getInt('NotificationCount')!);
    }

    if (_prefs.getString('PostLayout')! == 'card') {
      setState(() => _layout = LayoutType.card);
    } else if (_prefs.getString('PostLayout')! == 'headline') {
      setState(() => _layout = LayoutType.headline);
    } else {
      setState(() => _layout = LayoutType.gallery);
    }

    GetPostListAPI()
        .list(accesToken: _prefs.getString('AccessToken')!)
        .then((value) {
      setState(() {
        postListData = value.result['data'];
        for (int i = 0; i < value.result['data'].length; i++) {
          currentPage.add(0);
          getPostListMoreBtnState.add(false);
        }
      });
    });

    GetSubscribePostListAPI()
        .subscribePostList(accesToken: _prefs.getString('AccessToken')!)
        .then((value) {
      setState(() {
        getSubscribePostListData = value.result;
        for (int i = 0; i < value.result['list'].length; i++) {
          currentPage2.add(0);
          getSubscribeMoreBtnState.add(false);
        }
      });
    });

    GetSubscribePostListAPI()
        .subscribePostList(
            accesToken: _prefs.getString('AccessToken')!, isFeed: true)
        .then((value) {
      setState(() {
        getSubscribeFeedListData = value.result;
      });
    });

    GetFeedListAPI()
        .feed(accesToken: _prefs.getString('AccessToken')!)
        .then((value) {
      setState(() {
        feedListData = value.result['data'];
      });
    });

    UserProfileInfoAPI()
        .getProfile(accesToken: _prefs.getString('AccessToken')!)
        .then((value) {
      setState(() {
        getProfileData = value?.result;
      });
    });

    GetNotificationListDataAPI()
        .notifications(accesToken: _prefs.getString('AccessToken')!)
        .then((value) {
      setState(() {
        if (value.result.isEmpty) {
          recentNotificationCount = 0;
        } else {
          recentNotificationCount = value.result.length;
        }
      });
    });
  }

  Future<void> _handleTabSelection() async {
    final _prefs = await SharedPreferences.getInstance();

    if (_tabController.indexIsChanging ||
        _tabController.index != _currentTabIndex) {
      setState(() {
        _currentTabIndex = _tabController.index;

        if (_currentTabIndex == 1) {
          _prefs.setBool('SubscribeClicked', true);
        } else {
          _prefs.setBool('SubscribeClicked', false);
        }

        if (_currentTabIndex == 1) {
          SharedPreferences.getInstance().then((sharedKey) {
            GetSubscribePostListAPI()
                .subscribePostList(
                    accesToken: sharedKey.getString('AccessToken')!)
                .then((value) {
              setState(() {
                currentPage2.clear();
                getSubscribeMoreBtnState.clear();
                getSubscribePostListData = value.result;
                for (int i = 0; i < value.result['list'].length; i++) {
                  currentPage2.add(0);
                  getSubscribeMoreBtnState.add(false);
                }
              });
            });
          });
        } else {
          GetPostListAPI()
              .list(accesToken: _prefs.getString('AccessToken')!)
              .then((value) {
            setState(() {
              getPostListMoreBtnState.clear();
              postListData = value.result['data'];
              for (int i = 0; i < value.result['data'].length; i++) {
                currentPage.add(0);
                getPostListMoreBtnState.add(false);
              }
            });
          });
        }
      });
    }
  }

  Future notificationLength() async {
    Timer.periodic(const Duration(seconds: 30), (timer) async {
      final _prefs = await SharedPreferences.getInstance();

      GetNotificationListDataAPIResponseModel _data =
          await GetNotificationListDataAPI()
              .notifications(accesToken: _prefs.getString('AccessToken')!);

      // setState(() {
      if (_data.result.isEmpty) {
        recentNotificationCount = 0;
      } else {
        recentNotificationCount = _data.result.length;
      }
      // });

      return _data.result;
    });
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () => textFocusNode.unfocus(),
      child: Scaffold(
        key: _scaffoldKey,
        appBar: DRAppBar(
          systemUiOverlayStyle:
              Theme.of(context).appBarTheme.systemOverlayStyle,
          leadingWidth: 70.0,
          backgroundColor: ColorsConfig().subBackground1(),
          leading: DRAppBarLeading(
            press: () {
              // _scaffoldKey.currentState?.openDrawer();
            },
            icon: Container(
              margin: const EdgeInsets.only(left: 15.0),
              child: CustomTextBuilder(
                text: '포스트',
                fontColor: ColorsConfig().textWhite1(),
                fontSize: 20.0,
                fontWeight: FontWeight.w700,
              ),
            ),
          ),
          actions: [
            IconButton(
              onPressed: () {
                Navigator.pushNamed(context, '/search');
              },
              icon: SvgAssets(
                image: 'assets/icon/search.svg',
                color: ColorsConfig().textBlack2(),
                width: 20.0,
                height: 20.0,
              ),
            ),
            Padding(
              padding: const EdgeInsets.only(left: 5.0, right: 10.0),
              child: InkWell(
                onTap: () {
                  SharedPreferences.getInstance().then((_prefs) {
                    _prefs.setInt('NotificationCount', recentNotificationCount);
                  });

                  setState(() {
                    lastNotificationCount = recentNotificationCount;
                  });

                  Navigator.pushNamed(context, '/notification');
                },
                child: Stack(
                  alignment: Alignment.center,
                  children: [
                    SvgAssets(
                      image: 'assets/icon/notification.svg',
                      color: ColorsConfig().textBlack2(),
                      width: 22.0,
                      height: 22.0,
                    ),
                    recentNotificationCount != lastNotificationCount
                        ? Positioned(
                            top: 22.0,
                            right: 1.0,
                            child: Container(
                              width: 6.0,
                              height: 6.0,
                              decoration: BoxDecoration(
                                color: ColorsConfig.notificationDots,
                                borderRadius: BorderRadius.circular(4.0),
                              ),
                            ),
                          )
                        : Container(),
                  ],
                ),
              ),
            ),
            Row(
              children: [
                IconButton(
                  onPressed: () {
                    _scaffoldKey.currentState?.openEndDrawer();
                  },
                  icon: Container(
                    width: 39.0,
                    height: 39.0,
                    decoration: BoxDecoration(
                      color: ColorsConfig().userIconBackground(),
                      borderRadius: BorderRadius.circular(100.0),
                      image: getProfileData.isNotEmpty
                          ? DecorationImage(
                              image: NetworkImage(
                                getProfileData['avatar'],
                                scale: 7.0,
                              ),
                              filterQuality: FilterQuality.high,
                              fit: BoxFit.none,
                              alignment: const Alignment(0.0, -0.3),
                            )
                          : null,
                    ),
                  ),
                ),
              ],
            ),
          ],
        ),
        body: postListData.isNotEmpty
            ? Column(
                children: [
                  sortWithLayoutChangeWidget(),
                  _layout == LayoutType.card
                      ? cardLayoutWidget()
                      : _layout == LayoutType.headline
                          ? headlineLayoutWidget()
                          : galleryLayoutWidget(),
                ],
              )
            : const LoadingProgressScreen(),
        endDrawer: const DrawerBuilderWidget(),
        onEndDrawerChanged: (isDrawerOpen) async {
          if (!isDrawerOpen) {
            final _prefs = await SharedPreferences.getInstance();

            UserProfileInfoAPI()
                .getProfile(accesToken: _prefs.getString('AccessToken')!)
                .then((value) {
              setState(() {
                getProfileData = value?.result;
              });
            });
          }
        },
        backgroundColor: ColorsConfig().background(),
      ),
    );
  }

  Widget sortWithLayoutChangeWidget() {
    return Container(
      padding: const EdgeInsets.only(left: 20.0, right: .0),
      decoration: BoxDecoration(
        color: ColorsConfig().subBackground1(),
        border: Border(
          bottom: BorderSide(
            width: 0.5,
            color: ColorsConfig().border1(),
          ),
        ),
      ),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Expanded(
            child: TabBar(
              controller: _tabController,
              isScrollable: true,
              padding: EdgeInsets.zero,
              indicatorColor: ColorsConfig().primary(),
              unselectedLabelColor: ColorsConfig().textWhite1(),
              unselectedLabelStyle: TextStyle(
                fontSize: 18.0.sp,
                fontWeight: FontWeight.w700,
              ),
              labelColor: ColorsConfig().primary(),
              labelStyle: TextStyle(
                fontSize: 18.0.sp,
                fontWeight: FontWeight.w700,
              ),
              onTap: (intager) async {
                final _prefs = await SharedPreferences.getInstance();

                if (intager == 1) {
                  _prefs.setBool('SubscribeClicked', true);
                } else {
                  _prefs.setBool('SubscribeClicked', false);
                }

                if (intager != 1) {
                  setState(() {
                    selectedUserIndex = 0;

                    GetSubscribePostListAPI()
                        .subscribePostList(
                            accesToken: _prefs.getString('AccessToken')!)
                        .then((value) {
                      setState(() {
                        currentPage2.clear();
                        getSubscribeMoreBtnState.clear();
                        getSubscribePostListData = value.result;
                        for (int i = 0; i < value.result['list'].length; i++) {
                          currentPage2.add(0);
                          getSubscribeMoreBtnState.add(false);
                        }
                      });
                    });
                  });
                } else {
                  GetPostListAPI()
                      .list(accesToken: _prefs.getString('AccessToken')!)
                      .then((value) {
                    setState(() {
                      currentPage.clear();
                      getPostListMoreBtnState.clear();
                      postListData = value.result['data'];
                      for (int i = 0; i < value.result['data'].length; i++) {
                        currentPage.add(0);
                        getPostListMoreBtnState.add(false);
                      }
                    });
                  });
                }
              },
              tabs: [
                Tab(
                  child: CustomTextBuilder(
                    text: TextConstant.realtimeText,
                  ),
                ),
                Tab(
                  child: CustomTextBuilder(
                    text: TextConstant.subscribeText,
                  ),
                ),
              ],
            ),
          ),
          IconButton(
            onPressed: () {
              showModalBottomSheet(
                  context: context,
                  backgroundColor: ColorsConfig().subBackground1(),
                  shape: const RoundedRectangleBorder(
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(12.0),
                      topRight: Radius.circular(12.0),
                    ),
                  ),
                  builder: (BuildContext context) {
                    return SafeArea(
                      child: Container(
                        decoration: const BoxDecoration(
                          borderRadius: BorderRadius.only(
                            topLeft: Radius.circular(12.0),
                            topRight: Radius.circular(12.0),
                          ),
                        ),
                        child: Column(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Container(
                              width: 50.0,
                              height: 4.0,
                              margin: const EdgeInsets.symmetric(vertical: 8.0),
                              decoration: BoxDecoration(
                                color: ColorsConfig().textBlack2(),
                                borderRadius: BorderRadius.circular(100.0),
                              ),
                            ),
                            Container(
                              width: MediaQuery.of(context).size.width,
                              padding: const EdgeInsets.only(
                                  top: 10.0,
                                  bottom: 15.0,
                                  left: 30.0,
                                  right: 30.0),
                              decoration: BoxDecoration(
                                border: Border(
                                  bottom: BorderSide(
                                    width: 0.5,
                                    color: ColorsConfig().border1(),
                                  ),
                                ),
                              ),
                              child: CustomTextBuilder(
                                text: '목록 타입 선택',
                                fontColor: ColorsConfig().textWhite1(),
                                fontSize: 18.0.sp,
                                fontWeight: FontWeight.w600,
                              ),
                            ),
                            // 목록형
                            InkWell(
                              onTap: () async {
                                Navigator.pop(context);

                                final _prefs =
                                    await SharedPreferences.getInstance();

                                _prefs.setString('PostLayout', 'headline');

                                setState(() => _layout = LayoutType.headline);
                              },
                              child: Container(
                                width: MediaQuery.of(context).size.width,
                                padding: const EdgeInsets.symmetric(
                                    horizontal: 30.0, vertical: 15.0),
                                child: Row(
                                  children: [
                                    Container(
                                      margin:
                                          const EdgeInsets.only(right: 18.0),
                                      child: SvgAssets(
                                        image: 'assets/icon/view_list.svg',
                                        color: _layout == LayoutType.headline
                                            ? ColorsConfig().textWhite1()
                                            : ColorsConfig().textBlack2(),
                                        width: 16.0.sp,
                                        height: 16.0.sp,
                                      ),
                                    ),
                                    CustomTextBuilder(
                                      text: TextConstant.listLayoutText,
                                      fontColor: _layout == LayoutType.headline
                                          ? ColorsConfig().textWhite1()
                                          : ColorsConfig().textBlack2(),
                                      fontSize: 16.0.sp,
                                      fontWeight: FontWeight.w700,
                                    ),
                                  ],
                                ),
                              ),
                            ),
                            // 피드형
                            InkWell(
                              onTap: () async {
                                Navigator.pop(context);

                                final _prefs =
                                    await SharedPreferences.getInstance();

                                _prefs.setString('PostLayout', 'card');

                                setState(() => _layout = LayoutType.card);
                              },
                              child: Container(
                                width: MediaQuery.of(context).size.width,
                                padding: const EdgeInsets.symmetric(
                                    horizontal: 30.0, vertical: 15.0),
                                child: Row(
                                  children: [
                                    Container(
                                      margin:
                                          const EdgeInsets.only(right: 18.0),
                                      child: SvgAssets(
                                        image: 'assets/icon/view_card.svg',
                                        color: _layout == LayoutType.card
                                            ? ColorsConfig().textWhite1()
                                            : ColorsConfig().textBlack2(),
                                        width: 16.0.sp,
                                        height: 16.0.sp,
                                      ),
                                    ),
                                    CustomTextBuilder(
                                      text: TextConstant.cardLayoutText,
                                      fontColor: _layout == LayoutType.card
                                          ? ColorsConfig().textWhite1()
                                          : ColorsConfig().textBlack2(),
                                      fontSize: 16.0.sp,
                                      fontWeight: FontWeight.w700,
                                    ),
                                  ],
                                ),
                              ),
                            ),
                            // 앨범형
                            InkWell(
                              onTap: () async {
                                Navigator.pop(context);

                                final _prefs =
                                    await SharedPreferences.getInstance();

                                _prefs.setString('PostLayout', 'gallery');

                                setState(() => _layout = LayoutType.gallery);
                              },
                              child: Container(
                                width: MediaQuery.of(context).size.width,
                                padding: const EdgeInsets.symmetric(
                                    horizontal: 30.0, vertical: 15.0),
                                child: Row(
                                  children: [
                                    Container(
                                      margin:
                                          const EdgeInsets.only(right: 18.0),
                                      child: SvgAssets(
                                        image: 'assets/icon/view_gallery.svg',
                                        color: _layout == LayoutType.gallery
                                            ? ColorsConfig().textWhite1()
                                            : ColorsConfig().textBlack2(),
                                        width: 16.0.sp,
                                        height: 16.0.sp,
                                      ),
                                    ),
                                    CustomTextBuilder(
                                      text: TextConstant.galleryText,
                                      fontColor: _layout == LayoutType.gallery
                                          ? ColorsConfig().textWhite1()
                                          : ColorsConfig().textBlack2(),
                                      fontSize: 16.0.sp,
                                      fontWeight: FontWeight.w700,
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    );
                  });
            },
            icon: SvgAssets(
              image: _layout == LayoutType.headline
                  ? 'assets/icon/view_list.svg'
                  : _layout == LayoutType.card
                      ? 'assets/icon/view_card.svg'
                      : 'assets/icon/view_gallery.svg',
              color: ColorsConfig().textBlack1(),
              width: 16.0,
              height: 16.0,
            ),
            splashColor: ColorsConfig.transparent,
            highlightColor: ColorsConfig.transparent,
          ),
        ],
      ),
    );
  }

  Widget headlineLayoutWidget() {
    if (postListData.isNotEmpty) {
      return Expanded(
        child: Container(
          color: ColorsConfig().background(),
          child: TabBarView(
            controller: _tabController,
            children: [
              RefreshIndicator(
                onRefresh: () async {
                  final _prefs = await SharedPreferences.getInstance();

                  GetPostListAPI()
                      .list(accesToken: _prefs.getString('AccessToken')!)
                      .then((value) {
                    setState(() {
                      currentPage.clear();
                      getPostListMoreBtnState.clear();
                      postListData = value.result['data'];
                      for (int i = 0; i < value.result['data'].length; i++) {
                        currentPage.add(0);
                        getPostListMoreBtnState.add(false);
                      }
                    });
                  });

                  GetSubscribePostListAPI()
                      .subscribePostList(
                          accesToken: _prefs.getString('AccessToken')!)
                      .then((value) {
                    setState(() {
                      currentPage2.clear();
                      getSubscribeMoreBtnState.clear();
                      getSubscribePostListData = value.result;
                      for (int i = 0; i < value.result['list'].length; i++) {
                        currentPage2.add(0);
                        getSubscribeMoreBtnState.add(false);
                      }
                    });
                  });
                },
                color: ColorsConfig().textWhite1(),
                backgroundColor: ColorsConfig().subBackgroundBlack(),
                child: ListView.builder(
                  padding: EdgeInsets.zero,
                  controller: widget.headlineScrollController,
                  itemCount: postListData.length + 1,
                  itemBuilder: (context, index) {
                    if (index < postListData.length) {
                      if (index == 0) {
                        return Column(
                          children: [
                            selectCategoryWidget(),
                            Container(
                              decoration: BoxDecoration(
                                color: ColorsConfig().subBackground1(),
                                border: index != postListData.length - 1
                                    ? Border(
                                        bottom: BorderSide(
                                          width: 0.5,
                                          color: ColorsConfig().border1(),
                                        ),
                                      )
                                    : null,
                              ),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  // 유저 이미지, 닉네임, 날짜, 더보기 버튼
                                  Padding(
                                    padding: const EdgeInsets.fromLTRB(
                                        20.0, 13.4, 20.0, 0.0),
                                    child: Row(
                                      mainAxisAlignment:
                                          MainAxisAlignment.spaceBetween,
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: [
                                        InkWell(
                                          onTap: () {
                                            if (postListData[index]['isMe']) {
                                              Navigator.pushNamed(
                                                  context, '/my_profile',
                                                  arguments: {
                                                    'onNavigator': true,
                                                  });
                                            } else {
                                              Navigator.pushNamed(
                                                  context, '/your_profile',
                                                  arguments: {
                                                    'user_index':
                                                        postListData[index]
                                                            ['user_index'],
                                                    'user_nickname':
                                                        postListData[index]
                                                            ['nick'],
                                                  }).then((_) async {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                GetSubscribePostListAPI()
                                                    .subscribePostList(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!)
                                                    .then((value) {
                                                  setState(() {
                                                    currentPage2.clear();
                                                    getSubscribePostListData =
                                                        value.result;
                                                    for (int i = 0;
                                                        i <
                                                            value.result['list']
                                                                .length;
                                                        i++) {
                                                      currentPage2.add(0);
                                                    }
                                                  });
                                                });
                                              });
                                            }
                                          },
                                          child: Row(
                                            children: [
                                              // 이미지
                                              Container(
                                                width: 42.0,
                                                height: 42.0,
                                                decoration: BoxDecoration(
                                                  color: ColorsConfig()
                                                      .userIconBackground(),
                                                  borderRadius:
                                                      BorderRadius.circular(
                                                          21.0),
                                                  image: DecorationImage(
                                                    image: NetworkImage(
                                                      postListData[index]
                                                          ['avatar_url'],
                                                      scale: 5.5,
                                                    ),
                                                    filterQuality:
                                                        FilterQuality.high,
                                                    fit: BoxFit.none,
                                                    alignment: const Alignment(
                                                        0.0, -0.3),
                                                  ),
                                                ),
                                              ),
                                              Column(
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  SizedBox(
                                                    width:
                                                        MediaQuery.of(context)
                                                                .size
                                                                .width -
                                                            82.0,
                                                    child: Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Row(
                                                          children: [
                                                            // 닉네임
                                                            Container(
                                                              margin:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                          8.0),
                                                              child:
                                                                  CustomTextBuilder(
                                                                text:
                                                                    '${postListData[index]['nick']}',
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textWhite1(),
                                                                fontSize:
                                                                    16.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w700,
                                                              ),
                                                            ),
                                                            // 날짜
                                                            CustomTextBuilder(
                                                              text: DateCalculatorWrapper()
                                                                  .daysCalculator(
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'date']),
                                                              fontColor:
                                                                  ColorsConfig
                                                                      .defaultGray,
                                                              fontSize: 12.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w400,
                                                              height: 1.8,
                                                            ),
                                                          ],
                                                        ),
                                                        InkWell(
                                                          onTap: () async {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            if (!hasTypeSelected) {
                                                              GetPostListAPI()
                                                                  .list(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      category:
                                                                          postListData[index]
                                                                              [
                                                                              'type'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  hasTypeSelected =
                                                                      true;
                                                                  selectedPostType =
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'type'];
                                                                  currentPage
                                                                      .clear();
                                                                  postListData =
                                                                      value.result[
                                                                          'data'];
                                                                  for (int i =
                                                                          0;
                                                                      i <
                                                                          value
                                                                              .result['data']
                                                                              .length;
                                                                      i++) {
                                                                    currentPage
                                                                        .add(0);
                                                                  }
                                                                  widget
                                                                      .headlineScrollController
                                                                      .jumpTo(
                                                                          0.0);
                                                                });
                                                              });
                                                            } else {
                                                              GetPostListAPI()
                                                                  .list(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!)
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  hasTypeSelected =
                                                                      false;
                                                                  selectedPostType =
                                                                      0;
                                                                  currentPage
                                                                      .clear();
                                                                  postListData =
                                                                      value.result[
                                                                          'data'];
                                                                  for (int i =
                                                                          0;
                                                                      i <
                                                                          value
                                                                              .result['data']
                                                                              .length;
                                                                      i++) {
                                                                    currentPage
                                                                        .add(0);
                                                                  }
                                                                  widget
                                                                      .headlineScrollController
                                                                      .jumpTo(
                                                                          0.0);
                                                                });
                                                              });
                                                            }
                                                          },
                                                          child: LabelCategoryWidgetBuilder(
                                                              data:
                                                                  postListData[
                                                                          index]
                                                                      ['type']),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  postListData[index]['gift']
                                                          .isNotEmpty
                                                      ? InkWell(
                                                          onTap: () async {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            GetGiftHistoryListDataAPI()
                                                                .giftHistory(
                                                                    accesToken:
                                                                        _prefs.getString(
                                                                            'AccessToken')!,
                                                                    postIndex: postListData[
                                                                            index]
                                                                        [
                                                                        'post_index'])
                                                                .then(
                                                                    (history) {
                                                              showModalBottomSheet(
                                                                  context:
                                                                      context,
                                                                  backgroundColor:
                                                                      ColorsConfig()
                                                                          .subBackground1(),
                                                                  shape:
                                                                      const RoundedRectangleBorder(
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              12.0),
                                                                      topRight:
                                                                          Radius.circular(
                                                                              12.0),
                                                                    ),
                                                                  ),
                                                                  builder:
                                                                      (BuildContext
                                                                          context) {
                                                                    return SafeArea(
                                                                      child:
                                                                          Container(
                                                                        decoration:
                                                                            const BoxDecoration(
                                                                          borderRadius:
                                                                              BorderRadius.only(
                                                                            topLeft:
                                                                                Radius.circular(12.0),
                                                                            topRight:
                                                                                Radius.circular(12.0),
                                                                          ),
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.min,
                                                                          children: [
                                                                            Container(
                                                                              width: 50.0,
                                                                              height: 4.0,
                                                                              margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                              decoration: BoxDecoration(
                                                                                color: ColorsConfig().textBlack2(),
                                                                                borderRadius: BorderRadius.circular(100.0),
                                                                              ),
                                                                            ),
                                                                            Center(
                                                                              child: Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                decoration: BoxDecoration(
                                                                                  border: Border(
                                                                                    bottom: BorderSide(
                                                                                      width: 0.5,
                                                                                      color: ColorsConfig().border1(),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                child: CustomTextBuilder(
                                                                                  text: TextConstant.giftHistoryText,
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 18.0.sp,
                                                                                  fontWeight: FontWeight.w600,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Expanded(
                                                                              child: ListView.builder(
                                                                                  itemCount: history.result['users'].length,
                                                                                  itemBuilder: (context, historyIndex) {
                                                                                    return Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      height: 65.0,
                                                                                      padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                      decoration: BoxDecoration(
                                                                                        border: Border(
                                                                                          bottom: BorderSide(
                                                                                            width: 0.5,
                                                                                            color: ColorsConfig().border1(),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      child: Row(
                                                                                        children: [
                                                                                          Expanded(
                                                                                            child: Row(
                                                                                              children: [
                                                                                                // 아바타 이미지
                                                                                                Container(
                                                                                                  width: 35.0,
                                                                                                  height: 35.0,
                                                                                                  decoration: BoxDecoration(
                                                                                                    color: ColorsConfig().userIconBackground(),
                                                                                                    borderRadius: BorderRadius.circular(17.5),
                                                                                                    image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                        ? DecorationImage(
                                                                                                            image: NetworkImage(
                                                                                                              history.result['users'][historyIndex]['avatar'],
                                                                                                              scale: 7.0,
                                                                                                            ),
                                                                                                            filterQuality: FilterQuality.high,
                                                                                                            fit: BoxFit.none,
                                                                                                            alignment: const Alignment(0.0, -0.3),
                                                                                                          )
                                                                                                        : null,
                                                                                                  ),
                                                                                                ),
                                                                                                const SizedBox(width: 15.0),
                                                                                                CustomTextBuilder(
                                                                                                  text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                                  fontSize: 16.0.sp,
                                                                                                  fontWeight: FontWeight.w400,
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          Expanded(
                                                                                            child: ListView.builder(
                                                                                              scrollDirection: Axis.horizontal,
                                                                                              itemCount: history.result['gifts'].length,
                                                                                              itemBuilder: (context, giftHistory) {
                                                                                                if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                  return Container();
                                                                                                }
                                                                                                return Row(
                                                                                                  children: [
                                                                                                    Image(
                                                                                                      image: NetworkImage(
                                                                                                        history.result['gifts'][giftHistory]['image'],
                                                                                                      ),
                                                                                                    ),
                                                                                                    const SizedBox(width: 4.0),
                                                                                                    CustomTextBuilder(
                                                                                                      text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                      fontColor: ColorsConfig().textBlack2(),
                                                                                                      fontSize: 12.0.sp,
                                                                                                      fontWeight: FontWeight.w700,
                                                                                                    ),
                                                                                                    const SizedBox(width: 4.0),
                                                                                                  ],
                                                                                                );
                                                                                              },
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  }),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    );
                                                                  });
                                                            });
                                                          },
                                                          child:
                                                              !getPostListMoreBtnState[
                                                                      index]
                                                                  ? Container(
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          left:
                                                                              4.0,
                                                                          top:
                                                                              5.0),
                                                                      child:
                                                                          SingleChildScrollView(
                                                                        physics:
                                                                            const NeverScrollableScrollPhysics(),
                                                                        scrollDirection:
                                                                            Axis.horizontal,
                                                                        child:
                                                                            Row(
                                                                          children: [
                                                                            Row(
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: List.generate(postListData[index]['gift'].length > 4 ? 4 : postListData[index]['gift'].length, (giftIndex) {
                                                                                return Container(
                                                                                  margin: const EdgeInsets.only(right: 8.0),
                                                                                  child: Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    mainAxisSize: MainAxisSize.min,
                                                                                    children: [
                                                                                      Container(
                                                                                        width: 24.0,
                                                                                        height: 24.0,
                                                                                        decoration: BoxDecoration(
                                                                                          borderRadius: BorderRadius.circular(9.0),
                                                                                        ),
                                                                                        child: Image(
                                                                                          image: NetworkImage(
                                                                                            postListData[index]['gift'][giftIndex]['image'],
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      CustomTextBuilder(
                                                                                        text: '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                                        fontColor: ColorsConfig.defaultGray,
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w700,
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              }),
                                                                            ),
                                                                            !getPostListMoreBtnState[index] && postListData[index]['gift'].length > 4
                                                                                ? InkWell(
                                                                                    onTap: () {
                                                                                      setState(() {
                                                                                        getPostListMoreBtnState[index] = true;
                                                                                      });
                                                                                    },
                                                                                    child: Padding(
                                                                                      padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.moreReadText,
                                                                                        fontColor: ColorsConfig().textBlack2(),
                                                                                        fontSize: 14.0.sp,
                                                                                        fontWeight: FontWeight.w400,
                                                                                      ),
                                                                                    ),
                                                                                  )
                                                                                : Container(),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    )
                                                                  : Container(
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          left:
                                                                              4.0,
                                                                          top:
                                                                              5.0),
                                                                      child:
                                                                          Wrap(
                                                                        children: List.generate(
                                                                            postListData[index]['gift'].length,
                                                                            (giftIndex) {
                                                                          return Container(
                                                                            margin:
                                                                                const EdgeInsets.only(right: 8.0),
                                                                            child:
                                                                                Row(
                                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Container(
                                                                                  width: 24.0,
                                                                                  height: 24.0,
                                                                                  decoration: BoxDecoration(
                                                                                    borderRadius: BorderRadius.circular(9.0),
                                                                                  ),
                                                                                  child: Image(
                                                                                    image: NetworkImage(
                                                                                      postListData[index]['gift'][giftIndex]['image'],
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                CustomTextBuilder(
                                                                                  text: '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                                  fontColor: ColorsConfig().textBlack2(),
                                                                                  fontSize: 12.0.sp,
                                                                                  fontWeight: FontWeight.w700,
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          );
                                                                        }),
                                                                      ),
                                                                    ),
                                                        )
                                                      : Container(),
                                                ],
                                              ),
                                            ],
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                  // 내용 부분
                                  Padding(
                                    padding: const EdgeInsets.symmetric(
                                        horizontal: 20.0),
                                    child: InkWell(
                                      onTap: () {
                                        if (postListData[index]['type'] == 4) {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (context) =>
                                                  NewsDetailScreen(
                                                postIndex: postListData[index]
                                                    ['post_index'],
                                                postType: postListData[index]
                                                    ['type'],
                                              ),
                                            ),
                                          ).then((returns) async {
                                            if (returns != null) {
                                              if (returns['ret']) {
                                                setState(() {
                                                  postListData.remove(
                                                      postListData[index]);
                                                  currentPage.removeAt(index);
                                                });
                                              }
                                            } else {
                                              final _prefs =
                                                  await SharedPreferences
                                                      .getInstance();

                                              PostDetailDataAPI()
                                                  .detail(
                                                      accesToken:
                                                          _prefs.getString(
                                                              'AccessToken')!,
                                                      postIndex:
                                                          postListData[index]
                                                              ['post_index'])
                                                  .then((value) {
                                                setState(() {
                                                  postListData[index] =
                                                      value.result;
                                                });
                                              });
                                            }
                                          });
                                        } else if (postListData[index]
                                                ['type'] ==
                                            5) {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (context) =>
                                                  VoteDetailScreen(
                                                postIndex: postListData[index]
                                                    ['post_index'],
                                                postType: postListData[index]
                                                    ['type'],
                                              ),
                                            ),
                                          ).then((returns) async {
                                            if (returns != null) {
                                              if (returns['ret']) {
                                                setState(() {
                                                  postListData.remove(
                                                      postListData[index]);
                                                  currentPage.removeAt(index);
                                                });
                                              }
                                            } else {
                                              final _prefs =
                                                  await SharedPreferences
                                                      .getInstance();

                                              PostDetailDataAPI()
                                                  .detail(
                                                      accesToken:
                                                          _prefs.getString(
                                                              'AccessToken')!,
                                                      postIndex:
                                                          postListData[index]
                                                              ['post_index'])
                                                  .then((value) {
                                                setState(() {
                                                  postListData[index] =
                                                      value.result;
                                                });
                                              });
                                            }
                                          });
                                        } else {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (context) =>
                                                  PostingDetailScreen(
                                                postIndex: postListData[index]
                                                    ['post_index'],
                                                postType: postListData[index]
                                                    ['type'],
                                              ),
                                            ),
                                          ).then((returns) async {
                                            if (returns != null) {
                                              if (returns['ret']) {
                                                setState(() {
                                                  postListData.remove(
                                                      postListData[index]);
                                                  currentPage.removeAt(index);
                                                });
                                              }
                                            } else {
                                              final _prefs =
                                                  await SharedPreferences
                                                      .getInstance();

                                              PostDetailDataAPI()
                                                  .detail(
                                                      accesToken:
                                                          _prefs.getString(
                                                              'AccessToken')!,
                                                      postIndex:
                                                          postListData[index]
                                                              ['post_index'])
                                                  .then((value) {
                                                setState(() {
                                                  postListData[index] =
                                                      value.result;
                                                });
                                              });
                                            }
                                          });
                                        }
                                      },
                                      child: postListData[index]['type'] == 4
                                          ? Container(
                                              margin: const EdgeInsets.only(
                                                  top: 6.0),
                                              child: Row(
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceBetween,
                                                children: [
                                                  SizedBox(
                                                    height: 75.0,
                                                    child: Column(
                                                      children: [
                                                        SizedBox(
                                                          width: (MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width *
                                                                  0.75) -
                                                              56.0,
                                                          child:
                                                              CustomTextBuilder(
                                                            text:
                                                                '${postListData[index]['title']}',
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textWhite1(),
                                                            fontSize: 19.0.sp,
                                                            fontWeight:
                                                                FontWeight.w700,
                                                            maxLines: 2,
                                                          ),
                                                        ),
                                                        SizedBox(
                                                          width: (MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width *
                                                                  0.75) -
                                                              56.0,
                                                          child:
                                                              CustomTextBuilder(
                                                            text:
                                                                '${postListData[index]['description']}',
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textBlack3(),
                                                            fontSize: 17.0.sp,
                                                            fontWeight:
                                                                FontWeight.w400,
                                                            maxLines: 1,
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  InkWell(
                                                    onTap: () {
                                                      UrlLauncherBuilder()
                                                          .launchURL(
                                                              postListData[
                                                                      index]
                                                                  ['link']);
                                                    },
                                                    child: Container(
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.3) -
                                                          23.0,
                                                      height: 75.0,
                                                      decoration: BoxDecoration(
                                                        color: ColorsConfig()
                                                            .textBlack2(),
                                                        border: Border.all(
                                                          width: 0.5,
                                                          color: ColorsConfig()
                                                              .primary(),
                                                        ),
                                                        image: DecorationImage(
                                                          image: NetworkImage(
                                                            postListData[index]
                                                                ['news_image'],
                                                          ),
                                                          fit: BoxFit.cover,
                                                          filterQuality:
                                                              FilterQuality
                                                                  .high,
                                                        ),
                                                      ),
                                                      child: Stack(
                                                        children: [
                                                          Positioned(
                                                            right: 3.0,
                                                            bottom: 3.0,
                                                            child: Container(
                                                              width: 18.0,
                                                              height: 18.0,
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .linkIconBackground(),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            9.0),
                                                              ),
                                                              child: Center(
                                                                child:
                                                                    SvgAssets(
                                                                  image:
                                                                      'assets/icon/link.svg',
                                                                  color: ColorsConfig()
                                                                      .primary(),
                                                                  width: 12.0,
                                                                  height: 12.0,
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            )
                                          : postListData[index]['type'] == 1 ||
                                                  postListData[index]['type'] ==
                                                      2 ||
                                                  postListData[index]['type'] ==
                                                      3
                                              ? Container(
                                                  margin: const EdgeInsets.only(
                                                      top: 6.0),
                                                  child: Row(
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .start,
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceBetween,
                                                    children: [
                                                      SizedBox(
                                                        height: 75.0,
                                                        child: Column(
                                                          children: [
                                                            SizedBox(
                                                              width: postListData[
                                                                              index]
                                                                          [
                                                                          'category'] !=
                                                                      null
                                                                  ? (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.75) -
                                                                      56.0
                                                                  : MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .width -
                                                                      40.0,
                                                              child:
                                                                  CustomTextBuilder(
                                                                text:
                                                                    '${postListData[index]['title']}',
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textWhite1(),
                                                                fontSize:
                                                                    19.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w700,
                                                                maxLines: 2,
                                                              ),
                                                            ),
                                                            SizedBox(
                                                              width: postListData[
                                                                              index]
                                                                          [
                                                                          'category'] !=
                                                                      null
                                                                  ? (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.75) -
                                                                      56.0
                                                                  : MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .width -
                                                                      40.0,
                                                              child:
                                                                  CustomTextBuilder(
                                                                text:
                                                                    '${postListData[index]['description']}',
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textBlack3(),
                                                                fontSize:
                                                                    17.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w400,
                                                                maxLines: 1,
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      Row(
                                                        children: [
                                                          postListData[index][
                                                                          'category'] !=
                                                                      null &&
                                                                  postListData[
                                                                              index]
                                                                          [
                                                                          'category'] ==
                                                                      'i'
                                                              ? SizedBox(
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.3) -
                                                                      23.0,
                                                                  height: 75.0,
                                                                  child: postListData[index]['image']
                                                                              .length >
                                                                          1
                                                                      ? ConstrainedBox(
                                                                          constraints:
                                                                              BoxConstraints(
                                                                            maxHeight:
                                                                                MediaQuery.of(context).size.width * 1.33,
                                                                          ),
                                                                          child:
                                                                              PageView.builder(
                                                                            controller:
                                                                                _pageController,
                                                                            itemCount:
                                                                                postListData[index]['image'].length,
                                                                            onPageChanged:
                                                                                (int page) {
                                                                              setState(() {
                                                                                currentPage[index] = page;
                                                                              });
                                                                            },
                                                                            itemBuilder:
                                                                                (context, imageIndex) {
                                                                              return Image(
                                                                                  image: NetworkImage(
                                                                                    postListData[index]['image'][imageIndex],
                                                                                  ),
                                                                                  fit: BoxFit.cover,
                                                                                  filterQuality: FilterQuality.high,
                                                                                  alignment: Alignment.center);
                                                                            },
                                                                          ),
                                                                        )
                                                                      : SizedBox(
                                                                          width:
                                                                              (MediaQuery.of(context).size.width * 0.3) - 23.0,
                                                                          height:
                                                                              75.0,
                                                                          child: Image(
                                                                              image: NetworkImage(
                                                                                postListData[index]['image'][0],
                                                                              ),
                                                                              fit: BoxFit.cover,
                                                                              filterQuality: FilterQuality.high,
                                                                              alignment: Alignment.center),
                                                                        ),
                                                                )
                                                              : Container(),
                                                          postListData[index][
                                                                          'category'] !=
                                                                      null &&
                                                                  postListData[
                                                                              index]
                                                                          [
                                                                          'category'] ==
                                                                      'g'
                                                              ? SizedBox(
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.3) -
                                                                      23.0,
                                                                  height: 75.0,
                                                                  child: Image(
                                                                    image:
                                                                        NetworkImage(
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'sub_link'],
                                                                    ),
                                                                    fit: BoxFit
                                                                        .cover,
                                                                    filterQuality:
                                                                        FilterQuality
                                                                            .high,
                                                                  ),
                                                                )
                                                              : Container(),
                                                          postListData[index][
                                                                          'category'] !=
                                                                      null &&
                                                                  postListData[
                                                                              index]
                                                                          [
                                                                          'category'] ==
                                                                      'y'
                                                              ? SizedBox(
                                                                  width: (MediaQuery.of(context)
                                                                              .size
                                                                              .width *
                                                                          0.3) -
                                                                      23.0,
                                                                  height: 75.0,
                                                                  child: Image(
                                                                    image: NetworkImage(getYoutubeThumbnail(
                                                                        postListData[index]
                                                                            [
                                                                            'sub_link'])),
                                                                    filterQuality:
                                                                        FilterQuality
                                                                            .high,
                                                                  ),
                                                                )
                                                              : Container(),
                                                        ],
                                                      ),
                                                    ],
                                                  ),
                                                )
                                              : postListData[index]['type'] == 5
                                                  ? Column(
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                          margin:
                                                              const EdgeInsets
                                                                  .symmetric(
                                                                  vertical:
                                                                      12.0),
                                                          child:
                                                              CustomTextBuilder(
                                                            text: postListData[
                                                                index]['title'],
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textWhite1(),
                                                            fontSize: 19.0.sp,
                                                            fontWeight:
                                                                FontWeight.w700,
                                                          ),
                                                        ),
                                                      ],
                                                    )
                                                  : Container(),
                                    ),
                                  ),
                                  // 좋아요, 댓글, 선물, 공유, 더보기 버튼
                                  Row(
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceBetween,
                                    children: [
                                      // 좋아요
                                      MaterialButton(
                                        onPressed: () async {
                                          final _prefs = await SharedPreferences
                                              .getInstance();

                                          if (!postListData[index]['isLike']) {
                                            AddLikeSenderAPI()
                                                .add(
                                                    accesToken:
                                                        _prefs.getString(
                                                            'AccessToken')!,
                                                    postIndex:
                                                        postListData[index]
                                                            ['post_index'])
                                                .then((res) {
                                              if (res.result['status'] ==
                                                  10800) {
                                                setState(() {
                                                  postListData[index]['like']++;
                                                  postListData[index]
                                                      ['isLike'] = true;
                                                });
                                              }
                                            });
                                          } else {
                                            CancelLikeSenderAPI()
                                                .cancel(
                                                    accesToken:
                                                        _prefs.getString(
                                                            'AccessToken')!,
                                                    postIndex:
                                                        postListData[index]
                                                            ['post_index'])
                                                .then((res) {
                                              if (res.result['status'] ==
                                                  10805) {
                                                setState(() {
                                                  postListData[index]['like']--;
                                                  postListData[index]
                                                      ['isLike'] = false;
                                                });
                                              }
                                            });
                                          }
                                        },
                                        child: Row(
                                          children: [
                                            SvgAssets(
                                              image: 'assets/icon/like.svg',
                                              color: postListData[index]
                                                      ['isLike']
                                                  ? ColorsConfig().primary()
                                                  : ColorsConfig().textBlack1(),
                                              width: 18.0,
                                              height: 18.0,
                                            ),
                                            const SizedBox(width: 10.0),
                                            CustomTextBuilder(
                                              text: numberFormat.format(
                                                  postListData[index]['like'] +
                                                      addLikeCount),
                                              fontColor:
                                                  ColorsConfig().textBlack1(),
                                              fontSize: 13.0.sp,
                                              fontWeight: FontWeight.w600,
                                            ),
                                          ],
                                        ),
                                      ),
                                      // 댓글
                                      MaterialButton(
                                        onPressed: () {
                                          if (postListData[index]['type'] ==
                                              4) {
                                            Navigator.push(
                                              context,
                                              MaterialPageRoute(
                                                builder: (context) =>
                                                    NewsDetailScreen(
                                                  postIndex: postListData[index]
                                                      ['post_index'],
                                                  postType: postListData[index]
                                                      ['type'],
                                                ),
                                              ),
                                            ).then((returns) async {
                                              if (returns != null) {
                                                if (returns['ret']) {
                                                  setState(() {
                                                    postListData.remove(
                                                        postListData[index]);
                                                    currentPage.removeAt(index);
                                                  });
                                                }
                                              } else {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                PostDetailDataAPI()
                                                    .detail(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!,
                                                        postIndex:
                                                            postListData[index]
                                                                ['post_index'])
                                                    .then((value) {
                                                  setState(() {
                                                    postListData[index] =
                                                        value.result;
                                                  });
                                                });
                                              }
                                            });
                                          } else if (postListData[index]
                                                  ['type'] ==
                                              5) {
                                            Navigator.push(
                                              context,
                                              MaterialPageRoute(
                                                builder: (context) =>
                                                    VoteDetailScreen(
                                                  postIndex: postListData[index]
                                                      ['post_index'],
                                                  postType: postListData[index]
                                                      ['type'],
                                                ),
                                              ),
                                            ).then((returns) async {
                                              if (returns != null) {
                                                if (returns['ret']) {
                                                  setState(() {
                                                    postListData.remove(
                                                        postListData[index]);
                                                    currentPage.removeAt(index);
                                                  });
                                                }
                                              } else {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                PostDetailDataAPI()
                                                    .detail(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!,
                                                        postIndex:
                                                            postListData[index]
                                                                ['post_index'])
                                                    .then((value) {
                                                  setState(() {
                                                    postListData[index] =
                                                        value.result;
                                                  });
                                                });
                                              }
                                            });
                                          } else {
                                            Navigator.push(
                                              context,
                                              MaterialPageRoute(
                                                builder: (context) =>
                                                    PostingDetailScreen(
                                                  postIndex: postListData[index]
                                                      ['post_index'],
                                                  postType: postListData[index]
                                                      ['type'],
                                                ),
                                              ),
                                            ).then((returns) async {
                                              if (returns != null) {
                                                if (returns['ret']) {
                                                  setState(() {
                                                    postListData.remove(
                                                        postListData[index]);
                                                    currentPage.removeAt(index);
                                                  });
                                                }
                                              } else {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                PostDetailDataAPI()
                                                    .detail(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!,
                                                        postIndex:
                                                            postListData[index]
                                                                ['post_index'])
                                                    .then((value) {
                                                  setState(() {
                                                    postListData[index] =
                                                        value.result;
                                                  });
                                                });
                                              }
                                            });
                                          }
                                        },
                                        child: Row(
                                          children: [
                                            SvgAssets(
                                              image: 'assets/icon/reply.svg',
                                              color:
                                                  ColorsConfig().textBlack1(),
                                              width: 18.0,
                                              height: 18.0,
                                            ),
                                            const SizedBox(width: 10.0),
                                            CustomTextBuilder(
                                              text: numberFormat.format(
                                                  postListData[index]['reply']),
                                              fontColor:
                                                  ColorsConfig().textBlack1(),
                                              fontSize: 13.0.sp,
                                              fontWeight: FontWeight.w600,
                                            ),
                                          ],
                                        ),
                                      ),
                                      // 선물
                                      MaterialButton(
                                        onPressed: () async {
                                          final _prefs = await SharedPreferences
                                              .getInstance();

                                          GetGiftListDataAPI()
                                              .gift(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!)
                                              .then((gifts) {
                                            bool _hasClick = false;

                                            showModalBottomSheet(
                                                context: context,
                                                backgroundColor: ColorsConfig()
                                                    .subBackground1(),
                                                isScrollControlled: true,
                                                shape:
                                                    const RoundedRectangleBorder(
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    topLeft:
                                                        Radius.circular(12.0),
                                                    topRight:
                                                        Radius.circular(12.0),
                                                  ),
                                                ),
                                                builder:
                                                    (BuildContext context) {
                                                  int _giftTabIndex = 0;

                                                  List<dynamic> _trophy = [];
                                                  List<dynamic> _reaction = [];
                                                  List<dynamic> _neckTrophy =
                                                      [];

                                                  Map<String, dynamic>
                                                      _selectedGift = {};

                                                  var _giftTabController =
                                                      TabController(
                                                    length: 4,
                                                    vsync: this,
                                                  );
                                                  _giftTabController
                                                      .addListener(() {
                                                    if (_giftTabController
                                                            .indexIsChanging ||
                                                        _giftTabController
                                                                .index !=
                                                            _giftTabIndex) {
                                                      setState(() {
                                                        _giftTabIndex =
                                                            _giftTabController
                                                                .index;
                                                      });
                                                    }
                                                  });

                                                  for (int i = 0;
                                                      i < gifts.result.length;
                                                      i++) {
                                                    if (gifts.result[i]
                                                            ['item_type'] ==
                                                        0) {
                                                      _trophy
                                                          .add(gifts.result[i]);
                                                    } else if (gifts.result[i]
                                                            ['item_type'] ==
                                                        1) {
                                                      _reaction
                                                          .add(gifts.result[i]);
                                                    } else if (gifts.result[i]
                                                            ['item_type'] ==
                                                        2) {
                                                      _neckTrophy
                                                          .add(gifts.result[i]);
                                                    }
                                                  }

                                                  return StatefulBuilder(
                                                    builder: (context, state) {
                                                      return Container(
                                                        height: _hasClick
                                                            ? MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .height /
                                                                1.72
                                                            : MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .height /
                                                                2,
                                                        decoration:
                                                            const BoxDecoration(
                                                          borderRadius:
                                                              BorderRadius.only(
                                                            topLeft:
                                                                Radius.circular(
                                                                    12.0),
                                                            topRight:
                                                                Radius.circular(
                                                                    12.0),
                                                          ),
                                                        ),
                                                        child: Column(
                                                          children: [
                                                            Container(
                                                              width: 50.0,
                                                              height: 4.0,
                                                              margin:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      vertical:
                                                                          8.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .textBlack2(),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            100.0),
                                                              ),
                                                            ),
                                                            // 선물하기 타이틀
                                                            Row(
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .spaceBetween,
                                                              children: [
                                                                Container(
                                                                  padding:
                                                                      const EdgeInsets
                                                                          .fromLTRB(
                                                                          20.0,
                                                                          15.0,
                                                                          20.0,
                                                                          10.0),
                                                                  alignment:
                                                                      Alignment
                                                                          .centerLeft,
                                                                  child:
                                                                      CustomTextBuilder(
                                                                    text: TextConstant
                                                                        .sendGiftText,
                                                                    fontColor:
                                                                        ColorsConfig()
                                                                            .textWhite1(),
                                                                    fontSize:
                                                                        22.0.sp,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w700,
                                                                  ),
                                                                ),
                                                                Container(
                                                                  margin: const EdgeInsets
                                                                      .only(
                                                                      right:
                                                                          15.0),
                                                                  child:
                                                                      const HoldingBalanceWidget(),
                                                                ),
                                                              ],
                                                            ),
                                                            // 탭바
                                                            Container(
                                                              width:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                              decoration:
                                                                  BoxDecoration(
                                                                border: Border(
                                                                  bottom:
                                                                      BorderSide(
                                                                    width: 0.5,
                                                                    color: ColorsConfig()
                                                                        .border1(),
                                                                  ),
                                                                ),
                                                              ),
                                                              child: TabBar(
                                                                controller:
                                                                    _giftTabController,
                                                                isScrollable:
                                                                    true,
                                                                padding: const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        20.0),
                                                                indicatorColor:
                                                                    ColorsConfig()
                                                                        .primary(),
                                                                unselectedLabelColor:
                                                                    ColorsConfig()
                                                                        .textWhite1(),
                                                                unselectedLabelStyle:
                                                                    TextStyle(
                                                                  fontSize:
                                                                      16.0.sp,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w400,
                                                                ),
                                                                labelColor:
                                                                    ColorsConfig()
                                                                        .primary(),
                                                                labelStyle:
                                                                    TextStyle(
                                                                  fontSize:
                                                                      16.0.sp,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w700,
                                                                ),
                                                                onTap: (_) {
                                                                  state(() {
                                                                    _hasClick =
                                                                        false;
                                                                    _selectedGift =
                                                                        {};
                                                                  });
                                                                },
                                                                tabs: [
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .allText,
                                                                    ),
                                                                  ),
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .trophyText,
                                                                    ),
                                                                  ),
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .reactionText,
                                                                    ),
                                                                  ),
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text:
                                                                          '메달',
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            Expanded(
                                                              child: Padding(
                                                                padding: !_hasClick
                                                                    ? const EdgeInsets
                                                                        .fromLTRB(
                                                                        25.0,
                                                                        25.0,
                                                                        15.0,
                                                                        20.0)
                                                                    : const EdgeInsets
                                                                        .fromLTRB(
                                                                        25.0,
                                                                        25.0,
                                                                        15.0,
                                                                        0.0),
                                                                child:
                                                                    TabBarView(
                                                                  controller:
                                                                      _giftTabController,
                                                                  physics:
                                                                      const NeverScrollableScrollPhysics(),
                                                                  children: [
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              gifts.result.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": gifts.result[index]['item_index'],
                                                                                      "item_type": gifts.result[index]['item_type'],
                                                                                      "item_type_name": gifts.result[index]['item_type_name'],
                                                                                      "url": gifts.result[index]['url'],
                                                                                      "description": gifts.result[index]['description'],
                                                                                      "price": gifts.result[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 0 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: Column(
                                                                                  children: [
                                                                                    Image(
                                                                                      image: NetworkImage(
                                                                                        gifts.result[index]['url'],
                                                                                      ),
                                                                                      filterQuality: FilterQuality.high,
                                                                                      width: 65.0.w,
                                                                                      height: 65.0.h,
                                                                                    ),
                                                                                    Container(
                                                                                      margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                      child: CustomTextBuilder(
                                                                                        text: '${gifts.result[index]['price']}',
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w400,
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              _trophy.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": _trophy[index]['item_index'],
                                                                                      "item_type": _trophy[index]['item_type'],
                                                                                      "item_type_name": _trophy[index]['item_type_name'],
                                                                                      "url": _trophy[index]['url'],
                                                                                      "description": _trophy[index]['description'],
                                                                                      "price": _trophy[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 1 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: _trophy[index]['item_type'] == 0
                                                                                    ? Column(
                                                                                        children: [
                                                                                          Image(
                                                                                            image: NetworkImage(
                                                                                              _trophy[index]['url'],
                                                                                            ),
                                                                                            filterQuality: FilterQuality.high,
                                                                                            width: 65.0.w,
                                                                                            height: 65.0.h,
                                                                                          ),
                                                                                          Container(
                                                                                            margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                            child: CustomTextBuilder(
                                                                                              text: '${_trophy[index]['price']}',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      )
                                                                                    : null,
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              _reaction.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": _reaction[index]['item_index'],
                                                                                      "item_type": _reaction[index]['item_type'],
                                                                                      "item_type_name": _reaction[index]['item_type_name'],
                                                                                      "url": _reaction[index]['url'],
                                                                                      "description": _reaction[index]['description'],
                                                                                      "price": _reaction[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 2 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: _reaction[index]['item_type'] == 1
                                                                                    ? Column(
                                                                                        children: [
                                                                                          Image(
                                                                                            image: NetworkImage(
                                                                                              _reaction[index]['url'],
                                                                                            ),
                                                                                            filterQuality: FilterQuality.high,
                                                                                            width: 65.0.w,
                                                                                            height: 65.0.h,
                                                                                          ),
                                                                                          Container(
                                                                                            margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                            child: CustomTextBuilder(
                                                                                              text: '${_reaction[index]['price']}',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      )
                                                                                    : null,
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              _neckTrophy.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": _neckTrophy[index]['item_index'],
                                                                                      "item_type": _neckTrophy[index]['item_type'],
                                                                                      "item_type_name": _neckTrophy[index]['item_type_name'],
                                                                                      "url": _neckTrophy[index]['url'],
                                                                                      "description": _neckTrophy[index]['description'],
                                                                                      "price": _neckTrophy[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 3 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: _neckTrophy[index]['item_type'] == 2
                                                                                    ? Column(
                                                                                        children: [
                                                                                          Image(
                                                                                            image: NetworkImage(
                                                                                              _neckTrophy[index]['url'],
                                                                                            ),
                                                                                            filterQuality: FilterQuality.high,
                                                                                            width: 65.0.w,
                                                                                            height: 65.0.h,
                                                                                          ),
                                                                                          Container(
                                                                                            margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                            child: CustomTextBuilder(
                                                                                              text: '${_neckTrophy[index]['price']}',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      )
                                                                                    : null,
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ),
                                                            _hasClick == true
                                                                ? Container(
                                                                    height:
                                                                        157.0,
                                                                    padding: const EdgeInsets
                                                                        .fromLTRB(
                                                                        20.0,
                                                                        10.0,
                                                                        20.0,
                                                                        30.0),
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: ColorsConfig()
                                                                          .subBackground1(),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color:
                                                                              ColorsConfig().textWhite1(opacity: 0.16),
                                                                          blurRadius:
                                                                              10.0,
                                                                          offset: const Offset(
                                                                              0.0,
                                                                              -2.0),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        Column(
                                                                      children: [
                                                                        Row(
                                                                          children: [
                                                                            Image(
                                                                              image: NetworkImage(
                                                                                '${_selectedGift['url']}',
                                                                              ),
                                                                              filterQuality: FilterQuality.high,
                                                                              width: 65.0.w,
                                                                              height: 65.0.h,
                                                                            ),
                                                                            const SizedBox(width: 32.0),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                CustomTextBuilder(
                                                                                  text: '${_selectedGift['description']}',
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 16.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                                CustomTextBuilder(
                                                                                  text: numberFormat.format(_selectedGift['price']),
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 12.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                        const SizedBox(
                                                                            height:
                                                                                10.0),
                                                                        InkWell(
                                                                          onTap:
                                                                              () {
                                                                            if (_selectedGift['price'] ==
                                                                                0) {
                                                                              SendGiftDataAPI().gift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: postListData[index]['post_index']).then((value) {
                                                                                int? _existIndex;

                                                                                switch (value.result['status']) {
                                                                                  case 10200:
                                                                                    setState(() {
                                                                                      if (postListData[index]['gift'].length == 0) {
                                                                                        postListData[index]['gift'].add({
                                                                                          "image": _selectedGift['url'],
                                                                                          "gift_count": 1,
                                                                                        });
                                                                                      } else {
                                                                                        for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                          if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                            _existIndex = i;
                                                                                            break;
                                                                                          }
                                                                                        }

                                                                                        if (_existIndex != null) {
                                                                                          postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                        } else {
                                                                                          postListData[index]['gift'].insert(0, {
                                                                                            "image": _selectedGift['url'],
                                                                                            "gift_count": 1,
                                                                                          });
                                                                                        }
                                                                                      }
                                                                                    });
                                                                                    Navigator.pop(context);
                                                                                    break;
                                                                                  case 10201:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText1,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10202:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText2,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10203:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText3,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10204:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText4,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                }
                                                                              });
                                                                            } else {
                                                                              SendPricedGiftDataAPI().pricedGift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: postListData[index]['post_index']).then((value) {
                                                                                int? _existIndex;

                                                                                switch (value.result['status']) {
                                                                                  case 10201:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText1,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10202:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText2,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10203:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText3,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10210:
                                                                                    setState(() {
                                                                                      if (postListData[index]['gift'].length == 0) {
                                                                                        postListData[index]['gift'].add({
                                                                                          "image": _selectedGift['url'],
                                                                                          "gift_count": 1,
                                                                                        });
                                                                                      } else {
                                                                                        for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                          if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                            _existIndex = i;
                                                                                            break;
                                                                                          }
                                                                                        }

                                                                                        if (_existIndex != null) {
                                                                                          postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                        } else {
                                                                                          postListData[index]['gift'].insert(0, {
                                                                                            "image": _selectedGift['url'],
                                                                                            "gift_count": 1,
                                                                                          });
                                                                                        }
                                                                                      }
                                                                                    });
                                                                                    Navigator.pop(context);
                                                                                    break;
                                                                                  case 10211:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText5,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10212:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText6,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                }
                                                                              });
                                                                            }
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            height:
                                                                                42.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              // color: ColorsConfig().primary(),
                                                                              borderRadius: BorderRadius.circular(100.0),
                                                                              gradient: LinearGradient(
                                                                                colors: [
                                                                                  ColorsConfig().avatarButtonBackground1(),
                                                                                  ColorsConfig().avatarButtonBackground2(),
                                                                                ],
                                                                                begin: Alignment.centerLeft,
                                                                                end: Alignment.centerRight,
                                                                              ),
                                                                            ),
                                                                            child:
                                                                                Center(
                                                                              child: CustomTextBuilder(
                                                                                text: TextConstant.sendText,
                                                                                fontColor: ColorsConfig().background(),
                                                                                fontSize: 16.0.sp,
                                                                                fontWeight: FontWeight.w700,
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  )
                                                                : Container(),
                                                          ],
                                                        ),
                                                      );
                                                    },
                                                  );
                                                });
                                          });
                                        },
                                        child: SvgAssets(
                                          image: 'assets/icon/gift.svg',
                                          color: ColorsConfig().textBlack1(),
                                          width: 18.0,
                                          height: 18.0,
                                        ),
                                      ),
                                      // 공유
                                      MaterialButton(
                                        onPressed: () async {
                                          var shortLink = await DeepLinkBuilder()
                                              .getShortLink(
                                                  'share',
                                                  '${postListData[index]['post_index']}',
                                                  postListData[index]['type']);

                                          Share.share(
                                            '${postListData[index]['title']}\n$shortLink',
                                            sharePositionOrigin: Rect.fromLTWH(
                                                0,
                                                0,
                                                MediaQuery.of(context)
                                                    .size
                                                    .width,
                                                MediaQuery.of(context)
                                                        .size
                                                        .height /
                                                    2),
                                          );
                                        },
                                        child: SvgAssets(
                                          image: 'assets/icon/share.svg',
                                          color: ColorsConfig().textBlack1(),
                                          width: 18.0,
                                          height: 18.0,
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          ],
                        );
                      }

                      return Container(
                        decoration: BoxDecoration(
                          color: ColorsConfig().subBackground1(),
                          border: index != postListData.length - 1
                              ? Border(
                                  bottom: BorderSide(
                                    width: 0.5,
                                    color: ColorsConfig().border1(),
                                  ),
                                )
                              : null,
                        ),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            // 유저 이미지, 닉네임, 날짜, 더보기 버튼
                            Padding(
                              padding: const EdgeInsets.fromLTRB(
                                  20.0, 13.4, 20.0, 0.0),
                              child: Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceBetween,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  InkWell(
                                    onTap: () {
                                      if (postListData[index]['isMe']) {
                                        Navigator.pushNamed(
                                            context, '/my_profile',
                                            arguments: {
                                              'onNavigator': true,
                                            });
                                      } else {
                                        Navigator.pushNamed(
                                            context, '/your_profile',
                                            arguments: {
                                              'user_index': postListData[index]
                                                  ['user_index'],
                                              'user_nickname':
                                                  postListData[index]['nick'],
                                            }).then((_) async {
                                          final _prefs = await SharedPreferences
                                              .getInstance();

                                          GetSubscribePostListAPI()
                                              .subscribePostList(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!)
                                              .then((value) {
                                            setState(() {
                                              currentPage2.clear();
                                              getSubscribePostListData =
                                                  value.result;
                                              for (int i = 0;
                                                  i <
                                                      value.result['list']
                                                          .length;
                                                  i++) {
                                                currentPage2.add(0);
                                              }
                                            });
                                          });
                                        });
                                      }
                                    },
                                    child: Row(
                                      children: [
                                        // 이미지
                                        Container(
                                          width: 42.0,
                                          height: 42.0,
                                          decoration: BoxDecoration(
                                            color: ColorsConfig()
                                                .userIconBackground(),
                                            borderRadius:
                                                BorderRadius.circular(21.0),
                                            image: DecorationImage(
                                              image: NetworkImage(
                                                postListData[index]
                                                    ['avatar_url'],
                                                scale: 5.5,
                                              ),
                                              filterQuality: FilterQuality.high,
                                              fit: BoxFit.none,
                                              alignment:
                                                  const Alignment(0.0, -0.3),
                                            ),
                                          ),
                                        ),
                                        Column(
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            SizedBox(
                                              width: MediaQuery.of(context)
                                                      .size
                                                      .width -
                                                  82.0,
                                              child: Row(
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceBetween,
                                                children: [
                                                  Row(
                                                    children: [
                                                      // 닉네임
                                                      Container(
                                                        margin: const EdgeInsets
                                                            .symmetric(
                                                            horizontal: 8.0),
                                                        child:
                                                            CustomTextBuilder(
                                                          text:
                                                              '${postListData[index]['nick']}',
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textWhite1(),
                                                          fontSize: 16.0.sp,
                                                          fontWeight:
                                                              FontWeight.w700,
                                                        ),
                                                      ),
                                                      // 날짜
                                                      CustomTextBuilder(
                                                        text: DateCalculatorWrapper()
                                                            .daysCalculator(
                                                                postListData[
                                                                        index]
                                                                    ['date']),
                                                        fontColor: ColorsConfig
                                                            .defaultGray,
                                                        fontSize: 12.0.sp,
                                                        fontWeight:
                                                            FontWeight.w400,
                                                        height: 1.8,
                                                      ),
                                                    ],
                                                  ),
                                                  InkWell(
                                                    onTap: () async {
                                                      final _prefs =
                                                          await SharedPreferences
                                                              .getInstance();

                                                      if (!hasTypeSelected) {
                                                        GetPostListAPI()
                                                            .list(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!,
                                                                category:
                                                                    postListData[
                                                                            index]
                                                                        [
                                                                        'type'])
                                                            .then((value) {
                                                          setState(() {
                                                            hasTypeSelected =
                                                                true;
                                                            selectedPostType =
                                                                postListData[
                                                                        index]
                                                                    ['type'];
                                                            currentPage.clear();
                                                            postListData = value
                                                                .result['data'];
                                                            for (int i = 0;
                                                                i <
                                                                    value
                                                                        .result[
                                                                            'data']
                                                                        .length;
                                                                i++) {
                                                              currentPage
                                                                  .add(0);
                                                            }
                                                            widget
                                                                .headlineScrollController
                                                                .jumpTo(0.0);
                                                          });
                                                        });
                                                      } else {
                                                        GetPostListAPI()
                                                            .list(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!)
                                                            .then((value) {
                                                          setState(() {
                                                            hasTypeSelected =
                                                                false;
                                                            selectedPostType =
                                                                0;
                                                            currentPage.clear();
                                                            postListData = value
                                                                .result['data'];
                                                            for (int i = 0;
                                                                i <
                                                                    value
                                                                        .result[
                                                                            'data']
                                                                        .length;
                                                                i++) {
                                                              currentPage
                                                                  .add(0);
                                                            }
                                                            widget
                                                                .headlineScrollController
                                                                .jumpTo(0.0);
                                                          });
                                                        });
                                                      }
                                                    },
                                                    child:
                                                        LabelCategoryWidgetBuilder(
                                                            data: postListData[
                                                                index]['type']),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            postListData[index]['gift']
                                                    .isNotEmpty
                                                ? InkWell(
                                                    onTap: () async {
                                                      final _prefs =
                                                          await SharedPreferences
                                                              .getInstance();

                                                      GetGiftHistoryListDataAPI()
                                                          .giftHistory(
                                                              accesToken: _prefs
                                                                  .getString(
                                                                      'AccessToken')!,
                                                              postIndex:
                                                                  postListData[
                                                                          index]
                                                                      [
                                                                      'post_index'])
                                                          .then((history) {
                                                        showModalBottomSheet(
                                                            context: context,
                                                            backgroundColor:
                                                                ColorsConfig()
                                                                    .subBackground1(),
                                                            shape:
                                                                const RoundedRectangleBorder(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .only(
                                                                topLeft: Radius
                                                                    .circular(
                                                                        12.0),
                                                                topRight: Radius
                                                                    .circular(
                                                                        12.0),
                                                              ),
                                                            ),
                                                            builder:
                                                                (BuildContext
                                                                    context) {
                                                              return SafeArea(
                                                                child:
                                                                    Container(
                                                                  decoration:
                                                                      const BoxDecoration(
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              12.0),
                                                                      topRight:
                                                                          Radius.circular(
                                                                              12.0),
                                                                    ),
                                                                  ),
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .min,
                                                                    children: [
                                                                      Container(
                                                                        width:
                                                                            50.0,
                                                                        height:
                                                                            4.0,
                                                                        margin: const EdgeInsets
                                                                            .symmetric(
                                                                            vertical:
                                                                                8.0),
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              ColorsConfig().textBlack2(),
                                                                          borderRadius:
                                                                              BorderRadius.circular(100.0),
                                                                        ),
                                                                      ),
                                                                      Center(
                                                                        child:
                                                                            Container(
                                                                          width: MediaQuery.of(context)
                                                                              .size
                                                                              .width,
                                                                          padding: const EdgeInsets
                                                                              .only(
                                                                              left: 20.0,
                                                                              top: 10.0,
                                                                              right: 20.0,
                                                                              bottom: 15.0),
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            border:
                                                                                Border(
                                                                              bottom: BorderSide(
                                                                                width: 0.5,
                                                                                color: ColorsConfig().border1(),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                          child:
                                                                              CustomTextBuilder(
                                                                            text:
                                                                                TextConstant.giftHistoryText,
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                18.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w600,
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Expanded(
                                                                        child: ListView.builder(
                                                                            itemCount: history.result['users'].length,
                                                                            itemBuilder: (context, historyIndex) {
                                                                              return Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                height: 65.0,
                                                                                padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                decoration: BoxDecoration(
                                                                                  border: Border(
                                                                                    bottom: BorderSide(
                                                                                      width: 0.5,
                                                                                      color: ColorsConfig().border1(),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: Row(
                                                                                        children: [
                                                                                          // 아바타 이미지
                                                                                          Container(
                                                                                            width: 35.0,
                                                                                            height: 35.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: ColorsConfig().userIconBackground(),
                                                                                              borderRadius: BorderRadius.circular(17.5),
                                                                                              image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                  ? DecorationImage(
                                                                                                      image: NetworkImage(
                                                                                                        history.result['users'][historyIndex]['avatar'],
                                                                                                        scale: 7.0,
                                                                                                      ),
                                                                                                      filterQuality: FilterQuality.high,
                                                                                                      fit: BoxFit.none,
                                                                                                      alignment: const Alignment(0.0, -0.3),
                                                                                                    )
                                                                                                  : null,
                                                                                            ),
                                                                                          ),
                                                                                          const SizedBox(width: 15.0),
                                                                                          CustomTextBuilder(
                                                                                            text: '${history.result['users'][historyIndex]['nick']}',
                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                            fontSize: 16.0.sp,
                                                                                            fontWeight: FontWeight.w400,
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    Expanded(
                                                                                      child: ListView.builder(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        itemCount: history.result['gifts'].length,
                                                                                        itemBuilder: (context, giftHistory) {
                                                                                          if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                            return Container();
                                                                                          }
                                                                                          return Row(
                                                                                            children: [
                                                                                              Image(
                                                                                                image: NetworkImage(
                                                                                                  history.result['gifts'][giftHistory]['image'],
                                                                                                ),
                                                                                              ),
                                                                                              const SizedBox(width: 4.0),
                                                                                              CustomTextBuilder(
                                                                                                text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                fontColor: ColorsConfig().textBlack2(),
                                                                                                fontSize: 12.0.sp,
                                                                                                fontWeight: FontWeight.w700,
                                                                                              ),
                                                                                              const SizedBox(width: 4.0),
                                                                                            ],
                                                                                          );
                                                                                        },
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            }),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              );
                                                            });
                                                      });
                                                    },
                                                    child:
                                                        !getPostListMoreBtnState[
                                                                index]
                                                            ? Container(
                                                                margin:
                                                                    const EdgeInsets
                                                                        .only(
                                                                        left:
                                                                            4.0,
                                                                        top:
                                                                            5.0),
                                                                child:
                                                                    SingleChildScrollView(
                                                                  physics:
                                                                      const NeverScrollableScrollPhysics(),
                                                                  scrollDirection:
                                                                      Axis.horizontal,
                                                                  child: Row(
                                                                    children: [
                                                                      Row(
                                                                        mainAxisSize:
                                                                            MainAxisSize.min,
                                                                        children: List.generate(
                                                                            postListData[index]['gift'].length > 4
                                                                                ? 4
                                                                                : postListData[index]['gift'].length,
                                                                            (giftIndex) {
                                                                          return Container(
                                                                            margin:
                                                                                const EdgeInsets.only(right: 8.0),
                                                                            child:
                                                                                Row(
                                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Container(
                                                                                  width: 24.0,
                                                                                  height: 24.0,
                                                                                  decoration: BoxDecoration(
                                                                                    borderRadius: BorderRadius.circular(9.0),
                                                                                  ),
                                                                                  child: Image(
                                                                                    image: NetworkImage(
                                                                                      postListData[index]['gift'][giftIndex]['image'],
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                CustomTextBuilder(
                                                                                  text: '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                                  fontColor: ColorsConfig.defaultGray,
                                                                                  fontSize: 12.0.sp,
                                                                                  fontWeight: FontWeight.w700,
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          );
                                                                        }),
                                                                      ),
                                                                      !getPostListMoreBtnState[index] &&
                                                                              postListData[index]['gift'].length > 4
                                                                          ? InkWell(
                                                                              onTap: () {
                                                                                setState(() {
                                                                                  getPostListMoreBtnState[index] = true;
                                                                                });
                                                                              },
                                                                              child: Padding(
                                                                                padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                                child: CustomTextBuilder(
                                                                                  text: TextConstant.moreReadText,
                                                                                  fontColor: ColorsConfig().textBlack2(),
                                                                                  fontSize: 14.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                              ),
                                                                            )
                                                                          : Container(),
                                                                    ],
                                                                  ),
                                                                ),
                                                              )
                                                            : Container(
                                                                margin:
                                                                    const EdgeInsets
                                                                        .only(
                                                                        left:
                                                                            4.0,
                                                                        top:
                                                                            5.0),
                                                                child: Wrap(
                                                                  children: List.generate(
                                                                      postListData[index]
                                                                              [
                                                                              'gift']
                                                                          .length,
                                                                      (giftIndex) {
                                                                    return Container(
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          right:
                                                                              8.0),
                                                                      child:
                                                                          Row(
                                                                        mainAxisAlignment:
                                                                            MainAxisAlignment.start,
                                                                        mainAxisSize:
                                                                            MainAxisSize.min,
                                                                        children: [
                                                                          Container(
                                                                            width:
                                                                                24.0,
                                                                            height:
                                                                                24.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              borderRadius: BorderRadius.circular(9.0),
                                                                            ),
                                                                            child:
                                                                                Image(
                                                                              image: NetworkImage(
                                                                                postListData[index]['gift'][giftIndex]['image'],
                                                                              ),
                                                                            ),
                                                                          ),
                                                                          CustomTextBuilder(
                                                                            text:
                                                                                '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                            fontColor:
                                                                                ColorsConfig().textBlack2(),
                                                                            fontSize:
                                                                                12.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w700,
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    );
                                                                  }),
                                                                ),
                                                              ),
                                                  )
                                                : Container(),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            // 내용 부분
                            Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 20.0),
                              child: InkWell(
                                onTap: () {
                                  if (postListData[index]['type'] == 4) {
                                    Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                        builder: (context) => NewsDetailScreen(
                                          postIndex: postListData[index]
                                              ['post_index'],
                                          postType: postListData[index]['type'],
                                        ),
                                      ),
                                    ).then((returns) async {
                                      if (returns != null) {
                                        if (returns['ret']) {
                                          setState(() {
                                            postListData
                                                .remove(postListData[index]);
                                            currentPage.removeAt(index);
                                          });
                                        }
                                      } else {
                                        final _prefs = await SharedPreferences
                                            .getInstance();

                                        PostDetailDataAPI()
                                            .detail(
                                                accesToken: _prefs
                                                    .getString('AccessToken')!,
                                                postIndex: postListData[index]
                                                    ['post_index'])
                                            .then((value) {
                                          setState(() {
                                            postListData[index] = value.result;
                                          });
                                        });
                                      }
                                    });
                                  } else if (postListData[index]['type'] == 5) {
                                    Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                        builder: (context) => VoteDetailScreen(
                                          postIndex: postListData[index]
                                              ['post_index'],
                                          postType: postListData[index]['type'],
                                        ),
                                      ),
                                    ).then((returns) async {
                                      if (returns != null) {
                                        if (returns['ret']) {
                                          setState(() {
                                            postListData
                                                .remove(postListData[index]);
                                            currentPage.removeAt(index);
                                          });
                                        }
                                      } else {
                                        final _prefs = await SharedPreferences
                                            .getInstance();

                                        PostDetailDataAPI()
                                            .detail(
                                                accesToken: _prefs
                                                    .getString('AccessToken')!,
                                                postIndex: postListData[index]
                                                    ['post_index'])
                                            .then((value) {
                                          setState(() {
                                            postListData[index] = value.result;
                                          });
                                        });
                                      }
                                    });
                                  } else {
                                    Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                        builder: (context) =>
                                            PostingDetailScreen(
                                          postIndex: postListData[index]
                                              ['post_index'],
                                          postType: postListData[index]['type'],
                                        ),
                                      ),
                                    ).then((returns) async {
                                      if (returns != null) {
                                        if (returns['ret']) {
                                          setState(() {
                                            postListData
                                                .remove(postListData[index]);
                                            currentPage.removeAt(index);
                                          });
                                        }
                                      } else {
                                        final _prefs = await SharedPreferences
                                            .getInstance();

                                        PostDetailDataAPI()
                                            .detail(
                                                accesToken: _prefs
                                                    .getString('AccessToken')!,
                                                postIndex: postListData[index]
                                                    ['post_index'])
                                            .then((value) {
                                          setState(() {
                                            postListData[index] = value.result;
                                          });
                                        });
                                      }
                                    });
                                  }
                                },
                                child: postListData[index]['type'] == 4
                                    ? Container(
                                        margin: const EdgeInsets.only(top: 6.0),
                                        child: Row(
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            SizedBox(
                                              height: 75.0,
                                              child: Column(
                                                children: [
                                                  SizedBox(
                                                    width:
                                                        (MediaQuery.of(context)
                                                                    .size
                                                                    .width *
                                                                0.75) -
                                                            56.0,
                                                    child: CustomTextBuilder(
                                                      text:
                                                          '${postListData[index]['title']}',
                                                      fontColor: ColorsConfig()
                                                          .textWhite1(),
                                                      fontSize: 19.0.sp,
                                                      fontWeight:
                                                          FontWeight.w700,
                                                      maxLines: 2,
                                                    ),
                                                  ),
                                                  SizedBox(
                                                    width:
                                                        (MediaQuery.of(context)
                                                                    .size
                                                                    .width *
                                                                0.75) -
                                                            56.0,
                                                    child: CustomTextBuilder(
                                                      text:
                                                          '${postListData[index]['description']}',
                                                      fontColor: ColorsConfig()
                                                          .textBlack3(),
                                                      fontSize: 17.0.sp,
                                                      fontWeight:
                                                          FontWeight.w400,
                                                      maxLines: 1,
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            InkWell(
                                              onTap: () {
                                                UrlLauncherBuilder().launchURL(
                                                    postListData[index]
                                                        ['link']);
                                              },
                                              child: Container(
                                                width: (MediaQuery.of(context)
                                                            .size
                                                            .width *
                                                        0.3) -
                                                    23.0,
                                                height: 75.0,
                                                decoration: BoxDecoration(
                                                  color: ColorsConfig()
                                                      .textBlack2(),
                                                  border: Border.all(
                                                    width: 0.5,
                                                    color: ColorsConfig()
                                                        .primary(),
                                                  ),
                                                  image: DecorationImage(
                                                    image: NetworkImage(
                                                      postListData[index]
                                                          ['news_image'],
                                                    ),
                                                    fit: BoxFit.cover,
                                                    filterQuality:
                                                        FilterQuality.high,
                                                  ),
                                                ),
                                                child: Stack(
                                                  children: [
                                                    Positioned(
                                                      right: 3.0,
                                                      bottom: 3.0,
                                                      child: Container(
                                                        width: 18.0,
                                                        height: 18.0,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: ColorsConfig()
                                                              .linkIconBackground(),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      9.0),
                                                        ),
                                                        child: Center(
                                                          child: SvgAssets(
                                                            image:
                                                                'assets/icon/link.svg',
                                                            color:
                                                                ColorsConfig()
                                                                    .primary(),
                                                            width: 12.0,
                                                            height: 12.0,
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      )
                                    : postListData[index]['type'] == 1 ||
                                            postListData[index]['type'] == 2 ||
                                            postListData[index]['type'] == 3
                                        ? Container(
                                            margin:
                                                const EdgeInsets.only(top: 6.0),
                                            child: Row(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceBetween,
                                              children: [
                                                SizedBox(
                                                  height: 75.0,
                                                  child: Column(
                                                    children: [
                                                      SizedBox(
                                                        width: postListData[
                                                                        index][
                                                                    'category'] !=
                                                                null
                                                            ? (MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .width *
                                                                    0.75) -
                                                                56.0
                                                            : MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width -
                                                                40.0,
                                                        child:
                                                            CustomTextBuilder(
                                                          text:
                                                              '${postListData[index]['title']}',
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textWhite1(),
                                                          fontSize: 19.0.sp,
                                                          fontWeight:
                                                              FontWeight.w700,
                                                          maxLines: 2,
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: postListData[
                                                                        index][
                                                                    'category'] !=
                                                                null
                                                            ? (MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .width *
                                                                    0.75) -
                                                                56.0
                                                            : MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width -
                                                                40.0,
                                                        child:
                                                            CustomTextBuilder(
                                                          text:
                                                              '${postListData[index]['description']}',
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textBlack3(),
                                                          fontSize: 17.0.sp,
                                                          fontWeight:
                                                              FontWeight.w400,
                                                          maxLines: 1,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                                Row(
                                                  children: [
                                                    postListData[index][
                                                                    'category'] !=
                                                                null &&
                                                            postListData[index][
                                                                    'category'] ==
                                                                'i'
                                                        ? SizedBox(
                                                            width: (MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .width *
                                                                    0.3) -
                                                                23.0,
                                                            height: 75.0,
                                                            child: postListData[index]
                                                                            [
                                                                            'image']
                                                                        .length >
                                                                    1
                                                                ? ConstrainedBox(
                                                                    constraints:
                                                                        BoxConstraints(
                                                                      maxHeight:
                                                                          MediaQuery.of(context).size.width *
                                                                              1.33,
                                                                    ),
                                                                    child: PageView
                                                                        .builder(
                                                                      controller:
                                                                          _pageController,
                                                                      itemCount:
                                                                          postListData[index]['image']
                                                                              .length,
                                                                      onPageChanged:
                                                                          (int
                                                                              page) {
                                                                        setState(
                                                                            () {
                                                                          currentPage[index] =
                                                                              page;
                                                                        });
                                                                      },
                                                                      itemBuilder:
                                                                          (context,
                                                                              imageIndex) {
                                                                        return Image(
                                                                            image:
                                                                                NetworkImage(
                                                                              postListData[index]['image'][imageIndex],
                                                                            ),
                                                                            fit:
                                                                                BoxFit.cover,
                                                                            filterQuality: FilterQuality.high,
                                                                            alignment: Alignment.center);
                                                                      },
                                                                    ),
                                                                  )
                                                                : SizedBox(
                                                                    width: (MediaQuery.of(context).size.width *
                                                                            0.3) -
                                                                        23.0,
                                                                    height:
                                                                        75.0,
                                                                    child: Image(
                                                                        image: NetworkImage(
                                                                          postListData[index]['image']
                                                                              [
                                                                              0],
                                                                        ),
                                                                        fit: BoxFit.cover,
                                                                        filterQuality: FilterQuality.high,
                                                                        alignment: Alignment.center),
                                                                  ),
                                                          )
                                                        : Container(),
                                                    postListData[index][
                                                                    'category'] !=
                                                                null &&
                                                            postListData[index][
                                                                    'category'] ==
                                                                'g'
                                                        ? SizedBox(
                                                            width: (MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .width *
                                                                    0.3) -
                                                                23.0,
                                                            height: 75.0,
                                                            child: Image(
                                                              image:
                                                                  NetworkImage(
                                                                postListData[
                                                                        index][
                                                                    'sub_link'],
                                                              ),
                                                              fit: BoxFit.cover,
                                                              filterQuality:
                                                                  FilterQuality
                                                                      .high,
                                                            ),
                                                          )
                                                        : Container(),
                                                    postListData[index][
                                                                    'category'] !=
                                                                null &&
                                                            postListData[index][
                                                                    'category'] ==
                                                                'y'
                                                        ? SizedBox(
                                                            width: (MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .width *
                                                                    0.3) -
                                                                23.0,
                                                            height: 75.0,
                                                            child: Image(
                                                              image: NetworkImage(
                                                                  getYoutubeThumbnail(
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'sub_link'])),
                                                              filterQuality:
                                                                  FilterQuality
                                                                      .high,
                                                            ),
                                                          )
                                                        : Container(),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          )
                                        : postListData[index]['type'] == 5
                                            ? Column(
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  Container(
                                                    width:
                                                        MediaQuery.of(context)
                                                            .size
                                                            .width,
                                                    margin: const EdgeInsets
                                                        .symmetric(
                                                        vertical: 12.0),
                                                    child: CustomTextBuilder(
                                                      text: postListData[index]
                                                          ['title'],
                                                      fontColor: ColorsConfig()
                                                          .textWhite1(),
                                                      fontSize: 19.0.sp,
                                                      fontWeight:
                                                          FontWeight.w700,
                                                    ),
                                                  ),
                                                ],
                                              )
                                            : Container(),
                              ),
                            ),
                            // 좋아요, 댓글, 선물, 공유, 더보기 버튼
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                // 좋아요
                                MaterialButton(
                                  onPressed: () async {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    if (!postListData[index]['isLike']) {
                                      AddLikeSenderAPI()
                                          .add(
                                              accesToken: _prefs
                                                  .getString('AccessToken')!,
                                              postIndex: postListData[index]
                                                  ['post_index'])
                                          .then((res) {
                                        if (res.result['status'] == 10800) {
                                          setState(() {
                                            postListData[index]['like']++;
                                            postListData[index]['isLike'] =
                                                true;
                                          });
                                        }
                                      });
                                    } else {
                                      CancelLikeSenderAPI()
                                          .cancel(
                                              accesToken: _prefs
                                                  .getString('AccessToken')!,
                                              postIndex: postListData[index]
                                                  ['post_index'])
                                          .then((res) {
                                        if (res.result['status'] == 10805) {
                                          setState(() {
                                            postListData[index]['like']--;
                                            postListData[index]['isLike'] =
                                                false;
                                          });
                                        }
                                      });
                                    }
                                  },
                                  child: Row(
                                    children: [
                                      SvgAssets(
                                        image: 'assets/icon/like.svg',
                                        color: postListData[index]['isLike']
                                            ? ColorsConfig().primary()
                                            : ColorsConfig().textBlack1(),
                                        width: 18.0,
                                        height: 18.0,
                                      ),
                                      const SizedBox(width: 10.0),
                                      CustomTextBuilder(
                                        text: numberFormat.format(
                                            postListData[index]['like'] +
                                                addLikeCount),
                                        fontColor: ColorsConfig().textBlack1(),
                                        fontSize: 13.0.sp,
                                        fontWeight: FontWeight.w600,
                                      ),
                                    ],
                                  ),
                                ),
                                // 댓글
                                MaterialButton(
                                  onPressed: () {
                                    if (postListData[index]['type'] == 4) {
                                      Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                          builder: (context) =>
                                              NewsDetailScreen(
                                            postIndex: postListData[index]
                                                ['post_index'],
                                            postType: postListData[index]
                                                ['type'],
                                          ),
                                        ),
                                      ).then((returns) async {
                                        if (returns != null) {
                                          if (returns['ret']) {
                                            setState(() {
                                              postListData
                                                  .remove(postListData[index]);
                                              currentPage.removeAt(index);
                                            });
                                          }
                                        } else {
                                          final _prefs = await SharedPreferences
                                              .getInstance();

                                          PostDetailDataAPI()
                                              .detail(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!,
                                                  postIndex: postListData[index]
                                                      ['post_index'])
                                              .then((value) {
                                            setState(() {
                                              postListData[index] =
                                                  value.result;
                                            });
                                          });
                                        }
                                      });
                                    } else if (postListData[index]['type'] ==
                                        5) {
                                      Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                          builder: (context) =>
                                              VoteDetailScreen(
                                            postIndex: postListData[index]
                                                ['post_index'],
                                            postType: postListData[index]
                                                ['type'],
                                          ),
                                        ),
                                      ).then((returns) async {
                                        if (returns != null) {
                                          if (returns['ret']) {
                                            setState(() {
                                              postListData
                                                  .remove(postListData[index]);
                                              currentPage.removeAt(index);
                                            });
                                          }
                                        } else {
                                          final _prefs = await SharedPreferences
                                              .getInstance();

                                          PostDetailDataAPI()
                                              .detail(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!,
                                                  postIndex: postListData[index]
                                                      ['post_index'])
                                              .then((value) {
                                            setState(() {
                                              postListData[index] =
                                                  value.result;
                                            });
                                          });
                                        }
                                      });
                                    } else {
                                      Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                          builder: (context) =>
                                              PostingDetailScreen(
                                            postIndex: postListData[index]
                                                ['post_index'],
                                            postType: postListData[index]
                                                ['type'],
                                          ),
                                        ),
                                      ).then((returns) async {
                                        if (returns != null) {
                                          if (returns['ret']) {
                                            setState(() {
                                              postListData
                                                  .remove(postListData[index]);
                                              currentPage.removeAt(index);
                                            });
                                          }
                                        } else {
                                          final _prefs = await SharedPreferences
                                              .getInstance();

                                          PostDetailDataAPI()
                                              .detail(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!,
                                                  postIndex: postListData[index]
                                                      ['post_index'])
                                              .then((value) {
                                            setState(() {
                                              postListData[index] =
                                                  value.result;
                                            });
                                          });
                                        }
                                      });
                                    }
                                  },
                                  child: Row(
                                    children: [
                                      SvgAssets(
                                        image: 'assets/icon/reply.svg',
                                        color: ColorsConfig().textBlack1(),
                                        width: 18.0,
                                        height: 18.0,
                                      ),
                                      const SizedBox(width: 10.0),
                                      CustomTextBuilder(
                                        text: numberFormat.format(
                                            postListData[index]['reply']),
                                        fontColor: ColorsConfig().textBlack1(),
                                        fontSize: 13.0.sp,
                                        fontWeight: FontWeight.w600,
                                      ),
                                    ],
                                  ),
                                ),
                                // 선물
                                MaterialButton(
                                  onPressed: () async {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    GetGiftListDataAPI()
                                        .gift(
                                            accesToken: _prefs
                                                .getString('AccessToken')!)
                                        .then((gifts) {
                                      bool _hasClick = false;

                                      showModalBottomSheet(
                                          context: context,
                                          backgroundColor:
                                              ColorsConfig().subBackground1(),
                                          isScrollControlled: true,
                                          shape: const RoundedRectangleBorder(
                                            borderRadius: BorderRadius.only(
                                              topLeft: Radius.circular(12.0),
                                              topRight: Radius.circular(12.0),
                                            ),
                                          ),
                                          builder: (BuildContext context) {
                                            int _giftTabIndex = 0;

                                            List<dynamic> _trophy = [];
                                            List<dynamic> _reaction = [];
                                            List<dynamic> _neckTrophy = [];

                                            Map<String, dynamic> _selectedGift =
                                                {};

                                            var _giftTabController =
                                                TabController(
                                              length: 4,
                                              vsync: this,
                                            );
                                            _giftTabController.addListener(() {
                                              if (_giftTabController
                                                      .indexIsChanging ||
                                                  _giftTabController.index !=
                                                      _giftTabIndex) {
                                                setState(() {
                                                  _giftTabIndex =
                                                      _giftTabController.index;
                                                });
                                              }
                                            });

                                            for (int i = 0;
                                                i < gifts.result.length;
                                                i++) {
                                              if (gifts.result[i]
                                                      ['item_type'] ==
                                                  0) {
                                                _trophy.add(gifts.result[i]);
                                              } else if (gifts.result[i]
                                                      ['item_type'] ==
                                                  1) {
                                                _reaction.add(gifts.result[i]);
                                              } else if (gifts.result[i]
                                                      ['item_type'] ==
                                                  2) {
                                                _neckTrophy
                                                    .add(gifts.result[i]);
                                              }
                                            }

                                            return StatefulBuilder(
                                              builder: (context, state) {
                                                return Container(
                                                  height: _hasClick
                                                      ? MediaQuery.of(context)
                                                              .size
                                                              .height /
                                                          1.72
                                                      : MediaQuery.of(context)
                                                              .size
                                                              .height /
                                                          2,
                                                  decoration:
                                                      const BoxDecoration(
                                                    borderRadius:
                                                        BorderRadius.only(
                                                      topLeft:
                                                          Radius.circular(12.0),
                                                      topRight:
                                                          Radius.circular(12.0),
                                                    ),
                                                  ),
                                                  child: Column(
                                                    children: [
                                                      Container(
                                                        width: 50.0,
                                                        height: 4.0,
                                                        margin: const EdgeInsets
                                                            .symmetric(
                                                            vertical: 8.0),
                                                        decoration:
                                                            BoxDecoration(
                                                          color: ColorsConfig()
                                                              .textBlack2(),
                                                          borderRadius:
                                                              BorderRadius
                                                                  .circular(
                                                                      100.0),
                                                        ),
                                                      ),
                                                      // 선물하기 타이틀
                                                      Row(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceBetween,
                                                        children: [
                                                          Container(
                                                            padding:
                                                                const EdgeInsets
                                                                    .fromLTRB(
                                                                    20.0,
                                                                    15.0,
                                                                    20.0,
                                                                    10.0),
                                                            alignment: Alignment
                                                                .centerLeft,
                                                            child:
                                                                CustomTextBuilder(
                                                              text: TextConstant
                                                                  .sendGiftText,
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textWhite1(),
                                                              fontSize: 22.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w700,
                                                            ),
                                                          ),
                                                          Container(
                                                            margin:
                                                                const EdgeInsets
                                                                    .only(
                                                                    right:
                                                                        15.0),
                                                            child:
                                                                const HoldingBalanceWidget(),
                                                          ),
                                                        ],
                                                      ),
                                                      // 탭바
                                                      Container(
                                                        width: MediaQuery.of(
                                                                context)
                                                            .size
                                                            .width,
                                                        decoration:
                                                            BoxDecoration(
                                                          border: Border(
                                                            bottom: BorderSide(
                                                              width: 0.5,
                                                              color:
                                                                  ColorsConfig()
                                                                      .border1(),
                                                            ),
                                                          ),
                                                        ),
                                                        child: TabBar(
                                                          controller:
                                                              _giftTabController,
                                                          isScrollable: true,
                                                          padding:
                                                              const EdgeInsets
                                                                  .symmetric(
                                                                  horizontal:
                                                                      20.0),
                                                          indicatorColor:
                                                              ColorsConfig()
                                                                  .primary(),
                                                          unselectedLabelColor:
                                                              ColorsConfig()
                                                                  .textWhite1(),
                                                          unselectedLabelStyle:
                                                              TextStyle(
                                                            fontSize: 16.0.sp,
                                                            fontWeight:
                                                                FontWeight.w400,
                                                          ),
                                                          labelColor:
                                                              ColorsConfig()
                                                                  .primary(),
                                                          labelStyle: TextStyle(
                                                            fontSize: 16.0.sp,
                                                            fontWeight:
                                                                FontWeight.w700,
                                                          ),
                                                          onTap: (_) {
                                                            state(() {
                                                              _hasClick = false;
                                                              _selectedGift =
                                                                  {};
                                                            });
                                                          },
                                                          tabs: [
                                                            Tab(
                                                              child:
                                                                  CustomTextBuilder(
                                                                text:
                                                                    TextConstant
                                                                        .allText,
                                                              ),
                                                            ),
                                                            Tab(
                                                              child:
                                                                  CustomTextBuilder(
                                                                text: TextConstant
                                                                    .trophyText,
                                                              ),
                                                            ),
                                                            Tab(
                                                              child:
                                                                  CustomTextBuilder(
                                                                text: TextConstant
                                                                    .reactionText,
                                                              ),
                                                            ),
                                                            Tab(
                                                              child:
                                                                  CustomTextBuilder(
                                                                text: '메달',
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      Expanded(
                                                        child: Padding(
                                                          padding: !_hasClick
                                                              ? const EdgeInsets
                                                                  .fromLTRB(
                                                                  25.0,
                                                                  25.0,
                                                                  15.0,
                                                                  20.0)
                                                              : const EdgeInsets
                                                                  .fromLTRB(
                                                                  25.0,
                                                                  25.0,
                                                                  15.0,
                                                                  0.0),
                                                          child: TabBarView(
                                                            controller:
                                                                _giftTabController,
                                                            physics:
                                                                const NeverScrollableScrollPhysics(),
                                                            children: [
                                                              ListView(
                                                                children: [
                                                                  Wrap(
                                                                    children: List.generate(
                                                                        gifts
                                                                            .result
                                                                            .length,
                                                                        (index) {
                                                                      return InkWell(
                                                                        splashColor:
                                                                            ColorsConfig.transparent,
                                                                        highlightColor:
                                                                            ColorsConfig.transparent,
                                                                        onTap:
                                                                            () {
                                                                          state(
                                                                              () {
                                                                            if (_hasClick &&
                                                                                _selectedGift['index'] == index) {
                                                                              _hasClick = false;
                                                                              _selectedGift = {};
                                                                            } else {
                                                                              _hasClick = true;
                                                                              _selectedGift = {
                                                                                "index": index,
                                                                                "item_index": gifts.result[index]['item_index'],
                                                                                "item_type": gifts.result[index]['item_type'],
                                                                                "item_type_name": gifts.result[index]['item_type_name'],
                                                                                "url": gifts.result[index]['url'],
                                                                                "description": gifts.result[index]['description'],
                                                                                "price": gifts.result[index]['price'],
                                                                              };
                                                                            }
                                                                          });
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          margin:
                                                                              EdgeInsets.only(right: 10.0.w),
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            color: _selectedGift['index'] == index && _giftTabIndex == 0
                                                                                ? ColorsConfig().subBackgroundBlack()
                                                                                : null,
                                                                            borderRadius:
                                                                                BorderRadius.circular(14.0),
                                                                          ),
                                                                          child:
                                                                              Column(
                                                                            children: [
                                                                              Image(
                                                                                image: NetworkImage(
                                                                                  gifts.result[index]['url'],
                                                                                ),
                                                                                filterQuality: FilterQuality.high,
                                                                                width: 65.0.w,
                                                                                height: 65.0.h,
                                                                              ),
                                                                              Container(
                                                                                margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                child: CustomTextBuilder(
                                                                                  text: '${gifts.result[index]['price']}',
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 12.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    }),
                                                                  ),
                                                                ],
                                                              ),
                                                              ListView(
                                                                children: [
                                                                  Wrap(
                                                                    children: List.generate(
                                                                        _trophy
                                                                            .length,
                                                                        (index) {
                                                                      return InkWell(
                                                                        splashColor:
                                                                            ColorsConfig.transparent,
                                                                        highlightColor:
                                                                            ColorsConfig.transparent,
                                                                        onTap:
                                                                            () {
                                                                          state(
                                                                              () {
                                                                            if (_hasClick &&
                                                                                _selectedGift['index'] == index) {
                                                                              _hasClick = false;
                                                                              _selectedGift = {};
                                                                            } else {
                                                                              _hasClick = true;
                                                                              _selectedGift = {
                                                                                "index": index,
                                                                                "item_index": _trophy[index]['item_index'],
                                                                                "item_type": _trophy[index]['item_type'],
                                                                                "item_type_name": _trophy[index]['item_type_name'],
                                                                                "url": _trophy[index]['url'],
                                                                                "description": _trophy[index]['description'],
                                                                                "price": _trophy[index]['price'],
                                                                              };
                                                                            }
                                                                          });
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          margin:
                                                                              EdgeInsets.only(right: 10.0.w),
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            color: _selectedGift['index'] == index && _giftTabIndex == 1
                                                                                ? ColorsConfig().subBackgroundBlack()
                                                                                : null,
                                                                            borderRadius:
                                                                                BorderRadius.circular(14.0),
                                                                          ),
                                                                          child: _trophy[index]['item_type'] == 0
                                                                              ? Column(
                                                                                  children: [
                                                                                    Image(
                                                                                      image: NetworkImage(
                                                                                        _trophy[index]['url'],
                                                                                      ),
                                                                                      filterQuality: FilterQuality.high,
                                                                                      width: 65.0.w,
                                                                                      height: 65.0.h,
                                                                                    ),
                                                                                    Container(
                                                                                      margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                      child: CustomTextBuilder(
                                                                                        text: '${_trophy[index]['price']}',
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w400,
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                )
                                                                              : null,
                                                                        ),
                                                                      );
                                                                    }),
                                                                  ),
                                                                ],
                                                              ),
                                                              ListView(
                                                                children: [
                                                                  Wrap(
                                                                    children: List.generate(
                                                                        _reaction
                                                                            .length,
                                                                        (index) {
                                                                      return InkWell(
                                                                        splashColor:
                                                                            ColorsConfig.transparent,
                                                                        highlightColor:
                                                                            ColorsConfig.transparent,
                                                                        onTap:
                                                                            () {
                                                                          state(
                                                                              () {
                                                                            if (_hasClick &&
                                                                                _selectedGift['index'] == index) {
                                                                              _hasClick = false;
                                                                              _selectedGift = {};
                                                                            } else {
                                                                              _hasClick = true;
                                                                              _selectedGift = {
                                                                                "index": index,
                                                                                "item_index": _reaction[index]['item_index'],
                                                                                "item_type": _reaction[index]['item_type'],
                                                                                "item_type_name": _reaction[index]['item_type_name'],
                                                                                "url": _reaction[index]['url'],
                                                                                "description": _reaction[index]['description'],
                                                                                "price": _reaction[index]['price'],
                                                                              };
                                                                            }
                                                                          });
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          margin:
                                                                              EdgeInsets.only(right: 10.0.w),
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            color: _selectedGift['index'] == index && _giftTabIndex == 2
                                                                                ? ColorsConfig().subBackgroundBlack()
                                                                                : null,
                                                                            borderRadius:
                                                                                BorderRadius.circular(14.0),
                                                                          ),
                                                                          child: _reaction[index]['item_type'] == 1
                                                                              ? Column(
                                                                                  children: [
                                                                                    Image(
                                                                                      image: NetworkImage(
                                                                                        _reaction[index]['url'],
                                                                                      ),
                                                                                      filterQuality: FilterQuality.high,
                                                                                      width: 65.0.w,
                                                                                      height: 65.0.h,
                                                                                    ),
                                                                                    Container(
                                                                                      margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                      child: CustomTextBuilder(
                                                                                        text: '${_reaction[index]['price']}',
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w400,
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                )
                                                                              : null,
                                                                        ),
                                                                      );
                                                                    }),
                                                                  ),
                                                                ],
                                                              ),
                                                              ListView(
                                                                children: [
                                                                  Wrap(
                                                                    children: List.generate(
                                                                        _neckTrophy
                                                                            .length,
                                                                        (index) {
                                                                      return InkWell(
                                                                        splashColor:
                                                                            ColorsConfig.transparent,
                                                                        highlightColor:
                                                                            ColorsConfig.transparent,
                                                                        onTap:
                                                                            () {
                                                                          state(
                                                                              () {
                                                                            if (_hasClick &&
                                                                                _selectedGift['index'] == index) {
                                                                              _hasClick = false;
                                                                              _selectedGift = {};
                                                                            } else {
                                                                              _hasClick = true;
                                                                              _selectedGift = {
                                                                                "index": index,
                                                                                "item_index": _neckTrophy[index]['item_index'],
                                                                                "item_type": _neckTrophy[index]['item_type'],
                                                                                "item_type_name": _neckTrophy[index]['item_type_name'],
                                                                                "url": _neckTrophy[index]['url'],
                                                                                "description": _neckTrophy[index]['description'],
                                                                                "price": _neckTrophy[index]['price'],
                                                                              };
                                                                            }
                                                                          });
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          margin:
                                                                              EdgeInsets.only(right: 10.0.w),
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            color: _selectedGift['index'] == index && _giftTabIndex == 3
                                                                                ? ColorsConfig().subBackgroundBlack()
                                                                                : null,
                                                                            borderRadius:
                                                                                BorderRadius.circular(14.0),
                                                                          ),
                                                                          child: _neckTrophy[index]['item_type'] == 2
                                                                              ? Column(
                                                                                  children: [
                                                                                    Image(
                                                                                      image: NetworkImage(
                                                                                        _neckTrophy[index]['url'],
                                                                                      ),
                                                                                      filterQuality: FilterQuality.high,
                                                                                      width: 65.0.w,
                                                                                      height: 65.0.h,
                                                                                    ),
                                                                                    Container(
                                                                                      margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                      child: CustomTextBuilder(
                                                                                        text: '${_neckTrophy[index]['price']}',
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w400,
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                )
                                                                              : null,
                                                                        ),
                                                                      );
                                                                    }),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ),
                                                      _hasClick == true
                                                          ? Container(
                                                              height: 157.0,
                                                              padding:
                                                                  const EdgeInsets
                                                                      .fromLTRB(
                                                                      20.0,
                                                                      10.0,
                                                                      20.0,
                                                                      30.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .subBackground1(),
                                                                boxShadow: [
                                                                  BoxShadow(
                                                                    color: ColorsConfig().textWhite1(
                                                                        opacity:
                                                                            0.16),
                                                                    blurRadius:
                                                                        10.0,
                                                                    offset:
                                                                        const Offset(
                                                                            0.0,
                                                                            -2.0),
                                                                  ),
                                                                ],
                                                              ),
                                                              child: Column(
                                                                children: [
                                                                  Row(
                                                                    children: [
                                                                      Image(
                                                                        image:
                                                                            NetworkImage(
                                                                          '${_selectedGift['url']}',
                                                                        ),
                                                                        filterQuality:
                                                                            FilterQuality.high,
                                                                        width:
                                                                            65.0.w,
                                                                        height:
                                                                            65.0.h,
                                                                      ),
                                                                      const SizedBox(
                                                                          width:
                                                                              32.0),
                                                                      Column(
                                                                        mainAxisAlignment:
                                                                            MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment:
                                                                            CrossAxisAlignment.start,
                                                                        children: [
                                                                          CustomTextBuilder(
                                                                            text:
                                                                                '${_selectedGift['description']}',
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                16.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w400,
                                                                          ),
                                                                          CustomTextBuilder(
                                                                            text:
                                                                                numberFormat.format(_selectedGift['price']),
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                12.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w400,
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  const SizedBox(
                                                                      height:
                                                                          10.0),
                                                                  InkWell(
                                                                    onTap: () {
                                                                      if (_selectedGift[
                                                                              'price'] ==
                                                                          0) {
                                                                        SendGiftDataAPI()
                                                                            .gift(
                                                                                accesToken: _prefs.getString('AccessToken')!,
                                                                                itemIndex: _selectedGift['item_index'],
                                                                                postIndex: postListData[index]['post_index'])
                                                                            .then((value) {
                                                                          int?
                                                                              _existIndex;

                                                                          switch (
                                                                              value.result['status']) {
                                                                            case 10200:
                                                                              setState(() {
                                                                                if (postListData[index]['gift'].length == 0) {
                                                                                  postListData[index]['gift'].add({
                                                                                    "image": _selectedGift['url'],
                                                                                    "gift_count": 1,
                                                                                  });
                                                                                } else {
                                                                                  for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                    if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                      _existIndex = i;
                                                                                      break;
                                                                                    }
                                                                                  }

                                                                                  if (_existIndex != null) {
                                                                                    postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                  } else {
                                                                                    postListData[index]['gift'].insert(0, {
                                                                                      "image": _selectedGift['url'],
                                                                                      "gift_count": 1,
                                                                                    });
                                                                                  }
                                                                                }
                                                                              });
                                                                              Navigator.pop(context);
                                                                              break;
                                                                            case 10201:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText1,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                            case 10202:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText2,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                            case 10203:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText3,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                            case 10204:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText4,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                          }
                                                                        });
                                                                      } else {
                                                                        SendPricedGiftDataAPI()
                                                                            .pricedGift(
                                                                                accesToken: _prefs.getString('AccessToken')!,
                                                                                itemIndex: _selectedGift['item_index'],
                                                                                postIndex: postListData[index]['post_index'])
                                                                            .then((value) {
                                                                          int?
                                                                              _existIndex;

                                                                          switch (
                                                                              value.result['status']) {
                                                                            case 10201:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText1,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                            case 10202:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText2,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                            case 10203:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText3,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                            case 10210:
                                                                              setState(() {
                                                                                if (postListData[index]['gift'].length == 0) {
                                                                                  postListData[index]['gift'].add({
                                                                                    "image": _selectedGift['url'],
                                                                                    "gift_count": 1,
                                                                                  });
                                                                                } else {
                                                                                  for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                    if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                      _existIndex = i;
                                                                                      break;
                                                                                    }
                                                                                  }

                                                                                  if (_existIndex != null) {
                                                                                    postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                  } else {
                                                                                    postListData[index]['gift'].insert(0, {
                                                                                      "image": _selectedGift['url'],
                                                                                      "gift_count": 1,
                                                                                    });
                                                                                  }
                                                                                }
                                                                              });
                                                                              Navigator.pop(context);
                                                                              break;
                                                                            case 10211:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText5,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                            case 10212:
                                                                              ToastBuilder().toast(
                                                                                Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  padding: const EdgeInsets.all(14.0),
                                                                                  margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                    borderRadius: BorderRadius.circular(6.0),
                                                                                  ),
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.giftSendErrorText6,
                                                                                    fontColor: ColorsConfig.defaultWhite,
                                                                                    fontSize: 14.0.sp,
                                                                                  ),
                                                                                ),
                                                                              );
                                                                              break;
                                                                          }
                                                                        });
                                                                      }
                                                                    },
                                                                    child:
                                                                        Container(
                                                                      width: MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .width,
                                                                      height:
                                                                          42.0,
                                                                      decoration:
                                                                          BoxDecoration(
                                                                        // color: ColorsConfig().primary(),
                                                                        borderRadius:
                                                                            BorderRadius.circular(100.0),
                                                                        gradient:
                                                                            LinearGradient(
                                                                          colors: [
                                                                            ColorsConfig().avatarButtonBackground1(),
                                                                            ColorsConfig().avatarButtonBackground2(),
                                                                          ],
                                                                          begin:
                                                                              Alignment.centerLeft,
                                                                          end: Alignment
                                                                              .centerRight,
                                                                        ),
                                                                      ),
                                                                      child:
                                                                          Center(
                                                                        child:
                                                                            CustomTextBuilder(
                                                                          text:
                                                                              TextConstant.sendText,
                                                                          fontColor:
                                                                              ColorsConfig().background(),
                                                                          fontSize:
                                                                              16.0.sp,
                                                                          fontWeight:
                                                                              FontWeight.w700,
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            )
                                                          : Container(),
                                                    ],
                                                  ),
                                                );
                                              },
                                            );
                                          });
                                    });
                                  },
                                  child: SvgAssets(
                                    image: 'assets/icon/gift.svg',
                                    color: ColorsConfig().textBlack1(),
                                    width: 18.0,
                                    height: 18.0,
                                  ),
                                ),
                                // 공유
                                MaterialButton(
                                  onPressed: () async {
                                    var shortLink = await DeepLinkBuilder()
                                        .getShortLink(
                                            'share',
                                            '${postListData[index]['post_index']}',
                                            postListData[index]['type']);

                                    Share.share(
                                      '${postListData[index]['title']}\n$shortLink',
                                      sharePositionOrigin: Rect.fromLTWH(
                                          0,
                                          0,
                                          MediaQuery.of(context).size.width,
                                          MediaQuery.of(context).size.height /
                                              2),
                                    );
                                  },
                                  child: SvgAssets(
                                    image: 'assets/icon/share.svg',
                                    color: ColorsConfig().textBlack1(),
                                    width: 18.0,
                                    height: 18.0,
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      );
                    } else {
                      if (hasTypeSelected) {
                        SharedPreferences.getInstance().then((_prefs) {
                          GetPostListAPI()
                              .list(
                                  accesToken: _prefs.getString('AccessToken')!,
                                  cursor: postListData[index - 1]['post_index'],
                                  category: selectedPostType)
                              .then((value) {
                            for (int i = 0;
                                i < value.result['data'].length;
                                i++) {
                              setState(() {
                                postListData.add(value.result['data'][i]);
                                currentPage.add(0);
                                getPostListMoreBtnState.add(false);
                              });
                            }
                          });
                        });
                      } else {
                        SharedPreferences.getInstance().then((_prefs) {
                          GetPostListAPI()
                              .list(
                                  accesToken: _prefs.getString('AccessToken')!,
                                  cursor: postListData[index - 1]['post_index'])
                              .then((value) {
                            for (int i = 0;
                                i < value.result['data'].length;
                                i++) {
                              setState(() {
                                postListData.add(value.result['data'][i]);
                                currentPage.add(0);
                                getPostListMoreBtnState.add(false);
                              });
                            }
                          });
                        });
                      }
                      return Container();
                    }
                  },
                ),
              ),
              Column(
                children: [
                  getSubscribePostListData.isNotEmpty &&
                          getSubscribePostListData['subscribe'].isNotEmpty
                      ? Expanded(
                          child: getSubscribePostListData['list'].isNotEmpty
                              ? RefreshIndicator(
                                  onRefresh: () async {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    GetPostListAPI()
                                        .list(
                                            accesToken: _prefs
                                                .getString('AccessToken')!)
                                        .then((value) {
                                      setState(() {
                                        currentPage.clear();
                                        getPostListMoreBtnState.clear();
                                        postListData = value.result['data'];
                                        for (int i = 0;
                                            i < value.result['data'].length;
                                            i++) {
                                          currentPage.add(0);
                                          getPostListMoreBtnState.add(false);
                                        }
                                      });
                                    });

                                    GetSubscribePostListAPI()
                                        .subscribePostList(
                                            accesToken: _prefs
                                                .getString('AccessToken')!)
                                        .then((value) {
                                      setState(() {
                                        currentPage2.clear();
                                        getSubscribeMoreBtnState.clear();
                                        getSubscribePostListData = value.result;
                                        for (int i = 0;
                                            i < value.result['list'].length;
                                            i++) {
                                          currentPage2.add(0);
                                          getSubscribeMoreBtnState.add(false);
                                        }
                                      });
                                    });
                                  },
                                  color: ColorsConfig().textWhite1(),
                                  backgroundColor:
                                      ColorsConfig().subBackgroundBlack(),
                                  child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    controller: widget.allListScrollController,
                                    itemCount:
                                        getSubscribePostListData['list'] != null
                                            ? getSubscribePostListData['list']
                                                    .length +
                                                2
                                            : 0,
                                    itemBuilder: (context, index) {
                                      if (index <
                                          getSubscribePostListData['list']
                                              .length) {
                                        if (index == 0) {
                                          return Container(
                                            height: 88.0,
                                            color:
                                                ColorsConfig().subBackground1(),
                                            child: Row(
                                              children: [
                                                Expanded(
                                                  child: ListView.builder(
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    itemCount:
                                                        getSubscribePostListData[
                                                                'subscribe']
                                                            .length,
                                                    itemBuilder:
                                                        (context, hor) {
                                                      return InkWell(
                                                        onTap: () async {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          setState(() {
                                                            if (selectedUserIndex !=
                                                                getSubscribePostListData[
                                                                            'subscribe']
                                                                        [hor][
                                                                    'user_index']) {
                                                              selectedUserIndex =
                                                                  getSubscribePostListData[
                                                                              'subscribe']
                                                                          [hor][
                                                                      'user_index'];

                                                              GetSubscribePostListAPI()
                                                                  .subscribePostList(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      userIndex:
                                                                          selectedUserIndex)
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  currentPage2
                                                                      .clear();
                                                                  getSubscribeMoreBtnState
                                                                      .clear();
                                                                  getSubscribePostListData =
                                                                      value
                                                                          .result;
                                                                  for (int i =
                                                                          0;
                                                                      i <
                                                                          value
                                                                              .result['list']
                                                                              .length;
                                                                      i++) {
                                                                    currentPage2
                                                                        .add(0);
                                                                    getSubscribeMoreBtnState
                                                                        .add(
                                                                            false);
                                                                  }
                                                                });
                                                              });
                                                            } else {
                                                              selectedUserIndex =
                                                                  0;

                                                              GetSubscribePostListAPI()
                                                                  .subscribePostList(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!)
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  currentPage2
                                                                      .clear();
                                                                  getSubscribeMoreBtnState
                                                                      .clear();
                                                                  getSubscribePostListData =
                                                                      value
                                                                          .result;
                                                                  for (int i =
                                                                          0;
                                                                      i <
                                                                          value
                                                                              .result['list']
                                                                              .length;
                                                                      i++) {
                                                                    currentPage2
                                                                        .add(0);
                                                                    getSubscribeMoreBtnState
                                                                        .add(
                                                                            false);
                                                                  }
                                                                });
                                                              });
                                                            }
                                                          });
                                                        },
                                                        child: Stack(
                                                          children: [
                                                            Container(
                                                              margin: hor == 0
                                                                  ? const EdgeInsets
                                                                      .only(
                                                                      left:
                                                                          15.0,
                                                                      right:
                                                                          4.0)
                                                                  : const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                          4.0),
                                                              child: Column(
                                                                mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .center,
                                                                children: [
                                                                  Container(
                                                                    width: 52.5,
                                                                    height:
                                                                        52.5,
                                                                    margin: const EdgeInsets
                                                                        .only(
                                                                        bottom:
                                                                            2.0),
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: ColorsConfig()
                                                                          .userIconBackground(),
                                                                      border: selectedUserIndex ==
                                                                              getSubscribePostListData['subscribe'][hor]['user_index']
                                                                          ? Border.all(
                                                                              width: 2.0,
                                                                              color: ColorsConfig().primary(),
                                                                            )
                                                                          : null,
                                                                      borderRadius:
                                                                          BorderRadius.circular(
                                                                              100.0),
                                                                      image:
                                                                          DecorationImage(
                                                                        image:
                                                                            NetworkImage(
                                                                          getSubscribePostListData['subscribe'][hor]
                                                                              [
                                                                              'avatar_url'],
                                                                          scale:
                                                                              4.5,
                                                                        ),
                                                                        filterQuality:
                                                                            FilterQuality.high,
                                                                        fit: BoxFit
                                                                            .none,
                                                                        alignment: const Alignment(
                                                                            0.0,
                                                                            -0.3),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                  SizedBox(
                                                                    width: 60.0,
                                                                    child:
                                                                        Center(
                                                                      child:
                                                                          CustomTextBuilder(
                                                                        text: getSubscribePostListData['subscribe'][hor]
                                                                            [
                                                                            'user_nick'],
                                                                        fontColor:
                                                                            ColorsConfig().textWhite1(),
                                                                        fontSize:
                                                                            12.0.sp,
                                                                        maxLines:
                                                                            1,
                                                                        textOverflow:
                                                                            TextOverflow.ellipsis,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            selectedUserIndex !=
                                                                        0 &&
                                                                    selectedUserIndex !=
                                                                        getSubscribePostListData['subscribe'][hor]
                                                                            [
                                                                            'user_index']
                                                                ? Container(
                                                                    width: 60.5,
                                                                    height: MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .height,
                                                                    color: ColorsConfig().colorPicker(
                                                                        color: ColorsConfig()
                                                                            .subBackground1(),
                                                                        opacity:
                                                                            0.5),
                                                                  )
                                                                : Container(),
                                                          ],
                                                        ),
                                                      );
                                                    },
                                                  ),
                                                ),
                                                InkWell(
                                                  onTap: () {
                                                    Navigator.pushNamed(
                                                        context, '/subscribe',
                                                        arguments: {
                                                          'tabIndex': 1,
                                                          'user_nickname':
                                                              getProfileData[
                                                                  'nick'],
                                                        });
                                                  },
                                                  child: Container(
                                                    width: 73.0,
                                                    color: ColorsConfig()
                                                        .subBackground1(),
                                                    child: Center(
                                                      child: CustomTextBuilder(
                                                        text: TextConstant
                                                            .allText,
                                                        fontColor:
                                                            ColorsConfig()
                                                                .primary(),
                                                        fontSize: 14.0.sp,
                                                        fontWeight:
                                                            FontWeight.w400,
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                          );
                                        }

                                        return Container(
                                          margin: index - 1 == 0
                                              ? const EdgeInsets.only(top: 8.0)
                                              : null,
                                          decoration: BoxDecoration(
                                            color:
                                                ColorsConfig().subBackground1(),
                                            border: index !=
                                                    getSubscribePostListData[
                                                                'list']
                                                            .length -
                                                        1
                                                ? Border(
                                                    bottom: BorderSide(
                                                      width: 0.5,
                                                      color: ColorsConfig()
                                                          .border1(),
                                                    ),
                                                  )
                                                : null,
                                          ),
                                          child: Column(
                                            crossAxisAlignment:
                                                CrossAxisAlignment.start,
                                            children: [
                                              // 유저 이미지, 닉네임, 날짜, 더보기 버튼
                                              Padding(
                                                padding:
                                                    const EdgeInsets.fromLTRB(
                                                        20.0, 13.4, 20.0, 0.0),
                                                child: Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceBetween,
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      children: [
                                                        // 이미지
                                                        Container(
                                                          width: 42.0,
                                                          height: 42.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: ColorsConfig()
                                                                .userIconBackground(),
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        21.0),
                                                            image:
                                                                DecorationImage(
                                                              image:
                                                                  NetworkImage(
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [
                                                                        index -
                                                                            1][
                                                                    'avatar_url'],
                                                                scale: 5.5,
                                                              ),
                                                              filterQuality:
                                                                  FilterQuality
                                                                      .high,
                                                              fit: BoxFit.none,
                                                              alignment:
                                                                  const Alignment(
                                                                      0.0,
                                                                      -0.3),
                                                            ),
                                                          ),
                                                        ),
                                                        Column(
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .start,
                                                          children: [
                                                            SizedBox(
                                                              width: MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width -
                                                                  82.0,
                                                              child: Row(
                                                                mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .spaceBetween,
                                                                children: [
                                                                  Row(
                                                                    children: [
                                                                      // 닉네임
                                                                      Container(
                                                                        margin: const EdgeInsets
                                                                            .symmetric(
                                                                            horizontal:
                                                                                8.0),
                                                                        child:
                                                                            CustomTextBuilder(
                                                                          text:
                                                                              '${getSubscribePostListData['list'][index - 1]['nick']}',
                                                                          fontColor:
                                                                              ColorsConfig().textWhite1(),
                                                                          fontSize:
                                                                              16.0.sp,
                                                                          fontWeight:
                                                                              FontWeight.w700,
                                                                        ),
                                                                      ),
                                                                      // 날짜
                                                                      CustomTextBuilder(
                                                                        text: DateCalculatorWrapper().daysCalculator(getSubscribePostListData['list']
                                                                            [
                                                                            index -
                                                                                1]['date']),
                                                                        fontColor:
                                                                            ColorsConfig.defaultGray,
                                                                        fontSize:
                                                                            12.0.sp,
                                                                        fontWeight:
                                                                            FontWeight.w400,
                                                                        height:
                                                                            1.8,
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  LabelCategoryWidgetBuilder(
                                                                      data: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index -
                                                                              1]['type']),
                                                                ],
                                                              ),
                                                            ),
                                                            // 선물받은 뱃지영역
                                                            getSubscribePostListData[
                                                                            'list']
                                                                        [index -
                                                                            1]['gift']
                                                                    .isNotEmpty
                                                                ? InkWell(
                                                                    onTap:
                                                                        () async {
                                                                      final _prefs =
                                                                          await SharedPreferences
                                                                              .getInstance();

                                                                      GetGiftHistoryListDataAPI()
                                                                          .giftHistory(
                                                                              accesToken: _prefs.getString('AccessToken')!,
                                                                              postIndex: getSubscribePostListData['list'][index - 1]['post_index'])
                                                                          .then((history) {
                                                                        showModalBottomSheet(
                                                                            context:
                                                                                context,
                                                                            backgroundColor: ColorsConfig()
                                                                                .subBackground1(),
                                                                            shape:
                                                                                const RoundedRectangleBorder(
                                                                              borderRadius: BorderRadius.only(
                                                                                topLeft: Radius.circular(12.0),
                                                                                topRight: Radius.circular(12.0),
                                                                              ),
                                                                            ),
                                                                            builder:
                                                                                (BuildContext context) {
                                                                              return SafeArea(
                                                                                child: Container(
                                                                                  decoration: const BoxDecoration(
                                                                                    borderRadius: BorderRadius.only(
                                                                                      topLeft: Radius.circular(12.0),
                                                                                      topRight: Radius.circular(12.0),
                                                                                    ),
                                                                                  ),
                                                                                  child: Column(
                                                                                    mainAxisSize: MainAxisSize.min,
                                                                                    children: [
                                                                                      Container(
                                                                                        width: 50.0,
                                                                                        height: 4.0,
                                                                                        margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig().textBlack2(),
                                                                                          borderRadius: BorderRadius.circular(100.0),
                                                                                        ),
                                                                                      ),
                                                                                      Center(
                                                                                        child: Container(
                                                                                          width: MediaQuery.of(context).size.width,
                                                                                          padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                          decoration: BoxDecoration(
                                                                                            border: Border(
                                                                                              bottom: BorderSide(
                                                                                                width: 0.5,
                                                                                                color: ColorsConfig().border1(),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                          child: CustomTextBuilder(
                                                                                            text: TextConstant.giftHistoryText,
                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                            fontSize: 18.0.sp,
                                                                                            fontWeight: FontWeight.w600,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      Expanded(
                                                                                        child: ListView.builder(
                                                                                            itemCount: history.result['users'].length,
                                                                                            itemBuilder: (context, historyIndex) {
                                                                                              return Container(
                                                                                                width: MediaQuery.of(context).size.width,
                                                                                                height: 65.0,
                                                                                                padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                                decoration: BoxDecoration(
                                                                                                  border: Border(
                                                                                                    bottom: BorderSide(
                                                                                                      width: 0.5,
                                                                                                      color: ColorsConfig().border1(),
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                                child: Row(
                                                                                                  children: [
                                                                                                    Expanded(
                                                                                                      child: Row(
                                                                                                        children: [
                                                                                                          // 아바타 이미지
                                                                                                          Container(
                                                                                                            width: 35.0,
                                                                                                            height: 35.0,
                                                                                                            decoration: BoxDecoration(
                                                                                                              color: ColorsConfig().userIconBackground(),
                                                                                                              borderRadius: BorderRadius.circular(17.5),
                                                                                                              image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                                  ? DecorationImage(
                                                                                                                      image: NetworkImage(
                                                                                                                        history.result['users'][historyIndex]['avatar'],
                                                                                                                        scale: 7.0,
                                                                                                                      ),
                                                                                                                      filterQuality: FilterQuality.high,
                                                                                                                      fit: BoxFit.none,
                                                                                                                      alignment: const Alignment(0.0, -0.3),
                                                                                                                    )
                                                                                                                  : null,
                                                                                                            ),
                                                                                                          ),
                                                                                                          const SizedBox(width: 15.0),
                                                                                                          CustomTextBuilder(
                                                                                                            text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                                            fontSize: 16.0.sp,
                                                                                                            fontWeight: FontWeight.w400,
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    ),
                                                                                                    Expanded(
                                                                                                      child: ListView.builder(
                                                                                                        scrollDirection: Axis.horizontal,
                                                                                                        itemCount: history.result['gifts'].length,
                                                                                                        itemBuilder: (context, giftHistory) {
                                                                                                          if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                            return Container();
                                                                                                          }
                                                                                                          return Row(
                                                                                                            children: [
                                                                                                              Image(
                                                                                                                image: NetworkImage(
                                                                                                                  history.result['gifts'][giftHistory]['image'],
                                                                                                                ),
                                                                                                              ),
                                                                                                              const SizedBox(width: 4.0),
                                                                                                              CustomTextBuilder(
                                                                                                                text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                                fontColor: ColorsConfig().textBlack2(),
                                                                                                                fontSize: 12.0.sp,
                                                                                                                fontWeight: FontWeight.w700,
                                                                                                              ),
                                                                                                              const SizedBox(width: 4.0),
                                                                                                            ],
                                                                                                          );
                                                                                                        },
                                                                                                      ),
                                                                                                    ),
                                                                                                  ],
                                                                                                ),
                                                                                              );
                                                                                            }),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            });
                                                                      });
                                                                    },
                                                                    child: !getSubscribeMoreBtnState[
                                                                            index -
                                                                                1]
                                                                        ? Container(
                                                                            margin:
                                                                                const EdgeInsets.only(left: 4.0, top: 5.0),
                                                                            child:
                                                                                SingleChildScrollView(
                                                                              physics: const NeverScrollableScrollPhysics(),
                                                                              scrollDirection: Axis.horizontal,
                                                                              child: Row(
                                                                                children: [
                                                                                  Row(
                                                                                    mainAxisSize: MainAxisSize.min,
                                                                                    children: List.generate(getSubscribePostListData['list'][index - 1]['gift'].length > 4 ? 4 : getSubscribePostListData['list'][index - 1]['gift'].length, (giftIndex) {
                                                                                      return Container(
                                                                                        margin: const EdgeInsets.only(right: 8.0),
                                                                                        child: Row(
                                                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                                                          mainAxisSize: MainAxisSize.min,
                                                                                          children: [
                                                                                            Container(
                                                                                              width: 24.0,
                                                                                              height: 24.0,
                                                                                              decoration: BoxDecoration(
                                                                                                borderRadius: BorderRadius.circular(9.0),
                                                                                              ),
                                                                                              child: Image(
                                                                                                image: NetworkImage(
                                                                                                  getSubscribePostListData['list'][index - 1]['gift'][giftIndex]['image'],
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                            CustomTextBuilder(
                                                                                              text: '${getSubscribePostListData['list'][index - 1]['gift'][giftIndex]['gift_count']}',
                                                                                              fontColor: ColorsConfig.defaultGray,
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w700,
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      );
                                                                                    }),
                                                                                  ),
                                                                                  !getSubscribeMoreBtnState[index - 1] && getSubscribePostListData['list'][index - 1]['gift'].length > 4
                                                                                      ? InkWell(
                                                                                          onTap: () {
                                                                                            setState(() {
                                                                                              getSubscribeMoreBtnState[index - 1] = true;
                                                                                            });
                                                                                          },
                                                                                          child: Padding(
                                                                                            padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                                            child: CustomTextBuilder(
                                                                                              text: TextConstant.moreReadText,
                                                                                              fontColor: ColorsConfig().textBlack2(),
                                                                                              fontSize: 14.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ),
                                                                                        )
                                                                                      : Container(),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          )
                                                                        : Container(
                                                                            margin:
                                                                                const EdgeInsets.only(left: 4.0, top: 5.0),
                                                                            child:
                                                                                Wrap(
                                                                              children: List.generate(getSubscribePostListData['list'][index - 1]['gift'].length, (giftIndex) {
                                                                                return Container(
                                                                                  margin: const EdgeInsets.only(right: 8.0),
                                                                                  child: Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    mainAxisSize: MainAxisSize.min,
                                                                                    children: [
                                                                                      Container(
                                                                                        width: 24.0,
                                                                                        height: 24.0,
                                                                                        decoration: BoxDecoration(
                                                                                          borderRadius: BorderRadius.circular(9.0),
                                                                                        ),
                                                                                        child: Image(
                                                                                          image: NetworkImage(
                                                                                            getSubscribePostListData['list'][index - 1]['gift'][giftIndex]['image'],
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      CustomTextBuilder(
                                                                                        text: '${getSubscribePostListData['list'][index - 1]['gift'][giftIndex]['gift_count']}',
                                                                                        fontColor: ColorsConfig.defaultGray,
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w700,
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              }),
                                                                            ),
                                                                          ),
                                                                  )
                                                                : Container(),
                                                          ],
                                                        ),
                                                      ],
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              // 내용 부분
                                              Padding(
                                                padding:
                                                    const EdgeInsets.symmetric(
                                                        horizontal: 20.0),
                                                child: InkWell(
                                                  onTap: () {
                                                    if (getSubscribePostListData[
                                                                    'list']
                                                                [index - 1]
                                                            ['type'] ==
                                                        4) {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) =>
                                                              NewsDetailScreen(
                                                            postIndex:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [
                                                                        index -
                                                                            1][
                                                                    'post_index'],
                                                            postType:
                                                                getSubscribePostListData[
                                                                        'list'][
                                                                    index -
                                                                        1]['type'],
                                                          ),
                                                        ),
                                                      ).then((returns) async {
                                                        if (returns != null) {
                                                          if (returns['ret']) {
                                                            setState(() {
                                                              postListData.remove(
                                                                  postListData[
                                                                      index]);
                                                              currentPage
                                                                  .removeAt(
                                                                      index);
                                                            });
                                                          }
                                                        } else {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          PostDetailDataAPI()
                                                              .detail(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index -
                                                                              1]
                                                                      [
                                                                      'post_index'])
                                                              .then((value) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                      'list'][
                                                                  index -
                                                                      1] = value
                                                                  .result;
                                                            });
                                                          });
                                                        }
                                                      });
                                                    } else if (getSubscribePostListData[
                                                                    'list']
                                                                [index - 1]
                                                            ['type'] ==
                                                        5) {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) =>
                                                              VoteDetailScreen(
                                                            postIndex:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [
                                                                        index -
                                                                            1][
                                                                    'post_index'],
                                                            postType:
                                                                getSubscribePostListData[
                                                                        'list'][
                                                                    index -
                                                                        1]['type'],
                                                          ),
                                                        ),
                                                      ).then((returns) async {
                                                        if (returns != null) {
                                                          if (returns['ret']) {
                                                            setState(() {
                                                              postListData.remove(
                                                                  postListData[
                                                                      index]);
                                                              currentPage
                                                                  .removeAt(
                                                                      index);
                                                            });
                                                          }
                                                        } else {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          PostDetailDataAPI()
                                                              .detail(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index -
                                                                              1]
                                                                      [
                                                                      'post_index'])
                                                              .then((value) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                      'list'][
                                                                  index -
                                                                      1] = value
                                                                  .result;
                                                            });
                                                          });
                                                        }
                                                      });
                                                    } else {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) =>
                                                              PostingDetailScreen(
                                                            postIndex:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [
                                                                        index -
                                                                            1][
                                                                    'post_index'],
                                                            postType:
                                                                getSubscribePostListData[
                                                                        'list'][
                                                                    index -
                                                                        1]['type'],
                                                          ),
                                                        ),
                                                      ).then((returns) async {
                                                        if (returns != null) {
                                                          if (returns['ret']) {
                                                            setState(() {
                                                              postListData.remove(
                                                                  postListData[
                                                                      index]);
                                                              currentPage
                                                                  .removeAt(
                                                                      index);
                                                            });
                                                          }
                                                        } else {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          PostDetailDataAPI()
                                                              .detail(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index -
                                                                              1]
                                                                      [
                                                                      'post_index'])
                                                              .then((value) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                      'list'][
                                                                  index -
                                                                      1] = value
                                                                  .result;
                                                            });
                                                          });
                                                        }
                                                      });
                                                    }
                                                  },
                                                  child:
                                                      getSubscribePostListData[
                                                                          'list']
                                                                      [index - 1]
                                                                  ['type'] ==
                                                              4
                                                          ? Container(
                                                              margin:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      top: 6.0),
                                                              child: Row(
                                                                crossAxisAlignment:
                                                                    CrossAxisAlignment
                                                                        .start,
                                                                mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .spaceBetween,
                                                                children: [
                                                                  SizedBox(
                                                                    height:
                                                                        75.0,
                                                                    child:
                                                                        Column(
                                                                      children: [
                                                                        SizedBox(
                                                                          width:
                                                                              (MediaQuery.of(context).size.width * 0.75) - 56.0,
                                                                          child:
                                                                              CustomTextBuilder(
                                                                            text:
                                                                                '${getSubscribePostListData['list'][index - 1]['title']}',
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                19.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w700,
                                                                            maxLines:
                                                                                2,
                                                                          ),
                                                                        ),
                                                                        SizedBox(
                                                                          width:
                                                                              (MediaQuery.of(context).size.width * 0.75) - 56.0,
                                                                          child:
                                                                              CustomTextBuilder(
                                                                            text:
                                                                                '${getSubscribePostListData['list'][index - 1]['description']}',
                                                                            fontColor:
                                                                                ColorsConfig().textBlack3(),
                                                                            fontSize:
                                                                                17.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w400,
                                                                            maxLines:
                                                                                1,
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                  InkWell(
                                                                    onTap: () {
                                                                      UrlLauncherBuilder().launchURL(getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index -
                                                                              1]['link']);
                                                                    },
                                                                    child:
                                                                        Container(
                                                                      width: (MediaQuery.of(context).size.width *
                                                                              0.3) -
                                                                          23.0,
                                                                      height:
                                                                          75.0,
                                                                      decoration:
                                                                          BoxDecoration(
                                                                        color: ColorsConfig()
                                                                            .textBlack2(),
                                                                        border:
                                                                            Border.all(
                                                                          width:
                                                                              0.5,
                                                                          color:
                                                                              ColorsConfig().primary(),
                                                                        ),
                                                                        image:
                                                                            DecorationImage(
                                                                          image:
                                                                              NetworkImage(
                                                                            getSubscribePostListData['list'][index -
                                                                                1]['news_image'],
                                                                          ),
                                                                          fit: BoxFit
                                                                              .cover,
                                                                          filterQuality:
                                                                              FilterQuality.high,
                                                                        ),
                                                                      ),
                                                                      child:
                                                                          Stack(
                                                                        children: [
                                                                          Positioned(
                                                                            right:
                                                                                3.0,
                                                                            bottom:
                                                                                3.0,
                                                                            child:
                                                                                Container(
                                                                              width: 18.0,
                                                                              height: 18.0,
                                                                              decoration: BoxDecoration(
                                                                                color: ColorsConfig().linkIconBackground(),
                                                                                borderRadius: BorderRadius.circular(9.0),
                                                                              ),
                                                                              child: Center(
                                                                                child: SvgAssets(
                                                                                  image: 'assets/icon/link.svg',
                                                                                  color: ColorsConfig().primary(),
                                                                                  width: 12.0,
                                                                                  height: 12.0,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            )
                                                          : getSubscribePostListData['list'][index - 1]['type'] == 1 ||
                                                                  getSubscribePostListData['list']
                                                                              [index - 1]
                                                                          [
                                                                          'type'] ==
                                                                      2 ||
                                                                  getSubscribePostListData['list']
                                                                              [index - 1]
                                                                          [
                                                                          'type'] ==
                                                                      3
                                                              ? Container(
                                                                  margin:
                                                                      const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              6.0),
                                                                  child: Row(
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .spaceBetween,
                                                                    children: [
                                                                      SizedBox(
                                                                        height:
                                                                            75.0,
                                                                        child:
                                                                            Column(
                                                                          children: [
                                                                            SizedBox(
                                                                              width: getSubscribePostListData['list'][index - 1]['category'] != null ? (MediaQuery.of(context).size.width * 0.75) - 56.0 : MediaQuery.of(context).size.width - 40.0,
                                                                              child: CustomTextBuilder(
                                                                                text: '${getSubscribePostListData['list'][index - 1]['title']}',
                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                fontSize: 19.0.sp,
                                                                                fontWeight: FontWeight.w700,
                                                                                maxLines: 2,
                                                                              ),
                                                                            ),
                                                                            SizedBox(
                                                                              width: getSubscribePostListData['list'][index - 1]['category'] != null ? (MediaQuery.of(context).size.width * 0.75) - 56.0 : MediaQuery.of(context).size.width - 40.0,
                                                                              child: CustomTextBuilder(
                                                                                text: '${getSubscribePostListData['list'][index - 1]['description']}',
                                                                                fontColor: ColorsConfig().textBlack3(),
                                                                                fontSize: 17.0.sp,
                                                                                fontWeight: FontWeight.w400,
                                                                                maxLines: 1,
                                                                              ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Row(
                                                                        children: [
                                                                          getSubscribePostListData['list'][index - 1]['category'] != null && getSubscribePostListData['list'][index - 1]['category'] == 'i'
                                                                              ? SizedBox(
                                                                                  width: (MediaQuery.of(context).size.width * 0.3) - 23.0,
                                                                                  height: 75.0,
                                                                                  child: getSubscribePostListData['list'][index - 1]['image'].length > 1
                                                                                      ? PageView.builder(
                                                                                          controller: _pageController,
                                                                                          itemCount: getSubscribePostListData['list'][index - 1]['image'].length,
                                                                                          onPageChanged: (int page) {
                                                                                            setState(() {
                                                                                              currentPage2[index] = page;
                                                                                            });
                                                                                          },
                                                                                          itemBuilder: (context, imageIndex) {
                                                                                            return Image(
                                                                                                image: NetworkImage(
                                                                                                  getSubscribePostListData['list'][index - 1]['image'][imageIndex],
                                                                                                ),
                                                                                                fit: BoxFit.cover,
                                                                                                filterQuality: FilterQuality.high,
                                                                                                alignment: Alignment.center);
                                                                                          },
                                                                                        )
                                                                                      : SizedBox(
                                                                                          width: (MediaQuery.of(context).size.width * 0.3) - 23.0,
                                                                                          height: 75.0,
                                                                                          child: Image(
                                                                                              image: NetworkImage(
                                                                                                getSubscribePostListData['list'][index - 1]['image'][0],
                                                                                              ),
                                                                                              fit: BoxFit.cover,
                                                                                              filterQuality: FilterQuality.high,
                                                                                              alignment: Alignment.center),
                                                                                        ),
                                                                                )
                                                                              : Container(),
                                                                          getSubscribePostListData['list'][index - 1]['category'] != null && getSubscribePostListData['list'][index - 1]['category'] == 'g'
                                                                              ? SizedBox(
                                                                                  width: (MediaQuery.of(context).size.width * 0.3) - 23.0,
                                                                                  height: 75.0,
                                                                                  child: Image(
                                                                                    image: NetworkImage(
                                                                                      getSubscribePostListData['list'][index - 1]['sub_link'],
                                                                                    ),
                                                                                    fit: BoxFit.cover,
                                                                                    filterQuality: FilterQuality.high,
                                                                                  ),
                                                                                )
                                                                              : Container(),
                                                                          getSubscribePostListData['list'][index - 1]['category'] != null && getSubscribePostListData['list'][index - 1]['category'] == 'y'
                                                                              ? SizedBox(
                                                                                  width: (MediaQuery.of(context).size.width * 0.3) - 23.0,
                                                                                  height: 75.0,
                                                                                  child: Image(
                                                                                    image: NetworkImage(getYoutubeThumbnail(getSubscribePostListData['list'][index - 1]['sub_link'])),
                                                                                    fit: BoxFit.cover,
                                                                                    filterQuality: FilterQuality.high,
                                                                                  ),
                                                                                )
                                                                              : Container(),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                )
                                                              : getSubscribePostListData['list']
                                                                              [index - 1]
                                                                          ['type'] ==
                                                                      5
                                                                  ? Column(
                                                                      crossAxisAlignment:
                                                                          CrossAxisAlignment
                                                                              .start,
                                                                      children: [
                                                                        Container(
                                                                          width: MediaQuery.of(context)
                                                                              .size
                                                                              .width,
                                                                          margin: const EdgeInsets
                                                                              .symmetric(
                                                                              vertical: 12.0),
                                                                          child:
                                                                              CustomTextBuilder(
                                                                            text:
                                                                                getSubscribePostListData['list'][index - 1]['title'],
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                19.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w700,
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    )
                                                                  : Container(),
                                                ),
                                              ),
                                              Row(
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceBetween,
                                                children: [
                                                  // 좋아요
                                                  MaterialButton(
                                                    onPressed: () async {
                                                      final _prefs =
                                                          await SharedPreferences
                                                              .getInstance();

                                                      if (!getSubscribePostListData[
                                                              'list'][index - 1]
                                                          ['isLike']) {
                                                        AddLikeSenderAPI()
                                                            .add(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!,
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [
                                                                        index -
                                                                            1][
                                                                    'post_index'])
                                                            .then((res) {
                                                          if (res.result[
                                                                  'status'] ==
                                                              10800) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  ['like']++;
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  [
                                                                  'isLike'] = true;
                                                            });
                                                          }
                                                        });
                                                      } else {
                                                        CancelLikeSenderAPI()
                                                            .cancel(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!,
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [
                                                                        index -
                                                                            1][
                                                                    'post_index'])
                                                            .then((res) {
                                                          if (res.result[
                                                                  'status'] ==
                                                              10805) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  ['like']--;
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  [
                                                                  'isLike'] = false;
                                                            });
                                                          }
                                                        });
                                                      }
                                                    },
                                                    child: Row(
                                                      children: [
                                                        SvgAssets(
                                                          image:
                                                              'assets/icon/like.svg',
                                                          color: getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  ['isLike']
                                                              ? ColorsConfig()
                                                                  .primary()
                                                              : ColorsConfig()
                                                                  .textBlack1(),
                                                          width: 18.0,
                                                          height: 18.0,
                                                        ),
                                                        const SizedBox(
                                                            width: 10.0),
                                                        CustomTextBuilder(
                                                          text: numberFormat.format(
                                                              getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index -
                                                                              1]
                                                                      ['like'] +
                                                                  addLikeCount2),
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textBlack1(),
                                                          fontSize: 13.0.sp,
                                                          fontWeight:
                                                              FontWeight.w600,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  // 댓글
                                                  MaterialButton(
                                                    onPressed: () {
                                                      if (getSubscribePostListData[
                                                                      'list']
                                                                  [index - 1]
                                                              ['type'] ==
                                                          4) {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                NewsDetailScreen(
                                                              postIndex: getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  [
                                                                  'post_index'],
                                                              postType:
                                                                  getSubscribePostListData[
                                                                          'list']
                                                                      [index -
                                                                          1]['type'],
                                                            ),
                                                          ),
                                                        ).then((returns) async {
                                                          if (returns != null) {
                                                            if (returns[
                                                                'ret']) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                        'list']
                                                                    .remove(getSubscribePostListData[
                                                                            'list']
                                                                        [index -
                                                                            1]);
                                                                currentPage2
                                                                    .removeAt(
                                                                        index -
                                                                            1);
                                                              });
                                                            }
                                                          } else {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            PostDetailDataAPI()
                                                                .detail(
                                                                    accesToken:
                                                                        _prefs.getString(
                                                                            'AccessToken')!,
                                                                    postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index -
                                                                            1]['post_index'])
                                                                .then((value) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                        'list'][
                                                                    index -
                                                                        1] = value
                                                                    .result;
                                                              });
                                                            });
                                                          }
                                                        });
                                                      } else if (getSubscribePostListData[
                                                                      'list']
                                                                  [index - 1]
                                                              ['type'] ==
                                                          5) {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                VoteDetailScreen(
                                                              postIndex: getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  [
                                                                  'post_index'],
                                                              postType:
                                                                  getSubscribePostListData[
                                                                          'list']
                                                                      [index -
                                                                          1]['type'],
                                                            ),
                                                          ),
                                                        ).then((returns) async {
                                                          if (returns != null) {
                                                            if (returns[
                                                                'ret']) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                        'list']
                                                                    .remove(getSubscribePostListData[
                                                                            'list']
                                                                        [index -
                                                                            1]);
                                                                currentPage2
                                                                    .removeAt(
                                                                        index -
                                                                            1);
                                                              });
                                                            }
                                                          } else {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            PostDetailDataAPI()
                                                                .detail(
                                                                    accesToken:
                                                                        _prefs.getString(
                                                                            'AccessToken')!,
                                                                    postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index -
                                                                            1]['post_index'])
                                                                .then((value) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                        'list'][
                                                                    index -
                                                                        1] = value
                                                                    .result;
                                                              });
                                                            });
                                                          }
                                                        });
                                                      } else {
                                                        Navigator.push(
                                                          context,
                                                          MaterialPageRoute(
                                                            builder: (context) =>
                                                                PostingDetailScreen(
                                                              postIndex: getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  [
                                                                  'post_index'],
                                                              postType:
                                                                  getSubscribePostListData[
                                                                          'list']
                                                                      [index -
                                                                          1]['type'],
                                                            ),
                                                          ),
                                                        ).then((returns) async {
                                                          if (returns != null) {
                                                            if (returns[
                                                                'ret']) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                        'list']
                                                                    .remove(getSubscribePostListData[
                                                                            'list']
                                                                        [index -
                                                                            1]);
                                                                currentPage2
                                                                    .removeAt(
                                                                        index -
                                                                            1);
                                                              });
                                                            }
                                                          } else {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            PostDetailDataAPI()
                                                                .detail(
                                                                    accesToken:
                                                                        _prefs.getString(
                                                                            'AccessToken')!,
                                                                    postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index -
                                                                            1]['post_index'])
                                                                .then((value) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                        'list'][
                                                                    index -
                                                                        1] = value
                                                                    .result;
                                                              });
                                                            });
                                                          }
                                                        });
                                                      }
                                                    },
                                                    child: Row(
                                                      children: [
                                                        SvgAssets(
                                                          image:
                                                              'assets/icon/reply.svg',
                                                          color: ColorsConfig()
                                                              .textBlack1(),
                                                          width: 18.0,
                                                          height: 18.0,
                                                        ),
                                                        const SizedBox(
                                                            width: 10.0),
                                                        CustomTextBuilder(
                                                          text: numberFormat.format(
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  ['reply']),
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textBlack1(),
                                                          fontSize: 13.0.sp,
                                                          fontWeight:
                                                              FontWeight.w600,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  // 선물
                                                  MaterialButton(
                                                    onPressed: () async {
                                                      final _prefs =
                                                          await SharedPreferences
                                                              .getInstance();

                                                      GetGiftListDataAPI()
                                                          .gift(
                                                              accesToken: _prefs
                                                                  .getString(
                                                                      'AccessToken')!)
                                                          .then((gifts) {
                                                        bool _hasClick = false;

                                                        showModalBottomSheet(
                                                            context: context,
                                                            backgroundColor:
                                                                ColorsConfig()
                                                                    .subBackground1(),
                                                            isScrollControlled:
                                                                true,
                                                            shape:
                                                                const RoundedRectangleBorder(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .only(
                                                                topLeft: Radius
                                                                    .circular(
                                                                        12.0),
                                                                topRight: Radius
                                                                    .circular(
                                                                        12.0),
                                                              ),
                                                            ),
                                                            builder:
                                                                (BuildContext
                                                                    context) {
                                                              int _giftTabIndex =
                                                                  0;

                                                              List<dynamic>
                                                                  _trophy = [];
                                                              List<dynamic>
                                                                  _reaction =
                                                                  [];
                                                              List<dynamic>
                                                                  _neckTrophy =
                                                                  [];

                                                              Map<String,
                                                                      dynamic>
                                                                  _selectedGift =
                                                                  {};

                                                              var _giftTabController =
                                                                  TabController(
                                                                length: 4,
                                                                vsync: this,
                                                              );
                                                              _giftTabController
                                                                  .addListener(
                                                                      () {
                                                                if (_giftTabController
                                                                        .indexIsChanging ||
                                                                    _giftTabController
                                                                            .index !=
                                                                        _giftTabIndex) {
                                                                  setState(() {
                                                                    _giftTabIndex =
                                                                        _giftTabController
                                                                            .index;
                                                                  });
                                                                }
                                                              });

                                                              for (int i = 0;
                                                                  i <
                                                                      gifts
                                                                          .result
                                                                          .length;
                                                                  i++) {
                                                                if (gifts.result[
                                                                            i][
                                                                        'item_type'] ==
                                                                    0) {
                                                                  _trophy.add(
                                                                      gifts.result[
                                                                          i]);
                                                                } else if (gifts
                                                                            .result[i]
                                                                        [
                                                                        'item_type'] ==
                                                                    1) {
                                                                  _reaction.add(
                                                                      gifts.result[
                                                                          i]);
                                                                } else if (gifts
                                                                            .result[i]
                                                                        [
                                                                        'item_type'] ==
                                                                    2) {
                                                                  _neckTrophy.add(
                                                                      gifts.result[
                                                                          i]);
                                                                }
                                                              }

                                                              return StatefulBuilder(
                                                                builder:
                                                                    (context,
                                                                        state) {
                                                                  return Container(
                                                                    height: _hasClick
                                                                        ? MediaQuery.of(context).size.height /
                                                                            1.72
                                                                        : MediaQuery.of(context).size.height /
                                                                            2,
                                                                    decoration:
                                                                        const BoxDecoration(
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        topLeft:
                                                                            Radius.circular(12.0),
                                                                        topRight:
                                                                            Radius.circular(12.0),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        Column(
                                                                      children: [
                                                                        Container(
                                                                          width:
                                                                              50.0,
                                                                          height:
                                                                              4.0,
                                                                          margin: const EdgeInsets
                                                                              .symmetric(
                                                                              vertical: 8.0),
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            color:
                                                                                ColorsConfig().textBlack2(),
                                                                            borderRadius:
                                                                                BorderRadius.circular(100.0),
                                                                          ),
                                                                        ),
                                                                        // 선물하기 타이틀
                                                                        Row(
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.spaceBetween,
                                                                          children: [
                                                                            Container(
                                                                              padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 10.0),
                                                                              alignment: Alignment.centerLeft,
                                                                              child: CustomTextBuilder(
                                                                                text: TextConstant.sendGiftText,
                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                fontSize: 22.0.sp,
                                                                                fontWeight: FontWeight.w700,
                                                                              ),
                                                                            ),
                                                                            Container(
                                                                              margin: const EdgeInsets.only(right: 15.0),
                                                                              child: const HoldingBalanceWidget(),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                        // 탭바
                                                                        Container(
                                                                          width: MediaQuery.of(context)
                                                                              .size
                                                                              .width,
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            border:
                                                                                Border(
                                                                              bottom: BorderSide(
                                                                                width: 0.5,
                                                                                color: ColorsConfig().border1(),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                          child:
                                                                              TabBar(
                                                                            controller:
                                                                                _giftTabController,
                                                                            isScrollable:
                                                                                true,
                                                                            padding:
                                                                                const EdgeInsets.symmetric(horizontal: 20.0),
                                                                            indicatorColor:
                                                                                ColorsConfig().primary(),
                                                                            unselectedLabelColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            unselectedLabelStyle:
                                                                                TextStyle(
                                                                              fontSize: 16.0.sp,
                                                                              fontWeight: FontWeight.w400,
                                                                            ),
                                                                            labelColor:
                                                                                ColorsConfig().primary(),
                                                                            labelStyle:
                                                                                TextStyle(
                                                                              fontSize: 16.0.sp,
                                                                              fontWeight: FontWeight.w700,
                                                                            ),
                                                                            onTap:
                                                                                (_) {
                                                                              state(() {
                                                                                _hasClick = false;
                                                                                _selectedGift = {};
                                                                              });
                                                                            },
                                                                            tabs: [
                                                                              Tab(
                                                                                child: CustomTextBuilder(
                                                                                  text: TextConstant.allText,
                                                                                ),
                                                                              ),
                                                                              Tab(
                                                                                child: CustomTextBuilder(
                                                                                  text: TextConstant.trophyText,
                                                                                ),
                                                                              ),
                                                                              Tab(
                                                                                child: CustomTextBuilder(
                                                                                  text: TextConstant.reactionText,
                                                                                ),
                                                                              ),
                                                                              Tab(
                                                                                child: CustomTextBuilder(
                                                                                  text: '메달',
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        Expanded(
                                                                          child:
                                                                              Padding(
                                                                            padding: !_hasClick
                                                                                ? const EdgeInsets.fromLTRB(25.0, 25.0, 15.0, 20.0)
                                                                                : const EdgeInsets.fromLTRB(25.0, 25.0, 15.0, 0.0),
                                                                            child:
                                                                                TabBarView(
                                                                              controller: _giftTabController,
                                                                              physics: const NeverScrollableScrollPhysics(),
                                                                              children: [
                                                                                ListView(
                                                                                  children: [
                                                                                    Wrap(
                                                                                      children: List.generate(gifts.result.length, (index) {
                                                                                        return InkWell(
                                                                                          splashColor: ColorsConfig.transparent,
                                                                                          highlightColor: ColorsConfig.transparent,
                                                                                          onTap: () {
                                                                                            state(() {
                                                                                              if (_hasClick && _selectedGift['index'] == index) {
                                                                                                _hasClick = false;
                                                                                                _selectedGift = {};
                                                                                              } else {
                                                                                                _hasClick = true;
                                                                                                _selectedGift = {
                                                                                                  "index": index,
                                                                                                  "item_index": gifts.result[index]['item_index'],
                                                                                                  "item_type": gifts.result[index]['item_type'],
                                                                                                  "item_type_name": gifts.result[index]['item_type_name'],
                                                                                                  "url": gifts.result[index]['url'],
                                                                                                  "description": gifts.result[index]['description'],
                                                                                                  "price": gifts.result[index]['price'],
                                                                                                };
                                                                                              }
                                                                                            });
                                                                                          },
                                                                                          child: Container(
                                                                                            margin: EdgeInsets.only(right: 10.0.w),
                                                                                            decoration: BoxDecoration(
                                                                                              color: _selectedGift['index'] == index && _giftTabIndex == 0 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                              borderRadius: BorderRadius.circular(14.0),
                                                                                            ),
                                                                                            child: Column(
                                                                                              children: [
                                                                                                Image(
                                                                                                  image: NetworkImage(
                                                                                                    gifts.result[index]['url'],
                                                                                                  ),
                                                                                                  filterQuality: FilterQuality.high,
                                                                                                  width: 65.0.w,
                                                                                                  height: 65.0.h,
                                                                                                ),
                                                                                                Container(
                                                                                                  margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                  child: CustomTextBuilder(
                                                                                                    text: '${gifts.result[index]['price']}',
                                                                                                    fontColor: ColorsConfig().textWhite1(),
                                                                                                    fontSize: 12.0.sp,
                                                                                                    fontWeight: FontWeight.w400,
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                        );
                                                                                      }),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                ListView(
                                                                                  children: [
                                                                                    Wrap(
                                                                                      children: List.generate(_trophy.length, (index) {
                                                                                        return InkWell(
                                                                                          splashColor: ColorsConfig.transparent,
                                                                                          highlightColor: ColorsConfig.transparent,
                                                                                          onTap: () {
                                                                                            state(() {
                                                                                              if (_hasClick && _selectedGift['index'] == index) {
                                                                                                _hasClick = false;
                                                                                                _selectedGift = {};
                                                                                              } else {
                                                                                                _hasClick = true;
                                                                                                _selectedGift = {
                                                                                                  "index": index,
                                                                                                  "item_index": _trophy[index]['item_index'],
                                                                                                  "item_type": _trophy[index]['item_type'],
                                                                                                  "item_type_name": _trophy[index]['item_type_name'],
                                                                                                  "url": _trophy[index]['url'],
                                                                                                  "description": _trophy[index]['description'],
                                                                                                  "price": _trophy[index]['price'],
                                                                                                };
                                                                                              }
                                                                                            });
                                                                                          },
                                                                                          child: Container(
                                                                                            margin: EdgeInsets.only(right: 10.0.w),
                                                                                            decoration: BoxDecoration(
                                                                                              color: _selectedGift['index'] == index && _giftTabIndex == 1 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                              borderRadius: BorderRadius.circular(14.0),
                                                                                            ),
                                                                                            child: _trophy[index]['item_type'] == 0
                                                                                                ? Column(
                                                                                                    children: [
                                                                                                      Image(
                                                                                                        image: NetworkImage(
                                                                                                          _trophy[index]['url'],
                                                                                                        ),
                                                                                                        filterQuality: FilterQuality.high,
                                                                                                        width: 65.0.w,
                                                                                                        height: 65.0.h,
                                                                                                      ),
                                                                                                      Container(
                                                                                                        margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                        child: CustomTextBuilder(
                                                                                                          text: '${_trophy[index]['price']}',
                                                                                                          fontColor: ColorsConfig().textWhite1(),
                                                                                                          fontSize: 12.0.sp,
                                                                                                          fontWeight: FontWeight.w400,
                                                                                                        ),
                                                                                                      ),
                                                                                                    ],
                                                                                                  )
                                                                                                : null,
                                                                                          ),
                                                                                        );
                                                                                      }),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                ListView(
                                                                                  children: [
                                                                                    Wrap(
                                                                                      children: List.generate(_reaction.length, (index) {
                                                                                        return InkWell(
                                                                                          splashColor: ColorsConfig.transparent,
                                                                                          highlightColor: ColorsConfig.transparent,
                                                                                          onTap: () {
                                                                                            state(() {
                                                                                              if (_hasClick && _selectedGift['index'] == index) {
                                                                                                _hasClick = false;
                                                                                                _selectedGift = {};
                                                                                              } else {
                                                                                                _hasClick = true;
                                                                                                _selectedGift = {
                                                                                                  "index": index,
                                                                                                  "item_index": _reaction[index]['item_index'],
                                                                                                  "item_type": _reaction[index]['item_type'],
                                                                                                  "item_type_name": _reaction[index]['item_type_name'],
                                                                                                  "url": _reaction[index]['url'],
                                                                                                  "description": _reaction[index]['description'],
                                                                                                  "price": _reaction[index]['price'],
                                                                                                };
                                                                                              }
                                                                                            });
                                                                                          },
                                                                                          child: Container(
                                                                                            margin: EdgeInsets.only(right: 10.0.w),
                                                                                            decoration: BoxDecoration(
                                                                                              color: _selectedGift['index'] == index && _giftTabIndex == 2 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                              borderRadius: BorderRadius.circular(14.0),
                                                                                            ),
                                                                                            child: _reaction[index]['item_type'] == 1
                                                                                                ? Column(
                                                                                                    children: [
                                                                                                      Image(
                                                                                                        image: NetworkImage(
                                                                                                          _reaction[index]['url'],
                                                                                                        ),
                                                                                                        filterQuality: FilterQuality.high,
                                                                                                        width: 65.0.w,
                                                                                                        height: 65.0.h,
                                                                                                      ),
                                                                                                      Container(
                                                                                                        margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                        child: CustomTextBuilder(
                                                                                                          text: '${_reaction[index]['price']}',
                                                                                                          fontColor: ColorsConfig().textWhite1(),
                                                                                                          fontSize: 12.0.sp,
                                                                                                          fontWeight: FontWeight.w400,
                                                                                                        ),
                                                                                                      ),
                                                                                                    ],
                                                                                                  )
                                                                                                : null,
                                                                                          ),
                                                                                        );
                                                                                      }),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                ListView(
                                                                                  children: [
                                                                                    Wrap(
                                                                                      children: List.generate(_neckTrophy.length, (index) {
                                                                                        return InkWell(
                                                                                          splashColor: ColorsConfig.transparent,
                                                                                          highlightColor: ColorsConfig.transparent,
                                                                                          onTap: () {
                                                                                            state(() {
                                                                                              if (_hasClick && _selectedGift['index'] == index) {
                                                                                                _hasClick = false;
                                                                                                _selectedGift = {};
                                                                                              } else {
                                                                                                _hasClick = true;
                                                                                                _selectedGift = {
                                                                                                  "index": index,
                                                                                                  "item_index": _neckTrophy[index]['item_index'],
                                                                                                  "item_type": _neckTrophy[index]['item_type'],
                                                                                                  "item_type_name": _neckTrophy[index]['item_type_name'],
                                                                                                  "url": _neckTrophy[index]['url'],
                                                                                                  "description": _neckTrophy[index]['description'],
                                                                                                  "price": _neckTrophy[index]['price'],
                                                                                                };
                                                                                              }
                                                                                            });
                                                                                          },
                                                                                          child: Container(
                                                                                            margin: EdgeInsets.only(right: 10.0.w),
                                                                                            decoration: BoxDecoration(
                                                                                              color: _selectedGift['index'] == index && _giftTabIndex == 3 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                              borderRadius: BorderRadius.circular(14.0),
                                                                                            ),
                                                                                            child: _neckTrophy[index]['item_type'] == 2
                                                                                                ? Column(
                                                                                                    children: [
                                                                                                      Image(
                                                                                                        image: NetworkImage(
                                                                                                          _neckTrophy[index]['url'],
                                                                                                        ),
                                                                                                        filterQuality: FilterQuality.high,
                                                                                                        width: 65.0.w,
                                                                                                        height: 65.0.h,
                                                                                                      ),
                                                                                                      Container(
                                                                                                        margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                        child: CustomTextBuilder(
                                                                                                          text: '${_neckTrophy[index]['price']}',
                                                                                                          fontColor: ColorsConfig().textWhite1(),
                                                                                                          fontSize: 12.0.sp,
                                                                                                          fontWeight: FontWeight.w400,
                                                                                                        ),
                                                                                                      ),
                                                                                                    ],
                                                                                                  )
                                                                                                : null,
                                                                                          ),
                                                                                        );
                                                                                      }),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                        _hasClick ==
                                                                                true
                                                                            ? Container(
                                                                                height: 157.0,
                                                                                padding: const EdgeInsets.fromLTRB(20.0, 10.0, 20.0, 30.0),
                                                                                decoration: BoxDecoration(
                                                                                  color: ColorsConfig().subBackground1(),
                                                                                  boxShadow: [
                                                                                    BoxShadow(
                                                                                      color: ColorsConfig().textWhite1(opacity: 0.16),
                                                                                      blurRadius: 10.0,
                                                                                      offset: const Offset(0.0, -2.0),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                child: Column(
                                                                                  children: [
                                                                                    Row(
                                                                                      children: [
                                                                                        Image(
                                                                                          image: NetworkImage(
                                                                                            '${_selectedGift['url']}',
                                                                                          ),
                                                                                          filterQuality: FilterQuality.high,
                                                                                          width: 65.0.w,
                                                                                          height: 65.0.h,
                                                                                        ),
                                                                                        const SizedBox(width: 32.0),
                                                                                        Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                                          children: [
                                                                                            CustomTextBuilder(
                                                                                              text: '${_selectedGift['description']}',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 16.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                            CustomTextBuilder(
                                                                                              text: numberFormat.format(_selectedGift['price']),
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    const SizedBox(height: 10.0),
                                                                                    InkWell(
                                                                                      onTap: () {
                                                                                        if (_selectedGift['price'] == 0) {
                                                                                          SendGiftDataAPI().gift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: getSubscribePostListData['list'][index - 1]['post_index']).then((value) {
                                                                                            int? _existIndex;

                                                                                            switch (value.result['status']) {
                                                                                              case 10200:
                                                                                                setState(() {
                                                                                                  if (getSubscribePostListData['list'][index - 1]['gift'].length == 0) {
                                                                                                    getSubscribePostListData['list'][index - 1]['gift'].add({
                                                                                                      "image": _selectedGift['url'],
                                                                                                      "gift_count": 1,
                                                                                                    });
                                                                                                  } else {
                                                                                                    for (int i = 0; i < getSubscribePostListData['list'][index - 1]['gift'].length; i++) {
                                                                                                      if (getSubscribePostListData['list'][index - 1]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                                        _existIndex = i;
                                                                                                        break;
                                                                                                      }
                                                                                                    }

                                                                                                    if (_existIndex != null) {
                                                                                                      getSubscribePostListData['list'][index - 1]['gift'][_existIndex]['gift_count'] = getSubscribePostListData['list'][index - 1]['gift'][_existIndex]['gift_count'] + 1;
                                                                                                    } else {
                                                                                                      getSubscribePostListData['list'][index - 1]['gift'].insert(0, {
                                                                                                        "image": _selectedGift['url'],
                                                                                                        "gift_count": 1,
                                                                                                      });
                                                                                                    }
                                                                                                  }
                                                                                                });
                                                                                                Navigator.pop(context);
                                                                                                break;
                                                                                              case 10201:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText1,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                              case 10202:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText2,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                              case 10203:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText3,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                              case 10204:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText4,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                            }
                                                                                          });
                                                                                        } else {
                                                                                          SendPricedGiftDataAPI().pricedGift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: getSubscribePostListData['list'][index - 1]['post_index']).then((value) {
                                                                                            int? _existIndex;

                                                                                            switch (value.result['status']) {
                                                                                              case 10201:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText1,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                              case 10202:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText2,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                              case 10203:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText3,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                              case 10210:
                                                                                                setState(() {
                                                                                                  if (getSubscribePostListData['list'][index - 1]['gift'].length == 0) {
                                                                                                    getSubscribePostListData['list'][index - 1]['gift'].add({
                                                                                                      "image": _selectedGift['url'],
                                                                                                      "gift_count": 1,
                                                                                                    });
                                                                                                  } else {
                                                                                                    for (int i = 0; i < getSubscribePostListData['list'][index - 1]['gift'].length; i++) {
                                                                                                      if (getSubscribePostListData['list'][index - 1]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                                        _existIndex = i;
                                                                                                        break;
                                                                                                      }
                                                                                                    }

                                                                                                    if (_existIndex != null) {
                                                                                                      getSubscribePostListData['list'][index - 1]['gift'][_existIndex]['gift_count'] = getSubscribePostListData['list'][index - 1]['gift'][_existIndex]['gift_count'] + 1;
                                                                                                    } else {
                                                                                                      getSubscribePostListData['list'][index - 1]['gift'].insert(0, {
                                                                                                        "image": _selectedGift['url'],
                                                                                                        "gift_count": 1,
                                                                                                      });
                                                                                                    }
                                                                                                  }
                                                                                                });
                                                                                                Navigator.pop(context);
                                                                                                break;
                                                                                              case 10211:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText5,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                              case 10212:
                                                                                                ToastBuilder().toast(
                                                                                                  Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    padding: const EdgeInsets.all(14.0),
                                                                                                    margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                      borderRadius: BorderRadius.circular(6.0),
                                                                                                    ),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: TextConstant.giftSendErrorText6,
                                                                                                      fontColor: ColorsConfig.defaultWhite,
                                                                                                      fontSize: 14.0.sp,
                                                                                                    ),
                                                                                                  ),
                                                                                                );
                                                                                                break;
                                                                                            }
                                                                                          });
                                                                                        }
                                                                                      },
                                                                                      child: Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        height: 42.0,
                                                                                        decoration: BoxDecoration(
                                                                                          // color: ColorsConfig().primary(),
                                                                                          borderRadius: BorderRadius.circular(100.0),
                                                                                          gradient: LinearGradient(
                                                                                            colors: [
                                                                                              ColorsConfig().avatarButtonBackground1(),
                                                                                              ColorsConfig().avatarButtonBackground2(),
                                                                                            ],
                                                                                            begin: Alignment.centerLeft,
                                                                                            end: Alignment.centerRight,
                                                                                          ),
                                                                                        ),
                                                                                        child: Center(
                                                                                          child: CustomTextBuilder(
                                                                                            text: TextConstant.sendText,
                                                                                            fontColor: ColorsConfig().background(),
                                                                                            fontSize: 16.0.sp,
                                                                                            fontWeight: FontWeight.w700,
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              )
                                                                            : Container(),
                                                                      ],
                                                                    ),
                                                                  );
                                                                },
                                                              );
                                                            });
                                                      });
                                                    },
                                                    child: SvgAssets(
                                                      image:
                                                          'assets/icon/gift.svg',
                                                      color: ColorsConfig()
                                                          .textBlack1(),
                                                      width: 18.0,
                                                      height: 18.0,
                                                    ),
                                                  ),
                                                  // 공유
                                                  MaterialButton(
                                                    onPressed: () async {
                                                      var shortLink = await DeepLinkBuilder()
                                                          .getShortLink(
                                                              'share',
                                                              '${getSubscribePostListData['list'][index - 1]['post_index']}',
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [
                                                                      index - 1]
                                                                  ['type']);

                                                      Share.share(
                                                        '${getSubscribePostListData['list'][index - 1]['title']}\n$shortLink',
                                                        sharePositionOrigin:
                                                            Rect.fromLTWH(
                                                                0,
                                                                0,
                                                                MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width,
                                                                MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .height /
                                                                    2),
                                                      );
                                                    },
                                                    child: SvgAssets(
                                                      image:
                                                          'assets/icon/share.svg',
                                                      color: ColorsConfig()
                                                          .textBlack1(),
                                                      width: 18.0,
                                                      height: 18.0,
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ],
                                          ),
                                        );
                                      } else {
                                        SharedPreferences.getInstance()
                                            .then((_prefs) {
                                          if (selectedUserIndex == 0) {
                                            GetSubscribePostListAPI()
                                                .subscribePostList(
                                                    accesToken: _prefs
                                                        .getString(
                                                            'AccessToken')!,
                                                    cursor:
                                                        getSubscribePostListData[
                                                                    'list']
                                                                [index - 2]
                                                            ['post_index'])
                                                .then((value) {
                                              for (int i = 0;
                                                  i <
                                                      value.result['list']
                                                          .length;
                                                  i++) {
                                                setState(() {
                                                  getSubscribePostListData[
                                                          'list']
                                                      .add(value.result['list']
                                                          [i]);
                                                  currentPage2.add(0);
                                                  getSubscribeMoreBtnState
                                                      .add(false);
                                                });
                                              }
                                            });
                                          } else {
                                            GetSubscribePostListAPI()
                                                .subscribePostList(
                                                    accesToken: _prefs
                                                        .getString(
                                                            'AccessToken')!,
                                                    cursor:
                                                        getSubscribePostListData[
                                                                    'list']
                                                                [index - 2]
                                                            ['post_index'],
                                                    userIndex:
                                                        selectedUserIndex)
                                                .then((value) {
                                              for (int i = 0;
                                                  i <
                                                      value.result['list']
                                                          .length;
                                                  i++) {
                                                setState(() {
                                                  getSubscribePostListData[
                                                          'list']
                                                      .add(value.result['list']
                                                          [i]);
                                                  currentPage2.add(0);
                                                  getSubscribeMoreBtnState
                                                      .add(false);
                                                });
                                              }
                                            });
                                          }
                                        });
                                        return Container();
                                      }
                                    },
                                  ),
                                )
                              : Column(
                                  children: [
                                    Container(
                                      height: 88.0,
                                      color: ColorsConfig().subBackground1(),
                                      child: Row(
                                        children: [
                                          Expanded(
                                            child: ListView.builder(
                                              scrollDirection: Axis.horizontal,
                                              itemCount:
                                                  getSubscribePostListData[
                                                          'subscribe']
                                                      .length,
                                              itemBuilder: (context, hor) {
                                                return InkWell(
                                                  onTap: () async {
                                                    final _prefs =
                                                        await SharedPreferences
                                                            .getInstance();

                                                    setState(() {
                                                      if (selectedUserIndex !=
                                                          getSubscribePostListData[
                                                                      'subscribe']
                                                                  [hor]
                                                              ['user_index']) {
                                                        selectedUserIndex =
                                                            getSubscribePostListData[
                                                                    'subscribe']
                                                                [
                                                                hor]['user_index'];

                                                        GetSubscribePostListAPI()
                                                            .subscribePostList(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!,
                                                                userIndex:
                                                                    selectedUserIndex)
                                                            .then((value) {
                                                          setState(() {
                                                            currentPage2
                                                                .clear();
                                                            getSubscribeMoreBtnState
                                                                .clear();
                                                            getSubscribePostListData =
                                                                value.result;
                                                            for (int i = 0;
                                                                i <
                                                                    value
                                                                        .result[
                                                                            'list']
                                                                        .length;
                                                                i++) {
                                                              currentPage2
                                                                  .add(0);
                                                              getSubscribeMoreBtnState
                                                                  .add(false);
                                                            }
                                                          });
                                                        });
                                                      } else {
                                                        selectedUserIndex = 0;

                                                        GetSubscribePostListAPI()
                                                            .subscribePostList(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!)
                                                            .then((value) {
                                                          setState(() {
                                                            currentPage2
                                                                .clear();
                                                            getSubscribeMoreBtnState
                                                                .clear();
                                                            getSubscribePostListData =
                                                                value.result;
                                                            for (int i = 0;
                                                                i <
                                                                    value
                                                                        .result[
                                                                            'list']
                                                                        .length;
                                                                i++) {
                                                              currentPage2
                                                                  .add(0);
                                                              getSubscribeMoreBtnState
                                                                  .add(false);
                                                            }
                                                          });
                                                        });
                                                      }
                                                    });
                                                  },
                                                  child: Stack(
                                                    children: [
                                                      Container(
                                                        margin: hor == 0
                                                            ? const EdgeInsets
                                                                .only(
                                                                left: 15.0,
                                                                right: 4.0)
                                                            : const EdgeInsets
                                                                .symmetric(
                                                                horizontal:
                                                                    4.0),
                                                        child: Column(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .center,
                                                          children: [
                                                            Container(
                                                              width: 52.5,
                                                              height: 52.5,
                                                              margin:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      bottom:
                                                                          2.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .userIconBackground(),
                                                                border: selectedUserIndex ==
                                                                        getSubscribePostListData['subscribe'][hor]
                                                                            [
                                                                            'user_index']
                                                                    ? Border
                                                                        .all(
                                                                        width:
                                                                            2.0,
                                                                        color: ColorsConfig()
                                                                            .primary(),
                                                                      )
                                                                    : null,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            100.0),
                                                                image:
                                                                    DecorationImage(
                                                                  image:
                                                                      NetworkImage(
                                                                    getSubscribePostListData['subscribe']
                                                                            [
                                                                            hor]
                                                                        [
                                                                        'avatar_url'],
                                                                    scale: 4.5,
                                                                  ),
                                                                  filterQuality:
                                                                      FilterQuality
                                                                          .high,
                                                                  fit: BoxFit
                                                                      .none,
                                                                  alignment:
                                                                      const Alignment(
                                                                          0.0,
                                                                          -0.3),
                                                                ),
                                                              ),
                                                            ),
                                                            SizedBox(
                                                              width: 60.0,
                                                              child: Center(
                                                                child:
                                                                    CustomTextBuilder(
                                                                  text: getSubscribePostListData[
                                                                              'subscribe']
                                                                          [hor][
                                                                      'user_nick'],
                                                                  fontColor:
                                                                      ColorsConfig()
                                                                          .textWhite1(),
                                                                  fontSize:
                                                                      12.0.sp,
                                                                  maxLines: 1,
                                                                  textOverflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      selectedUserIndex != 0 &&
                                                              selectedUserIndex !=
                                                                  getSubscribePostListData[
                                                                              'subscribe']
                                                                          [hor][
                                                                      'user_index']
                                                          ? Container(
                                                              width: 60.5,
                                                              height:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .height,
                                                              color: ColorsConfig()
                                                                  .subBackground1(
                                                                      opacity:
                                                                          0.5),
                                                            )
                                                          : Container(),
                                                    ],
                                                  ),
                                                );
                                              },
                                            ),
                                          ),
                                          InkWell(
                                            onTap: () {
                                              Navigator.pushNamed(
                                                  context, '/subscribe',
                                                  arguments: {
                                                    'tabIndex': 1,
                                                    'user_nickname':
                                                        getProfileData['nick'],
                                                  }).then((value) async {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                GetSubscribePostListAPI()
                                                    .subscribePostList(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!)
                                                    .then((value) {
                                                  setState(() {
                                                    currentPage2.clear();
                                                    getSubscribeMoreBtnState
                                                        .clear();
                                                    getSubscribePostListData =
                                                        value.result;
                                                    for (int i = 0;
                                                        i <
                                                            value.result['list']
                                                                .length;
                                                        i++) {
                                                      currentPage2.add(0);
                                                      getSubscribeMoreBtnState
                                                          .add(false);
                                                    }
                                                  });
                                                });
                                              });
                                            },
                                            child: Container(
                                              width: 73.0,
                                              color: ColorsConfig()
                                                  .subBackground1(),
                                              child: Center(
                                                child: CustomTextBuilder(
                                                  text: TextConstant.allText,
                                                  fontColor:
                                                      ColorsConfig().primary(),
                                                  fontSize: 14.0.sp,
                                                  fontWeight: FontWeight.w400,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    Expanded(
                                      child: Center(
                                        child: Container(
                                          color: ColorsConfig().background(),
                                          child: Center(
                                            child: Column(
                                              mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                              children: [
                                                const SizedBox(
                                                  width: 100.0,
                                                  height: 100.0,
                                                  child: Image(
                                                    image: AssetImage(
                                                        'assets/img/none_data.png'),
                                                    filterQuality:
                                                        FilterQuality.high,
                                                  ),
                                                ),
                                                const SizedBox(height: 20.0),
                                                CustomTextBuilder(
                                                  text: TextConstant
                                                      .noContentsToSubscribeText,
                                                  fontColor: ColorsConfig()
                                                      .textWhite1(),
                                                  fontSize: 16.0.sp,
                                                  fontWeight: FontWeight.w400,
                                                )
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                        )
                      : Expanded(
                          child: Container(
                            color: ColorsConfig().background(),
                            child: Center(
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  const SizedBox(
                                    width: 82.0,
                                    height: 82.0,
                                    child: Image(
                                      image: AssetImage(
                                          'assets/img/none_subscribe.png'),
                                      filterQuality: FilterQuality.high,
                                    ),
                                  ),
                                  const SizedBox(height: 20.0),
                                  CustomTextBuilder(
                                    text: TextConstant.noFollowText,
                                    fontColor: ColorsConfig().textWhite1(),
                                    fontSize: 16.0.sp,
                                    fontWeight: FontWeight.w400,
                                  ),
                                  CustomTextBuilder(
                                    text:
                                        TextConstant.checkSubscribeContentsText,
                                    fontColor: ColorsConfig().textBlack2(),
                                    fontSize: 16.0.sp,
                                    fontWeight: FontWeight.w400,
                                  )
                                ],
                              ),
                            ),
                          ),
                        ),
                ],
              ),
            ],
          ),
        ),
      );
    }
    return Container();
  }

  Widget cardLayoutWidget() {
    if (postListData.isNotEmpty) {
      return Expanded(
        child: Container(
          color: ColorsConfig().background(),
          child: TabBarView(
            controller: _tabController,
            children: [
              RefreshIndicator(
                onRefresh: () async {
                  final _prefs = await SharedPreferences.getInstance();

                  GetPostListAPI()
                      .list(accesToken: _prefs.getString('AccessToken')!)
                      .then((value) {
                    setState(() {
                      currentPage.clear();
                      postListData = value.result['data'];
                      for (int i = 0; i < value.result['data'].length; i++) {
                        currentPage.add(0);
                      }
                    });
                  });

                  GetSubscribePostListAPI()
                      .subscribePostList(
                          accesToken: _prefs.getString('AccessToken')!)
                      .then((value) {
                    setState(() {
                      currentPage2.clear();
                      getSubscribePostListData = value.result;
                      for (int i = 0; i < value.result['list'].length; i++) {
                        currentPage2.add(0);
                      }
                    });
                  });
                },
                color: ColorsConfig().textWhite1(),
                backgroundColor: ColorsConfig().subBackgroundBlack(),
                child: ListView.builder(
                  padding: EdgeInsets.zero,
                  controller: widget.cardScrollController,
                  itemCount: postListData.length + 1,
                  itemBuilder: (context, index) {
                    if (index < postListData.length) {
                      if (index == 0) {
                        return Column(
                          children: [
                            selectCategoryWidget(),
                            InkWell(
                              onTap: () {
                                if (postListData[index]['type'] == 4) {
                                  Navigator.push(
                                    context,
                                    MaterialPageRoute(
                                      builder: (context) => NewsDetailScreen(
                                        postIndex: postListData[index]
                                            ['post_index'],
                                        postType: postListData[index]['type'],
                                      ),
                                    ),
                                  ).then((returns) async {
                                    if (returns != null) {
                                      if (returns['ret']) {
                                        setState(() {
                                          postListData
                                              .remove(postListData[index]);
                                          currentPage.removeAt(index);
                                        });
                                      }
                                    } else {
                                      final _prefs =
                                          await SharedPreferences.getInstance();

                                      PostDetailDataAPI()
                                          .detail(
                                              accesToken: _prefs
                                                  .getString('AccessToken')!,
                                              postIndex: postListData[index]
                                                  ['post_index'])
                                          .then((value) {
                                        setState(() {
                                          postListData[index] = value.result;
                                        });
                                      });
                                    }
                                  });
                                } else if (postListData[index]['type'] == 5) {
                                  Navigator.push(
                                    context,
                                    MaterialPageRoute(
                                      builder: (context) => VoteDetailScreen(
                                        postIndex: postListData[index]
                                            ['post_index'],
                                        postType: postListData[index]['type'],
                                      ),
                                    ),
                                  ).then((returns) async {
                                    if (returns != null) {
                                      if (returns['ret']) {
                                        setState(() {
                                          postListData
                                              .remove(postListData[index]);
                                          currentPage.removeAt(index);
                                        });
                                      }
                                    } else {
                                      final _prefs =
                                          await SharedPreferences.getInstance();

                                      PostDetailDataAPI()
                                          .detail(
                                              accesToken: _prefs
                                                  .getString('AccessToken')!,
                                              postIndex: postListData[index]
                                                  ['post_index'])
                                          .then((value) {
                                        setState(() {
                                          postListData[index] = value.result;
                                        });
                                      });
                                    }
                                  });
                                } else {
                                  Navigator.push(
                                    context,
                                    MaterialPageRoute(
                                      builder: (context) => PostingDetailScreen(
                                        postIndex: postListData[index]
                                            ['post_index'],
                                        postType: postListData[index]['type'],
                                      ),
                                    ),
                                  ).then((returns) async {
                                    if (returns != null) {
                                      if (returns['ret']) {
                                        setState(() {
                                          postListData
                                              .remove(postListData[index]);
                                          currentPage.removeAt(index);
                                        });
                                      }
                                    } else {
                                      final _prefs =
                                          await SharedPreferences.getInstance();

                                      PostDetailDataAPI()
                                          .detail(
                                              accesToken: _prefs
                                                  .getString('AccessToken')!,
                                              postIndex: postListData[index]
                                                  ['post_index'])
                                          .then((value) {
                                        setState(() {
                                          postListData[index] = value.result;
                                        });
                                      });
                                    }
                                  });
                                }
                              },
                              child: Container(
                                color: ColorsConfig().subBackground1(),
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    // 유저 이미지, 닉네임, 날짜, 더보기 버튼
                                    Padding(
                                      padding: const EdgeInsets.fromLTRB(
                                          20.0, 13.4, 20.0, 0.0),
                                      child: Row(
                                        mainAxisAlignment:
                                            MainAxisAlignment.spaceBetween,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          InkWell(
                                            onTap: () {
                                              if (postListData[index]['isMe']) {
                                                Navigator.pushNamed(
                                                    context, '/my_profile',
                                                    arguments: {
                                                      'onNavigator': true,
                                                    });
                                              } else {
                                                Navigator.pushNamed(
                                                    context, '/your_profile',
                                                    arguments: {
                                                      'user_index':
                                                          postListData[index]
                                                              ['user_index'],
                                                      'user_nickname':
                                                          postListData[index]
                                                              ['nick'],
                                                    }).then((_) async {
                                                  final _prefs =
                                                      await SharedPreferences
                                                          .getInstance();

                                                  GetSubscribePostListAPI()
                                                      .subscribePostList(
                                                          accesToken:
                                                              _prefs.getString(
                                                                  'AccessToken')!)
                                                      .then((value) {
                                                    setState(() {
                                                      currentPage2.clear();
                                                      getSubscribePostListData =
                                                          value.result;
                                                      for (int i = 0;
                                                          i <
                                                              value
                                                                  .result[
                                                                      'list']
                                                                  .length;
                                                          i++) {
                                                        currentPage2.add(0);
                                                      }
                                                    });
                                                  });
                                                });
                                              }
                                            },
                                            child: Row(
                                              children: [
                                                // 이미지
                                                Container(
                                                  width: 42.0,
                                                  height: 42.0,
                                                  decoration: BoxDecoration(
                                                    color: ColorsConfig()
                                                        .userIconBackground(),
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            21.0),
                                                    image: DecorationImage(
                                                      image: NetworkImage(
                                                        postListData[index]
                                                            ['avatar_url'],
                                                        scale: 5.5,
                                                      ),
                                                      filterQuality:
                                                          FilterQuality.high,
                                                      fit: BoxFit.none,
                                                      alignment:
                                                          const Alignment(
                                                              0.0, -0.3),
                                                    ),
                                                  ),
                                                ),
                                                Column(
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  children: [
                                                    SizedBox(
                                                      width:
                                                          MediaQuery.of(context)
                                                                  .size
                                                                  .width -
                                                              82.0,
                                                      child: Row(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceBetween,
                                                        children: [
                                                          Row(
                                                            children: [
                                                              // 닉네임
                                                              Container(
                                                                margin: const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        8.0),
                                                                child:
                                                                    CustomTextBuilder(
                                                                  text:
                                                                      '${postListData[index]['nick']}',
                                                                  fontColor:
                                                                      ColorsConfig()
                                                                          .textWhite1(),
                                                                  fontSize:
                                                                      16.0.sp,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w700,
                                                                ),
                                                              ),
                                                              // 날짜
                                                              CustomTextBuilder(
                                                                text: DateCalculatorWrapper()
                                                                    .daysCalculator(
                                                                        postListData[index]
                                                                            [
                                                                            'date']),
                                                                fontColor:
                                                                    ColorsConfig
                                                                        .defaultGray,
                                                                fontSize:
                                                                    14.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w400,
                                                                height: 1.8,
                                                              ),
                                                            ],
                                                          ),
                                                          InkWell(
                                                            onTap: () async {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              if (!hasTypeSelected) {
                                                                GetPostListAPI()
                                                                    .list(
                                                                        accesToken:
                                                                            _prefs.getString(
                                                                                'AccessToken')!,
                                                                        category:
                                                                            postListData[index][
                                                                                'type'])
                                                                    .then(
                                                                        (value) {
                                                                  setState(() {
                                                                    hasTypeSelected =
                                                                        true;
                                                                    selectedPostType =
                                                                        postListData[index]
                                                                            [
                                                                            'type'];
                                                                    currentPage
                                                                        .clear();
                                                                    postListData =
                                                                        value.result[
                                                                            'data'];
                                                                    for (int i =
                                                                            0;
                                                                        i < value.result['data'].length;
                                                                        i++) {
                                                                      currentPage
                                                                          .add(
                                                                              0);
                                                                    }
                                                                    widget
                                                                        .cardScrollController
                                                                        .jumpTo(
                                                                            0.0);
                                                                  });
                                                                });
                                                              } else {
                                                                GetPostListAPI()
                                                                    .list(
                                                                        accesToken:
                                                                            _prefs.getString(
                                                                                'AccessToken')!)
                                                                    .then(
                                                                        (value) {
                                                                  setState(() {
                                                                    hasTypeSelected =
                                                                        false;
                                                                    selectedPostType =
                                                                        0;
                                                                    currentPage
                                                                        .clear();
                                                                    postListData =
                                                                        value.result[
                                                                            'data'];
                                                                    for (int i =
                                                                            0;
                                                                        i < value.result['data'].length;
                                                                        i++) {
                                                                      currentPage2
                                                                          .add(
                                                                              0);
                                                                    }
                                                                    widget
                                                                        .cardScrollController
                                                                        .jumpTo(
                                                                            0.0);
                                                                  });
                                                                });
                                                              }
                                                            },
                                                            child: LabelCategoryWidgetBuilder(
                                                                data: postListData[
                                                                        index]
                                                                    ['type']),
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    Row(
                                                      children: [
                                                        // 선물받은 뱃지영역
                                                        postListData[index]
                                                                    ['gift']
                                                                .isNotEmpty
                                                            ? InkWell(
                                                                onTap:
                                                                    () async {
                                                                  final _prefs =
                                                                      await SharedPreferences
                                                                          .getInstance();

                                                                  GetGiftHistoryListDataAPI()
                                                                      .giftHistory(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: postListData[index]
                                                                              [
                                                                              'post_index'])
                                                                      .then(
                                                                          (history) {
                                                                    showModalBottomSheet(
                                                                        context:
                                                                            context,
                                                                        backgroundColor:
                                                                            ColorsConfig()
                                                                                .subBackground1(),
                                                                        shape:
                                                                            const RoundedRectangleBorder(
                                                                          borderRadius:
                                                                              BorderRadius.only(
                                                                            topLeft:
                                                                                Radius.circular(12.0),
                                                                            topRight:
                                                                                Radius.circular(12.0),
                                                                          ),
                                                                        ),
                                                                        builder:
                                                                            (BuildContext
                                                                                context) {
                                                                          return SafeArea(
                                                                            child:
                                                                                Container(
                                                                              decoration: const BoxDecoration(
                                                                                borderRadius: BorderRadius.only(
                                                                                  topLeft: Radius.circular(12.0),
                                                                                  topRight: Radius.circular(12.0),
                                                                                ),
                                                                              ),
                                                                              child: Column(
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Container(
                                                                                    width: 50.0,
                                                                                    height: 4.0,
                                                                                    margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                    decoration: BoxDecoration(
                                                                                      color: ColorsConfig().textBlack2(),
                                                                                      borderRadius: BorderRadius.circular(100.0),
                                                                                    ),
                                                                                  ),
                                                                                  Center(
                                                                                    child: Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                      decoration: BoxDecoration(
                                                                                        border: Border(
                                                                                          bottom: BorderSide(
                                                                                            width: 0.5,
                                                                                            color: ColorsConfig().border1(),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftHistoryText,
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 18.0.sp,
                                                                                        fontWeight: FontWeight.w600,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  Expanded(
                                                                                    child: ListView.builder(
                                                                                        itemCount: history.result['users'].length,
                                                                                        itemBuilder: (context, historyIndex) {
                                                                                          return Container(
                                                                                            width: MediaQuery.of(context).size.width,
                                                                                            height: 65.0,
                                                                                            padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                            decoration: BoxDecoration(
                                                                                              border: Border(
                                                                                                bottom: BorderSide(
                                                                                                  width: 0.5,
                                                                                                  color: ColorsConfig().border1(),
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                            child: Row(
                                                                                              children: [
                                                                                                Expanded(
                                                                                                  child: InkWell(
                                                                                                    onTap: () {
                                                                                                      Navigator.pop(context);
                                                                                                      if (history.result['users'][historyIndex]['isMe']) {
                                                                                                        Navigator.pushNamed(context, '/my_profile', arguments: {
                                                                                                          'onNavigator': true,
                                                                                                        });
                                                                                                      } else {
                                                                                                        Navigator.pushNamed(context, '/your_profile', arguments: {
                                                                                                          'user_index': history.result['users'][historyIndex]['user_index'],
                                                                                                          'user_nickname': history.result['users'][historyIndex]['nick'],
                                                                                                        }).then((_) async {
                                                                                                          final _prefs = await SharedPreferences.getInstance();

                                                                                                          GetSubscribePostListAPI().subscribePostList(accesToken: _prefs.getString('AccessToken')!).then((value) {
                                                                                                            setState(() {
                                                                                                              currentPage2.clear();
                                                                                                              getSubscribePostListData = value.result;
                                                                                                              for (int i = 0; i < value.result['list'].length; i++) {
                                                                                                                currentPage2.add(0);
                                                                                                              }
                                                                                                            });
                                                                                                          });
                                                                                                        });
                                                                                                      }
                                                                                                    },
                                                                                                    child: Row(
                                                                                                      children: [
                                                                                                        // 아바타 이미지
                                                                                                        Container(
                                                                                                          width: 35.0,
                                                                                                          height: 35.0,
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig().userIconBackground(),
                                                                                                            borderRadius: BorderRadius.circular(17.5),
                                                                                                            image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                                ? DecorationImage(
                                                                                                                    image: NetworkImage(
                                                                                                                      history.result['users'][historyIndex]['avatar'],
                                                                                                                      scale: 7.0,
                                                                                                                    ),
                                                                                                                    filterQuality: FilterQuality.high,
                                                                                                                    fit: BoxFit.none,
                                                                                                                    alignment: const Alignment(0.0, -0.3),
                                                                                                                  )
                                                                                                                : null,
                                                                                                          ),
                                                                                                        ),
                                                                                                        const SizedBox(width: 15.0),
                                                                                                        CustomTextBuilder(
                                                                                                          text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                          fontColor: ColorsConfig().textWhite1(),
                                                                                                          fontSize: 16.0.sp,
                                                                                                          fontWeight: FontWeight.w400,
                                                                                                        ),
                                                                                                      ],
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                                Expanded(
                                                                                                  child: ListView.builder(
                                                                                                    scrollDirection: Axis.horizontal,
                                                                                                    itemCount: history.result['gifts'].length,
                                                                                                    itemBuilder: (context, giftHistory) {
                                                                                                      if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                        return Container();
                                                                                                      }
                                                                                                      return Row(
                                                                                                        children: [
                                                                                                          Image(
                                                                                                            image: NetworkImage(
                                                                                                              history.result['gifts'][giftHistory]['image'],
                                                                                                            ),
                                                                                                          ),
                                                                                                          const SizedBox(width: 4.0),
                                                                                                          CustomTextBuilder(
                                                                                                            text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                            fontColor: ColorsConfig().textBlack2(),
                                                                                                            fontSize: 12.0.sp,
                                                                                                            fontWeight: FontWeight.w700,
                                                                                                          ),
                                                                                                          const SizedBox(width: 4.0),
                                                                                                        ],
                                                                                                      );
                                                                                                    },
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          );
                                                                        });
                                                                  });
                                                                },
                                                                child: !getPostListMoreBtnState[
                                                                        index]
                                                                    ? Container(
                                                                        margin: const EdgeInsets
                                                                            .only(
                                                                            left:
                                                                                4.0,
                                                                            top:
                                                                                5.0),
                                                                        child:
                                                                            SingleChildScrollView(
                                                                          physics:
                                                                              const NeverScrollableScrollPhysics(),
                                                                          scrollDirection:
                                                                              Axis.horizontal,
                                                                          child: postListData[index]['gift'].isNotEmpty
                                                                              ? Row(
                                                                                  children: List.generate(postListData[index]['gift'].length > 4 ? 4 : postListData[index]['gift'].length, (giftIndex) {
                                                                                    return Container(
                                                                                      margin: const EdgeInsets.only(right: 8.0),
                                                                                      child: Row(
                                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Container(
                                                                                            width: 24.0,
                                                                                            height: 24.0,
                                                                                            decoration: BoxDecoration(
                                                                                              borderRadius: BorderRadius.circular(9.0),
                                                                                            ),
                                                                                            child: Image(
                                                                                              image: NetworkImage(
                                                                                                postListData[index]['gift'][giftIndex]['image'],
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                          CustomTextBuilder(
                                                                                            text: '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                                            fontColor: ColorsConfig.defaultGray,
                                                                                            fontSize: 12.0.sp,
                                                                                            fontWeight: FontWeight.w700,
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  }),
                                                                                )
                                                                              : Container(),
                                                                        ),
                                                                      )
                                                                    : Container(
                                                                        margin: const EdgeInsets
                                                                            .only(
                                                                            left:
                                                                                4.0,
                                                                            top:
                                                                                5.0),
                                                                        child: postListData[index]['gift'].isNotEmpty
                                                                            ? Wrap(
                                                                                children: List.generate(postListData[index]['gift'].length, (giftIndex) {
                                                                                  return Container(
                                                                                    margin: const EdgeInsets.only(right: 8.0),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Container(
                                                                                          width: 24.0,
                                                                                          height: 24.0,
                                                                                          decoration: BoxDecoration(
                                                                                            borderRadius: BorderRadius.circular(9.0),
                                                                                          ),
                                                                                          child: Image(
                                                                                            image: NetworkImage(
                                                                                              postListData[index]['gift'][giftIndex]['image'],
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        CustomTextBuilder(
                                                                                          text: '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                                          fontColor: ColorsConfig().textBlack2(),
                                                                                          fontSize: 12.0.sp,
                                                                                          fontWeight: FontWeight.w700,
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                }),
                                                                              )
                                                                            : Container(),
                                                                      ),
                                                              )
                                                            : Container(),
                                                        !getPostListMoreBtnState[
                                                                    index] &&
                                                                postListData[index]
                                                                            [
                                                                            'gift']
                                                                        .length >
                                                                    4
                                                            ? InkWell(
                                                                onTap: () {
                                                                  setState(() {
                                                                    getPostListMoreBtnState[
                                                                            index] =
                                                                        true;
                                                                  });
                                                                },
                                                                child: Padding(
                                                                  padding: const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                          4.0),
                                                                  child:
                                                                      CustomTextBuilder(
                                                                    text: TextConstant
                                                                        .moreReadText,
                                                                    fontColor:
                                                                        ColorsConfig()
                                                                            .textBlack2(),
                                                                    fontSize:
                                                                        14.0.sp,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w400,
                                                                  ),
                                                                ),
                                                              )
                                                            : Container(),
                                                      ],
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    postListData[index]['type'] == 4
                                        ? Container(
                                            margin: const EdgeInsets.symmetric(
                                                vertical: 12.0),
                                            padding: const EdgeInsets.symmetric(
                                                horizontal: 20.0),
                                            child: Column(
                                              children: [
                                                Row(
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment.start,
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceBetween,
                                                  children: [
                                                    Column(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Container(
                                                          width: (MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width *
                                                                  0.8) -
                                                              80.0,
                                                          margin:
                                                              const EdgeInsets
                                                                  .only(
                                                                  bottom: 8.0),
                                                          child:
                                                              CustomTextBuilder(
                                                            text:
                                                                '${postListData[index]['title']}',
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textWhite1(),
                                                            fontSize: 19.0.sp,
                                                            fontWeight:
                                                                FontWeight.w600,
                                                            maxLines: 2,
                                                            textOverflow:
                                                                TextOverflow
                                                                    .ellipsis,
                                                          ),
                                                        ),
                                                        SizedBox(
                                                          width: (MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width *
                                                                  0.8) -
                                                              80.0,
                                                          child:
                                                              CustomTextBuilder(
                                                            text:
                                                                '${postListData[index]['description']}',
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textBlack1(),
                                                            fontSize: 16.0.sp,
                                                            fontWeight:
                                                                FontWeight.w400,
                                                            maxLines: 1,
                                                            textOverflow:
                                                                TextOverflow
                                                                    .ellipsis,
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                    InkWell(
                                                      onTap: () {
                                                        UrlLauncherBuilder()
                                                            .launchURL(
                                                                postListData[
                                                                        index]
                                                                    ['link']);
                                                      },
                                                      child: Container(
                                                        width: (MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width *
                                                                0.35) -
                                                            23.0,
                                                        height: 80.0,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: ColorsConfig()
                                                              .textBlack2(),
                                                          border: Border.all(
                                                            width: 0.5,
                                                            color:
                                                                ColorsConfig()
                                                                    .primary(),
                                                          ),
                                                          image:
                                                              DecorationImage(
                                                            image: NetworkImage(
                                                              postListData[
                                                                      index][
                                                                  'news_image'],
                                                            ),
                                                            fit: BoxFit.cover,
                                                            filterQuality:
                                                                FilterQuality
                                                                    .high,
                                                          ),
                                                        ),
                                                        child: Stack(
                                                          children: [
                                                            Positioned(
                                                              right: 3.0,
                                                              bottom: 3.0,
                                                              child: Container(
                                                                width: 18.0,
                                                                height: 18.0,
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: ColorsConfig()
                                                                      .linkIconBackground(),
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              9.0),
                                                                ),
                                                                child: Center(
                                                                  child:
                                                                      SvgAssets(
                                                                    image:
                                                                        'assets/icon/link.svg',
                                                                    color: ColorsConfig()
                                                                        .primary(),
                                                                    width: 12.0,
                                                                    height:
                                                                        12.0,
                                                                  ),
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          )
                                        : postListData[index]['type'] == 1 ||
                                                postListData[index]['type'] ==
                                                    2 ||
                                                postListData[index]['type'] == 3
                                            ? Column(
                                                mainAxisSize: MainAxisSize.min,
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                mainAxisAlignment:
                                                    MainAxisAlignment.start,
                                                children: [
                                                  postListData[index][
                                                                  'category'] !=
                                                              null &&
                                                          postListData[index][
                                                                  'category'] ==
                                                              'i'
                                                      ? Container(
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                          margin:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 12.0),
                                                          child: postListData[index]
                                                                          [
                                                                          'image']
                                                                      .length >
                                                                  1
                                                              ? ConstrainedBox(
                                                                  constraints:
                                                                      BoxConstraints(
                                                                    maxHeight: MediaQuery.of(context)
                                                                            .size
                                                                            .width *
                                                                        1.33,
                                                                  ),
                                                                  child: PageView
                                                                      .builder(
                                                                    controller:
                                                                        _pageController,
                                                                    itemCount: postListData[index]
                                                                            [
                                                                            'image']
                                                                        .length,
                                                                    onPageChanged:
                                                                        (int
                                                                            page) {
                                                                      setState(
                                                                          () {
                                                                        currentPage[index] =
                                                                            page;
                                                                      });
                                                                    },
                                                                    itemBuilder:
                                                                        (context,
                                                                            imageIndex) {
                                                                      return Image(
                                                                          image:
                                                                              NetworkImage(
                                                                            postListData[index]['image'][imageIndex],
                                                                          ),
                                                                          fit: BoxFit
                                                                              .fitWidth,
                                                                          filterQuality: FilterQuality
                                                                              .high,
                                                                          alignment:
                                                                              Alignment.center);
                                                                    },
                                                                  ),
                                                                )
                                                              : SizedBox(
                                                                  height: MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                                  child: Image(
                                                                      image:
                                                                          NetworkImage(
                                                                        postListData[index]
                                                                            [
                                                                            'image'][0],
                                                                      ),
                                                                      fit: BoxFit
                                                                          .cover,
                                                                      filterQuality:
                                                                          FilterQuality
                                                                              .high,
                                                                      alignment:
                                                                          Alignment
                                                                              .center),
                                                                ),
                                                        )
                                                      : Container(),
                                                  postListData[index][
                                                                  'category'] !=
                                                              null &&
                                                          postListData[index][
                                                                  'category'] ==
                                                              'i' &&
                                                          postListData[index]
                                                                      ['image']
                                                                  .length >
                                                              1
                                                      ? Container(
                                                          margin:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 12.0),
                                                          child: Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .center,
                                                            children: List.generate(
                                                                postListData[
                                                                            index]
                                                                        [
                                                                        'image']
                                                                    .length,
                                                                (dots) {
                                                              return Container(
                                                                width: 8.0,
                                                                height: 8.0,
                                                                margin: dots ==
                                                                        postListData[index]['image']
                                                                            .last
                                                                    ? EdgeInsets
                                                                        .zero
                                                                    : const EdgeInsets
                                                                        .only(
                                                                        right:
                                                                            10.0),
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: currentPage[
                                                                              index] ==
                                                                          dots
                                                                      ? ColorsConfig()
                                                                          .primary()
                                                                      : ColorsConfig
                                                                          .defaultToast,
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              4.0),
                                                                ),
                                                              );
                                                            }),
                                                          ),
                                                        )
                                                      : Container(),
                                                  postListData[index][
                                                                  'category'] !=
                                                              null &&
                                                          postListData[index][
                                                                  'category'] ==
                                                              'g'
                                                      ? Container(
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                          margin:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 12.0),
                                                          child: Image(
                                                            image: NetworkImage(
                                                              postListData[
                                                                      index]
                                                                  ['sub_link'],
                                                            ),
                                                            fit: BoxFit.cover,
                                                            filterQuality:
                                                                FilterQuality
                                                                    .high,
                                                          ),
                                                        )
                                                      : Container(),
                                                  postListData[index][
                                                                  'category'] !=
                                                              null &&
                                                          postListData[index][
                                                                  'category'] ==
                                                              'y'
                                                      ? Container(
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                          margin:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 12.0),
                                                          child:
                                                              YoutubePlayerIFrame(
                                                            aspectRatio: 16 / 9,
                                                            controller:
                                                                YoutubePlayerController(
                                                              initialVideoId: postListData[index][
                                                                          'sub_link']
                                                                      .startsWith(
                                                                          'https://youtu.be/')
                                                                  ? postListData[index]
                                                                              [
                                                                              'sub_link']
                                                                          .toString()
                                                                          .split(
                                                                              'https://youtu.be/')[
                                                                      1]
                                                                  : postListData[index]
                                                                              [
                                                                              'sub_link']
                                                                          .startsWith(
                                                                              'https://youtube.com/shorts/')
                                                                      ? postListData[index]
                                                                              ['sub_link']
                                                                          .toString()
                                                                          .split('shorts/')[1]
                                                                          .split('?')[0]
                                                                      : postListData[index]['sub_link'].toString().split('watch?v=')[1],
                                                              params:
                                                                  const YoutubePlayerParams(
                                                                autoPlay: false,
                                                                showControls:
                                                                    true,
                                                                showFullscreenButton:
                                                                    true,
                                                                mute: true,
                                                              ),
                                                            ),
                                                          ),
                                                        )
                                                      : Container(),
                                                  Container(
                                                    width:
                                                        MediaQuery.of(context)
                                                            .size
                                                            .width,
                                                    margin: const EdgeInsets
                                                        .symmetric(
                                                        vertical: 12.0),
                                                    padding: const EdgeInsets
                                                        .symmetric(
                                                        horizontal: 20.0),
                                                    child: CustomTextBuilder(
                                                      text:
                                                          '${postListData[index]['title']}',
                                                      fontColor: ColorsConfig()
                                                          .textWhite1(),
                                                      fontSize: 20.0.sp,
                                                      fontWeight:
                                                          FontWeight.w700,
                                                      maxLines: 2,
                                                      textOverflow:
                                                          TextOverflow.ellipsis,
                                                    ),
                                                  ),
                                                  Container(
                                                    width:
                                                        MediaQuery.of(context)
                                                            .size
                                                            .width,
                                                    padding: const EdgeInsets
                                                        .symmetric(
                                                        horizontal: 20.0),
                                                    child: CustomTextBuilder(
                                                      text: postListData[index]
                                                          ['description'],
                                                      fontColor: ColorsConfig()
                                                          .textBlack1(),
                                                      fontSize: 18.0.sp,
                                                      fontWeight:
                                                          FontWeight.w400,
                                                      maxLines: 5,
                                                      textOverflow:
                                                          TextOverflow.ellipsis,
                                                    ),
                                                  ),
                                                ],
                                              )
                                            : postListData[index]['type'] == 5
                                                ? Padding(
                                                    padding: const EdgeInsets
                                                        .symmetric(
                                                        horizontal: 20.0),
                                                    child: Column(
                                                      crossAxisAlignment:
                                                          CrossAxisAlignment
                                                              .start,
                                                      children: [
                                                        Container(
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                          margin:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 12.0,
                                                                  bottom: 4.0),
                                                          child:
                                                              CustomTextBuilder(
                                                            text: postListData[
                                                                index]['title'],
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textWhite1(),
                                                            fontSize: 19.0.sp,
                                                            fontWeight:
                                                                FontWeight.w700,
                                                            maxLines: 2,
                                                            textOverflow:
                                                                TextOverflow
                                                                    .ellipsis,
                                                          ),
                                                        ),
                                                        Column(
                                                          children: List.generate(
                                                              postListData[
                                                                          index]
                                                                      ['vote']
                                                                  .length,
                                                              (votes) {
                                                            return InkWell(
                                                              onTap: () async {
                                                                final _prefs =
                                                                    await SharedPreferences
                                                                        .getInstance();

                                                                if (DateTime.parse(postListData[index]
                                                                            [
                                                                            'vote_end_date'])
                                                                        .millisecondsSinceEpoch >
                                                                    DateTime.now()
                                                                        .millisecondsSinceEpoch) {
                                                                  if (postListData[
                                                                              index]
                                                                          [
                                                                          'selected_vote_index'] ==
                                                                      null) {
                                                                    SelectVoteAPI()
                                                                        .addVote(
                                                                            accesToken: _prefs.getString(
                                                                                'AccessToken')!,
                                                                            postIndex: postListData[index][
                                                                                'post_index'],
                                                                            voteIndex: postListData[index]['vote'][votes][
                                                                                'vote_index'])
                                                                        .then(
                                                                            (_v) {
                                                                      setState(
                                                                          () {
                                                                        postListData[index]
                                                                            [
                                                                            'selected_vote_index'] = postListData[index]['vote']
                                                                                [votes]
                                                                            [
                                                                            'vote_index'];
                                                                        postListData[index]['vote'][votes]
                                                                            [
                                                                            'cnt'] = postListData[index]['vote'][votes]
                                                                                ['cnt'] +
                                                                            1;
                                                                        postListData[index]
                                                                            [
                                                                            'vote_count'] = postListData[index]
                                                                                ['vote_count'] +
                                                                            1;
                                                                      });
                                                                    });
                                                                  } else if (postListData[index]
                                                                              [
                                                                              'selected_vote_index'] !=
                                                                          null &&
                                                                      postListData[index]
                                                                              [
                                                                              'selected_vote_index'] ==
                                                                          postListData[index]['vote'][votes]
                                                                              [
                                                                              'vote_index']) {
                                                                    SelectedVoteCancleAPI()
                                                                        .cancel(
                                                                            accesToken: _prefs.getString(
                                                                                'AccessToken')!,
                                                                            postIndex: postListData[index][
                                                                                'post_index'],
                                                                            voteIndex: postListData[index]['vote'][votes][
                                                                                'vote_index'])
                                                                        .then(
                                                                            (_v) {
                                                                      setState(
                                                                          () {
                                                                        postListData[index]['selected_vote_index'] =
                                                                            null;
                                                                        postListData[index]['vote'][votes]
                                                                            [
                                                                            'cnt'] = postListData[index]['vote'][votes]
                                                                                ['cnt'] -
                                                                            1;
                                                                        postListData[index]
                                                                            [
                                                                            'vote_count'] = postListData[index]
                                                                                ['vote_count'] -
                                                                            1;
                                                                      });
                                                                    });
                                                                  }
                                                                }
                                                              },
                                                              child: Container(
                                                                width: MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width,
                                                                height: 36.0,
                                                                margin: const EdgeInsets
                                                                    .symmetric(
                                                                    vertical:
                                                                        4.0),
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: ColorsConfig
                                                                      .transparent,
                                                                  border: Border
                                                                      .all(
                                                                    width: 0.5,
                                                                    color: postListData[index]['selected_vote_index'] ==
                                                                                null ||
                                                                            postListData[index]['selected_vote_index'] !=
                                                                                postListData[index]['vote'][votes][
                                                                                    'vote_index']
                                                                        ? ColorsConfig()
                                                                            .border1()
                                                                        : ColorsConfig()
                                                                            .voteBorder(),
                                                                  ),
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              4.0),
                                                                ),
                                                                child: Stack(
                                                                  children: [
                                                                    postListData[index]['vote_count'] >
                                                                            0
                                                                        ? LinearPercentIndicator(
                                                                            percent:
                                                                                postListData[index]['vote'][votes]['cnt'] / postListData[index]['vote_count'],
                                                                            lineHeight:
                                                                                100,
                                                                            padding:
                                                                                EdgeInsets.zero,
                                                                            barRadius:
                                                                                const Radius.circular(4.0),
                                                                            animation:
                                                                                true,
                                                                            backgroundColor:
                                                                                ColorsConfig.transparent,
                                                                            progressColor: postListData[index]['selected_vote_index'] == null || postListData[index]['selected_vote_index'] != postListData[index]['vote'][votes]['vote_index']
                                                                                ? ColorsConfig().graphColor2()
                                                                                : ColorsConfig().graphColor1(),
                                                                          )
                                                                        : Container(),
                                                                    Padding(
                                                                      padding: const EdgeInsets
                                                                          .all(
                                                                          8.0),
                                                                      child:
                                                                          Row(
                                                                        mainAxisAlignment:
                                                                            MainAxisAlignment.spaceBetween,
                                                                        children: [
                                                                          CustomTextBuilder(
                                                                            text:
                                                                                postListData[index]['vote'][votes]['vote_title'],
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                16.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w400,
                                                                          ),
                                                                          CustomTextBuilder(
                                                                            text: postListData[index]['selected_vote_index'] != null || DateTime.parse(postListData[index]['date']).millisecondsSinceEpoch < DateTime.now().millisecondsSinceEpoch
                                                                                ? postListData[index]['vote_count'] > 0
                                                                                    ? '${(postListData[index]['vote'][votes]['cnt'] / postListData[index]['vote_count'] * 100).toStringAsFixed(0)}%'
                                                                                    : '0%'
                                                                                : '',
                                                                            fontColor:
                                                                                ColorsConfig().textBlack1(),
                                                                            fontSize:
                                                                                16.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w400,
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            );
                                                          }),
                                                        ),
                                                        Container(
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                          margin:
                                                              const EdgeInsets
                                                                  .only(
                                                                  top: 5.0,
                                                                  bottom: 11.0),
                                                          child: Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceBetween,
                                                            children: [
                                                              CustomTextBuilder(
                                                                text:
                                                                    '총 ${postListData[index]['vote_count']}명 투표',
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textBlack1(),
                                                                fontSize:
                                                                    12.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w400,
                                                              ),
                                                              CustomTextBuilder(
                                                                text: DateCalculatorWrapper().expiredDate(postListData[index]['vote_end_date']) >=
                                                                            0 &&
                                                                        DateCalculatorWrapper().expiredHoursForDate(postListData[index]['vote_end_date']) >
                                                                            0
                                                                    ? '${DateCalculatorWrapper().expiredDate(postListData[index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(postListData[index]['vote_end_date'])}시간 남음'
                                                                    : DateCalculatorWrapper().expiredDate(postListData[index]['vote_end_date']) >= 0 &&
                                                                            DateCalculatorWrapper().expiredHoursForDate(postListData[index]['vote_end_date']) <=
                                                                                0 &&
                                                                            DateCalculatorWrapper().expiredMinutesForDate(postListData[index]['vote_end_date']) >
                                                                                0
                                                                        ? '${DateCalculatorWrapper().expiredDate(postListData[index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(postListData[index]['vote_end_date'])}시간 ${DateCalculatorWrapper().expiredMinutesForDate(postListData[index]['vote_end_date'])}분 남음'
                                                                        : '투표가 마감되었습니다.',
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textBlack1(),
                                                                fontSize:
                                                                    12.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w400,
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  )
                                                : Container(),
                                  ],
                                ),
                              ),
                            ),
                            // 좋아요, 댓글, 선물, 공유, 더보기 버튼
                            Container(
                              padding:
                                  const EdgeInsets.fromLTRB(0.0, 0.0, 0.0, 0.0),
                              margin: const EdgeInsets.only(bottom: 8.0),
                              color: ColorsConfig().subBackground1(),
                              child: Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceBetween,
                                children: [
                                  // 좋아요
                                  SizedBox(
                                    width:
                                        MediaQuery.of(context).size.width / 4,
                                    child: MaterialButton(
                                      onPressed: () async {
                                        final _prefs = await SharedPreferences
                                            .getInstance();

                                        if (!postListData[index]['isLike']) {
                                          AddLikeSenderAPI()
                                              .add(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!,
                                                  postIndex: postListData[index]
                                                      ['post_index'])
                                              .then((res) {
                                            if (res.result['status'] == 10800) {
                                              setState(() {
                                                postListData[index]['like']++;
                                                postListData[index]['isLike'] =
                                                    true;
                                              });
                                            }
                                          });
                                        } else {
                                          CancelLikeSenderAPI()
                                              .cancel(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!,
                                                  postIndex: postListData[index]
                                                      ['post_index'])
                                              .then((res) {
                                            if (res.result['status'] == 10805) {
                                              setState(() {
                                                postListData[index]['like']--;
                                                postListData[index]['isLike'] =
                                                    false;
                                              });
                                            }
                                          });
                                        }
                                      },
                                      child: Row(
                                        mainAxisAlignment:
                                            MainAxisAlignment.center,
                                        children: [
                                          SvgAssets(
                                            image: 'assets/icon/like.svg',
                                            color: postListData[index]['isLike']
                                                ? ColorsConfig().primary()
                                                : ColorsConfig().textBlack1(),
                                            width: 18.0,
                                            height: 18.0,
                                          ),
                                          const SizedBox(width: 10.0),
                                          CustomTextBuilder(
                                            text: numberFormat.format(
                                                postListData[index]['like'] +
                                                    addLikeCount),
                                            fontColor:
                                                ColorsConfig().textBlack1(),
                                            fontSize: 13.0.sp,
                                            fontWeight: FontWeight.w600,
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                  // 댓글
                                  SizedBox(
                                    width:
                                        MediaQuery.of(context).size.width / 4,
                                    child: MaterialButton(
                                      onPressed: () {
                                        if (postListData[index]['type'] == 4) {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (context) =>
                                                  NewsDetailScreen(
                                                postIndex: postListData[index]
                                                    ['post_index'],
                                                postType: postListData[index]
                                                    ['type'],
                                              ),
                                            ),
                                          ).then((returns) async {
                                            if (returns != null) {
                                              if (returns['ret']) {
                                                setState(() {
                                                  postListData.remove(
                                                      postListData[index]);
                                                  currentPage.removeAt(index);
                                                });
                                              }
                                            } else {
                                              final _prefs =
                                                  await SharedPreferences
                                                      .getInstance();

                                              PostDetailDataAPI()
                                                  .detail(
                                                      accesToken:
                                                          _prefs.getString(
                                                              'AccessToken')!,
                                                      postIndex:
                                                          postListData[index]
                                                              ['post_index'])
                                                  .then((value) {
                                                setState(() {
                                                  postListData[index] =
                                                      value.result;
                                                });
                                              });
                                            }
                                          });
                                        } else if (postListData[index]
                                                ['type'] ==
                                            5) {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (context) =>
                                                  VoteDetailScreen(
                                                postIndex: postListData[index]
                                                    ['post_index'],
                                                postType: postListData[index]
                                                    ['type'],
                                              ),
                                            ),
                                          ).then((returns) async {
                                            if (returns != null) {
                                              if (returns['ret']) {
                                                setState(() {
                                                  postListData.remove(
                                                      postListData[index]);
                                                  currentPage.removeAt(index);
                                                });
                                              }
                                            } else {
                                              final _prefs =
                                                  await SharedPreferences
                                                      .getInstance();

                                              PostDetailDataAPI()
                                                  .detail(
                                                      accesToken:
                                                          _prefs.getString(
                                                              'AccessToken')!,
                                                      postIndex:
                                                          postListData[index]
                                                              ['post_index'])
                                                  .then((value) {
                                                setState(() {
                                                  postListData[index] =
                                                      value.result;
                                                });
                                              });
                                            }
                                          });
                                        } else {
                                          Navigator.push(
                                            context,
                                            MaterialPageRoute(
                                              builder: (context) =>
                                                  PostingDetailScreen(
                                                postIndex: postListData[index]
                                                    ['post_index'],
                                                postType: postListData[index]
                                                    ['type'],
                                              ),
                                            ),
                                          ).then((returns) async {
                                            if (returns != null) {
                                              if (returns['ret']) {
                                                setState(() {
                                                  postListData.remove(
                                                      postListData[index]);
                                                  currentPage.removeAt(index);
                                                });
                                              }
                                            } else {
                                              final _prefs =
                                                  await SharedPreferences
                                                      .getInstance();

                                              PostDetailDataAPI()
                                                  .detail(
                                                      accesToken:
                                                          _prefs.getString(
                                                              'AccessToken')!,
                                                      postIndex:
                                                          postListData[index]
                                                              ['post_index'])
                                                  .then((value) {
                                                setState(() {
                                                  postListData[index] =
                                                      value.result;
                                                });
                                              });
                                            }
                                          });
                                        }
                                      },
                                      child: Row(
                                        mainAxisAlignment:
                                            MainAxisAlignment.center,
                                        children: [
                                          SvgAssets(
                                            image: 'assets/icon/reply.svg',
                                            color: ColorsConfig().textBlack1(),
                                            width: 18.0,
                                            height: 18.0,
                                          ),
                                          const SizedBox(width: 10.0),
                                          CustomTextBuilder(
                                            text: numberFormat.format(
                                                postListData[index]['reply']),
                                            fontColor:
                                                ColorsConfig().textBlack1(),
                                            fontSize: 13.0.sp,
                                            fontWeight: FontWeight.w600,
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                  // 선물
                                  SizedBox(
                                    width:
                                        MediaQuery.of(context).size.width / 4,
                                    child: MaterialButton(
                                      onPressed: () async {
                                        if (postListData[index]['isMe']) {
                                          ToastBuilder().toast(
                                            Container(
                                              width: MediaQuery.of(context)
                                                  .size
                                                  .width,
                                              padding:
                                                  const EdgeInsets.all(14.0),
                                              margin:
                                                  const EdgeInsets.symmetric(
                                                      horizontal: 30.0),
                                              decoration: BoxDecoration(
                                                color: ColorsConfig.defaultToast
                                                    .withOpacity(0.9),
                                                borderRadius:
                                                    BorderRadius.circular(6.0),
                                              ),
                                              child: CustomTextBuilder(
                                                text: TextConstant
                                                    .giftSendErrorText1,
                                                fontColor:
                                                    ColorsConfig.defaultWhite,
                                                fontSize: 14.0.sp,
                                              ),
                                            ),
                                          );
                                        } else {
                                          final _prefs = await SharedPreferences
                                              .getInstance();

                                          GetGiftListDataAPI()
                                              .gift(
                                                  accesToken: _prefs.getString(
                                                      'AccessToken')!)
                                              .then((gifts) {
                                            bool _hasClick = false;

                                            showModalBottomSheet(
                                                context: context,
                                                backgroundColor: ColorsConfig()
                                                    .subBackground1(),
                                                isScrollControlled: true,
                                                shape:
                                                    const RoundedRectangleBorder(
                                                  borderRadius:
                                                      BorderRadius.only(
                                                    topLeft:
                                                        Radius.circular(12.0),
                                                    topRight:
                                                        Radius.circular(12.0),
                                                  ),
                                                ),
                                                builder:
                                                    (BuildContext context) {
                                                  int _giftTabIndex = 0;

                                                  List<dynamic> _trophy = [];
                                                  List<dynamic> _reaction = [];
                                                  List<dynamic> _neckTrophy =
                                                      [];

                                                  Map<String, dynamic>
                                                      _selectedGift = {};

                                                  var _giftTabController =
                                                      TabController(
                                                    length: 4,
                                                    vsync: this,
                                                  );
                                                  _giftTabController
                                                      .addListener(() {
                                                    if (_giftTabController
                                                            .indexIsChanging ||
                                                        _giftTabController
                                                                .index !=
                                                            _giftTabIndex) {
                                                      setState(() {
                                                        _giftTabIndex =
                                                            _giftTabController
                                                                .index;
                                                      });
                                                    }
                                                  });

                                                  for (int i = 0;
                                                      i < gifts.result.length;
                                                      i++) {
                                                    if (gifts.result[i]
                                                            ['item_type'] ==
                                                        0) {
                                                      _trophy
                                                          .add(gifts.result[i]);
                                                    } else if (gifts.result[i]
                                                            ['item_type'] ==
                                                        1) {
                                                      _reaction
                                                          .add(gifts.result[i]);
                                                    } else if (gifts.result[i]
                                                            ['item_type'] ==
                                                        2) {
                                                      _neckTrophy
                                                          .add(gifts.result[i]);
                                                    }
                                                  }

                                                  return StatefulBuilder(
                                                    builder: (context, state) {
                                                      return Container(
                                                        height: _hasClick
                                                            ? MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .height /
                                                                1.72
                                                            : MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .height /
                                                                2,
                                                        decoration:
                                                            const BoxDecoration(
                                                          borderRadius:
                                                              BorderRadius.only(
                                                            topLeft:
                                                                Radius.circular(
                                                                    12.0),
                                                            topRight:
                                                                Radius.circular(
                                                                    12.0),
                                                          ),
                                                        ),
                                                        child: Column(
                                                          children: [
                                                            Container(
                                                              width: 50.0,
                                                              height: 4.0,
                                                              margin:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      vertical:
                                                                          8.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .textBlack2(),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            100.0),
                                                              ),
                                                            ),
                                                            // 선물하기 타이틀
                                                            Row(
                                                              mainAxisAlignment:
                                                                  MainAxisAlignment
                                                                      .spaceBetween,
                                                              children: [
                                                                Container(
                                                                  padding:
                                                                      const EdgeInsets
                                                                          .fromLTRB(
                                                                          20.0,
                                                                          15.0,
                                                                          20.0,
                                                                          10.0),
                                                                  alignment:
                                                                      Alignment
                                                                          .centerLeft,
                                                                  child:
                                                                      CustomTextBuilder(
                                                                    text: TextConstant
                                                                        .sendGiftText,
                                                                    fontColor:
                                                                        ColorsConfig()
                                                                            .textWhite1(),
                                                                    fontSize:
                                                                        22.0.sp,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w700,
                                                                  ),
                                                                ),
                                                                Container(
                                                                  margin: const EdgeInsets
                                                                      .only(
                                                                      right:
                                                                          15.0),
                                                                  child:
                                                                      const HoldingBalanceWidget(),
                                                                ),
                                                              ],
                                                            ),
                                                            // 탭바
                                                            Container(
                                                              width:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                              decoration:
                                                                  BoxDecoration(
                                                                border: Border(
                                                                  bottom:
                                                                      BorderSide(
                                                                    width: 0.5,
                                                                    color: ColorsConfig()
                                                                        .border1(),
                                                                  ),
                                                                ),
                                                              ),
                                                              child: TabBar(
                                                                controller:
                                                                    _giftTabController,
                                                                isScrollable:
                                                                    true,
                                                                padding: const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        20.0),
                                                                indicatorColor:
                                                                    ColorsConfig()
                                                                        .primary(),
                                                                unselectedLabelColor:
                                                                    ColorsConfig()
                                                                        .textWhite1(),
                                                                unselectedLabelStyle:
                                                                    TextStyle(
                                                                  fontSize:
                                                                      16.0.sp,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w400,
                                                                ),
                                                                labelColor:
                                                                    ColorsConfig()
                                                                        .primary(),
                                                                labelStyle:
                                                                    TextStyle(
                                                                  fontSize:
                                                                      16.0.sp,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w700,
                                                                ),
                                                                onTap: (_) {
                                                                  state(() {
                                                                    _hasClick =
                                                                        false;
                                                                    _selectedGift =
                                                                        {};
                                                                  });
                                                                },
                                                                tabs: [
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .allText,
                                                                    ),
                                                                  ),
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .trophyText,
                                                                    ),
                                                                  ),
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .reactionText,
                                                                    ),
                                                                  ),
                                                                  Tab(
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text:
                                                                          '메달',
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            Expanded(
                                                              child: Padding(
                                                                padding: !_hasClick
                                                                    ? const EdgeInsets
                                                                        .fromLTRB(
                                                                        25.0,
                                                                        25.0,
                                                                        15.0,
                                                                        20.0)
                                                                    : const EdgeInsets
                                                                        .fromLTRB(
                                                                        25.0,
                                                                        25.0,
                                                                        15.0,
                                                                        0.0),
                                                                child:
                                                                    TabBarView(
                                                                  controller:
                                                                      _giftTabController,
                                                                  physics:
                                                                      const NeverScrollableScrollPhysics(),
                                                                  children: [
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              gifts.result.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": gifts.result[index]['item_index'],
                                                                                      "item_type": gifts.result[index]['item_type'],
                                                                                      "item_type_name": gifts.result[index]['item_type_name'],
                                                                                      "url": gifts.result[index]['url'],
                                                                                      "description": gifts.result[index]['description'],
                                                                                      "price": gifts.result[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 0 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: Column(
                                                                                  children: [
                                                                                    Image(
                                                                                      image: NetworkImage(
                                                                                        gifts.result[index]['url'],
                                                                                      ),
                                                                                      filterQuality: FilterQuality.high,
                                                                                      width: 65.0.w,
                                                                                      height: 65.0.h,
                                                                                    ),
                                                                                    Container(
                                                                                      margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                      child: CustomTextBuilder(
                                                                                        text: '${gifts.result[index]['price']}',
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w400,
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              _trophy.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": _trophy[index]['item_index'],
                                                                                      "item_type": _trophy[index]['item_type'],
                                                                                      "item_type_name": _trophy[index]['item_type_name'],
                                                                                      "url": _trophy[index]['url'],
                                                                                      "description": _trophy[index]['description'],
                                                                                      "price": _trophy[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 1 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: _trophy[index]['item_type'] == 0
                                                                                    ? Column(
                                                                                        children: [
                                                                                          Image(
                                                                                            image: NetworkImage(
                                                                                              _trophy[index]['url'],
                                                                                            ),
                                                                                            filterQuality: FilterQuality.high,
                                                                                            width: 65.0.w,
                                                                                            height: 65.0.h,
                                                                                          ),
                                                                                          Container(
                                                                                            margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                            child: CustomTextBuilder(
                                                                                              text: '${_trophy[index]['price']}',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      )
                                                                                    : null,
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              _reaction.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": _reaction[index]['item_index'],
                                                                                      "item_type": _reaction[index]['item_type'],
                                                                                      "item_type_name": _reaction[index]['item_type_name'],
                                                                                      "url": _reaction[index]['url'],
                                                                                      "description": _reaction[index]['description'],
                                                                                      "price": _reaction[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 2 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: _reaction[index]['item_type'] == 1
                                                                                    ? Column(
                                                                                        children: [
                                                                                          Image(
                                                                                            image: NetworkImage(
                                                                                              _reaction[index]['url'],
                                                                                            ),
                                                                                            filterQuality: FilterQuality.high,
                                                                                            width: 65.0.w,
                                                                                            height: 65.0.h,
                                                                                          ),
                                                                                          Container(
                                                                                            margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                            child: CustomTextBuilder(
                                                                                              text: '${_reaction[index]['price']}',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      )
                                                                                    : null,
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    ListView(
                                                                      children: [
                                                                        Wrap(
                                                                          children: List.generate(
                                                                              _neckTrophy.length,
                                                                              (index) {
                                                                            return InkWell(
                                                                              splashColor: ColorsConfig.transparent,
                                                                              highlightColor: ColorsConfig.transparent,
                                                                              onTap: () {
                                                                                state(() {
                                                                                  if (_hasClick && _selectedGift['index'] == index) {
                                                                                    _hasClick = false;
                                                                                    _selectedGift = {};
                                                                                  } else {
                                                                                    _hasClick = true;
                                                                                    _selectedGift = {
                                                                                      "index": index,
                                                                                      "item_index": _neckTrophy[index]['item_index'],
                                                                                      "item_type": _neckTrophy[index]['item_type'],
                                                                                      "item_type_name": _neckTrophy[index]['item_type_name'],
                                                                                      "url": _neckTrophy[index]['url'],
                                                                                      "description": _neckTrophy[index]['description'],
                                                                                      "price": _neckTrophy[index]['price'],
                                                                                    };
                                                                                  }
                                                                                });
                                                                              },
                                                                              child: Container(
                                                                                margin: EdgeInsets.only(right: 10.0.w),
                                                                                decoration: BoxDecoration(
                                                                                  color: _selectedGift['index'] == index && _giftTabIndex == 3 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                  borderRadius: BorderRadius.circular(14.0),
                                                                                ),
                                                                                child: _neckTrophy[index]['item_type'] == 2
                                                                                    ? Column(
                                                                                        children: [
                                                                                          Image(
                                                                                            image: NetworkImage(
                                                                                              _neckTrophy[index]['url'],
                                                                                            ),
                                                                                            filterQuality: FilterQuality.high,
                                                                                            width: 65.0.w,
                                                                                            height: 65.0.h,
                                                                                          ),
                                                                                          Container(
                                                                                            margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                            child: CustomTextBuilder(
                                                                                              text: '${_neckTrophy[index]['price']}',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      )
                                                                                    : null,
                                                                              ),
                                                                            );
                                                                          }),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ),
                                                            _hasClick == true
                                                                ? Container(
                                                                    height:
                                                                        157.0,
                                                                    padding: const EdgeInsets
                                                                        .fromLTRB(
                                                                        20.0,
                                                                        10.0,
                                                                        20.0,
                                                                        30.0),
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: ColorsConfig()
                                                                          .subBackground1(),
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          color:
                                                                              ColorsConfig().textWhite1(opacity: 0.16),
                                                                          blurRadius:
                                                                              10.0,
                                                                          offset: const Offset(
                                                                              0.0,
                                                                              -2.0),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                    child:
                                                                        Column(
                                                                      children: [
                                                                        Row(
                                                                          children: [
                                                                            Image(
                                                                              image: NetworkImage(
                                                                                '${_selectedGift['url']}',
                                                                              ),
                                                                              filterQuality: FilterQuality.high,
                                                                              width: 65.0.w,
                                                                              height: 65.0.h,
                                                                            ),
                                                                            const SizedBox(width: 32.0),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                CustomTextBuilder(
                                                                                  text: '${_selectedGift['description']}',
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 16.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                                CustomTextBuilder(
                                                                                  text: numberFormat.format(_selectedGift['price']),
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 12.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                        const SizedBox(
                                                                            height:
                                                                                10.0),
                                                                        InkWell(
                                                                          onTap:
                                                                              () {
                                                                            if (_selectedGift['price'] ==
                                                                                0) {
                                                                              SendGiftDataAPI().gift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: postListData[index]['post_index']).then((value) {
                                                                                int? _existIndex;

                                                                                switch (value.result['status']) {
                                                                                  case 10200:
                                                                                    setState(() {
                                                                                      if (postListData[index]['gift'].length == 0) {
                                                                                        postListData[index]['gift'].add({
                                                                                          "image": _selectedGift['url'],
                                                                                          "gift_count": 1,
                                                                                        });
                                                                                      } else {
                                                                                        for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                          if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                            _existIndex = i;
                                                                                            break;
                                                                                          }
                                                                                        }

                                                                                        if (_existIndex != null) {
                                                                                          postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                        } else {
                                                                                          postListData[index]['gift'].insert(0, {
                                                                                            "image": _selectedGift['url'],
                                                                                            "gift_count": 1,
                                                                                          });
                                                                                        }
                                                                                      }
                                                                                    });
                                                                                    Navigator.pop(context);
                                                                                    break;
                                                                                  case 10201:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText1,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10202:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText2,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10203:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText3,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10204:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText4,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                }
                                                                              });
                                                                            } else {
                                                                              SendPricedGiftDataAPI().pricedGift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: postListData[index]['post_index']).then((value) {
                                                                                int? _existIndex;

                                                                                switch (value.result['status']) {
                                                                                  case 10201:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText1,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10202:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText2,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10203:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText3,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10210:
                                                                                    setState(() {
                                                                                      if (postListData[index]['gift'].length == 0) {
                                                                                        postListData[index]['gift'].add({
                                                                                          "image": _selectedGift['url'],
                                                                                          "gift_count": 1,
                                                                                        });
                                                                                      } else {
                                                                                        for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                          if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                            _existIndex = i;
                                                                                            break;
                                                                                          }
                                                                                        }

                                                                                        if (_existIndex != null) {
                                                                                          postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                        } else {
                                                                                          postListData[index]['gift'].insert(0, {
                                                                                            "image": _selectedGift['url'],
                                                                                            "gift_count": 1,
                                                                                          });
                                                                                        }
                                                                                      }
                                                                                    });
                                                                                    Navigator.pop(context);
                                                                                    break;
                                                                                  case 10211:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText5,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                  case 10212:
                                                                                    ToastBuilder().toast(
                                                                                      Container(
                                                                                        width: MediaQuery.of(context).size.width,
                                                                                        padding: const EdgeInsets.all(14.0),
                                                                                        margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                        decoration: BoxDecoration(
                                                                                          color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                          borderRadius: BorderRadius.circular(6.0),
                                                                                        ),
                                                                                        child: CustomTextBuilder(
                                                                                          text: TextConstant.giftSendErrorText6,
                                                                                          fontColor: ColorsConfig.defaultWhite,
                                                                                          fontSize: 14.0.sp,
                                                                                        ),
                                                                                      ),
                                                                                    );
                                                                                    break;
                                                                                }
                                                                              });
                                                                            }
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            height:
                                                                                42.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              // color: ColorsConfig().primary(),
                                                                              borderRadius: BorderRadius.circular(100.0),
                                                                              gradient: LinearGradient(
                                                                                colors: [
                                                                                  ColorsConfig().avatarButtonBackground1(),
                                                                                  ColorsConfig().avatarButtonBackground2(),
                                                                                ],
                                                                                begin: Alignment.centerLeft,
                                                                                end: Alignment.centerRight,
                                                                              ),
                                                                            ),
                                                                            child:
                                                                                Center(
                                                                              child: CustomTextBuilder(
                                                                                text: TextConstant.sendText,
                                                                                fontColor: ColorsConfig().background(),
                                                                                fontSize: 16.0.sp,
                                                                                fontWeight: FontWeight.w700,
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  )
                                                                : Container(),
                                                          ],
                                                        ),
                                                      );
                                                    },
                                                  );
                                                });
                                          });
                                        }
                                      },
                                      child: SvgAssets(
                                        image: 'assets/icon/gift.svg',
                                        color: ColorsConfig().textBlack1(),
                                        width: 18.0,
                                        height: 18.0,
                                      ),
                                    ),
                                  ),
                                  // 공유
                                  SizedBox(
                                    width:
                                        MediaQuery.of(context).size.width / 4,
                                    child: MaterialButton(
                                      materialTapTargetSize:
                                          MaterialTapTargetSize.padded,
                                      onPressed: () async {
                                        var shortLink = await DeepLinkBuilder()
                                            .getShortLink(
                                                'share',
                                                '${postListData[index]['post_index']}',
                                                postListData[index]['type']);

                                        Share.share(
                                          '${postListData[index]['title']}\n$shortLink',
                                          sharePositionOrigin: Rect.fromLTWH(
                                              0,
                                              0,
                                              MediaQuery.of(context).size.width,
                                              MediaQuery.of(context)
                                                      .size
                                                      .height /
                                                  2),
                                        );
                                      },
                                      child: SvgAssets(
                                        image: 'assets/icon/share.svg',
                                        color: ColorsConfig().textBlack1(),
                                        width: 18.0,
                                        height: 18.0,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        );
                      }

                      return Column(
                        children: [
                          InkWell(
                            onTap: () {
                              if (postListData[index]['type'] == 4) {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => NewsDetailScreen(
                                      postIndex: postListData[index]
                                          ['post_index'],
                                      postType: postListData[index]['type'],
                                    ),
                                  ),
                                ).then((returns) async {
                                  if (returns != null) {
                                    if (returns['ret']) {
                                      setState(() {
                                        postListData
                                            .remove(postListData[index]);
                                        currentPage.removeAt(index);
                                      });
                                    }
                                  } else {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    PostDetailDataAPI()
                                        .detail(
                                            accesToken: _prefs
                                                .getString('AccessToken')!,
                                            postIndex: postListData[index]
                                                ['post_index'])
                                        .then((value) {
                                      setState(() {
                                        postListData[index] = value.result;
                                      });
                                    });
                                  }
                                });
                              } else if (postListData[index]['type'] == 5) {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => VoteDetailScreen(
                                      postIndex: postListData[index]
                                          ['post_index'],
                                      postType: postListData[index]['type'],
                                    ),
                                  ),
                                ).then((returns) async {
                                  if (returns != null) {
                                    if (returns['ret']) {
                                      setState(() {
                                        postListData
                                            .remove(postListData[index]);
                                        currentPage.removeAt(index);
                                      });
                                    }
                                  } else {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    PostDetailDataAPI()
                                        .detail(
                                            accesToken: _prefs
                                                .getString('AccessToken')!,
                                            postIndex: postListData[index]
                                                ['post_index'])
                                        .then((value) {
                                      setState(() {
                                        postListData[index] = value.result;
                                      });
                                    });
                                  }
                                });
                              } else {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => PostingDetailScreen(
                                      postIndex: postListData[index]
                                          ['post_index'],
                                      postType: postListData[index]['type'],
                                    ),
                                  ),
                                ).then((returns) async {
                                  if (returns != null) {
                                    if (returns['ret']) {
                                      setState(() {
                                        postListData
                                            .remove(postListData[index]);
                                        currentPage.removeAt(index);
                                      });
                                    }
                                  } else {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    PostDetailDataAPI()
                                        .detail(
                                            accesToken: _prefs
                                                .getString('AccessToken')!,
                                            postIndex: postListData[index]
                                                ['post_index'])
                                        .then((value) {
                                      setState(() {
                                        postListData[index] = value.result;
                                      });
                                    });
                                  }
                                });
                              }
                            },
                            child: Container(
                              color: ColorsConfig().subBackground1(),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  // 유저 이미지, 닉네임, 날짜, 더보기 버튼
                                  Padding(
                                    padding: const EdgeInsets.fromLTRB(
                                        20.0, 13.4, 20.0, 0.0),
                                    child: Row(
                                      mainAxisAlignment:
                                          MainAxisAlignment.spaceBetween,
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: [
                                        InkWell(
                                          onTap: () {
                                            if (postListData[index]['isMe']) {
                                              Navigator.pushNamed(
                                                  context, '/my_profile',
                                                  arguments: {
                                                    'onNavigator': true,
                                                  });
                                            } else {
                                              Navigator.pushNamed(
                                                  context, '/your_profile',
                                                  arguments: {
                                                    'user_index':
                                                        postListData[index]
                                                            ['user_index'],
                                                    'user_nickname':
                                                        postListData[index]
                                                            ['nick'],
                                                  }).then((_) async {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                GetSubscribePostListAPI()
                                                    .subscribePostList(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!)
                                                    .then((value) {
                                                  setState(() {
                                                    currentPage2.clear();
                                                    getSubscribePostListData =
                                                        value.result;
                                                    for (int i = 0;
                                                        i <
                                                            value.result['list']
                                                                .length;
                                                        i++) {
                                                      currentPage2.add(0);
                                                    }
                                                  });
                                                });
                                              });
                                            }
                                          },
                                          child: Row(
                                            children: [
                                              // 이미지
                                              Container(
                                                width: 42.0,
                                                height: 42.0,
                                                decoration: BoxDecoration(
                                                  color: ColorsConfig()
                                                      .userIconBackground(),
                                                  borderRadius:
                                                      BorderRadius.circular(
                                                          21.0),
                                                  image: DecorationImage(
                                                    image: NetworkImage(
                                                      postListData[index]
                                                          ['avatar_url'],
                                                      scale: 5.5,
                                                    ),
                                                    filterQuality:
                                                        FilterQuality.high,
                                                    fit: BoxFit.none,
                                                    alignment: const Alignment(
                                                        0.0, -0.3),
                                                  ),
                                                ),
                                              ),
                                              Column(
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  SizedBox(
                                                    width:
                                                        MediaQuery.of(context)
                                                                .size
                                                                .width -
                                                            82.0,
                                                    child: Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Row(
                                                          children: [
                                                            // 닉네임
                                                            Container(
                                                              margin:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                          8.0),
                                                              child:
                                                                  CustomTextBuilder(
                                                                text:
                                                                    '${postListData[index]['nick']}',
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textWhite1(),
                                                                fontSize:
                                                                    16.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w700,
                                                              ),
                                                            ),
                                                            // 날짜
                                                            CustomTextBuilder(
                                                              text: DateCalculatorWrapper()
                                                                  .daysCalculator(
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'date']),
                                                              fontColor:
                                                                  ColorsConfig
                                                                      .defaultGray,
                                                              fontSize: 14.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w400,
                                                              height: 1.8,
                                                            ),
                                                          ],
                                                        ),
                                                        InkWell(
                                                          onTap: () async {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            if (!hasTypeSelected) {
                                                              GetPostListAPI()
                                                                  .list(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      category:
                                                                          postListData[index]
                                                                              [
                                                                              'type'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  hasTypeSelected =
                                                                      true;
                                                                  selectedPostType =
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'type'];
                                                                  currentPage
                                                                      .clear();
                                                                  postListData =
                                                                      value.result[
                                                                          'data'];
                                                                  for (int i =
                                                                          0;
                                                                      i <
                                                                          value
                                                                              .result['data']
                                                                              .length;
                                                                      i++) {
                                                                    currentPage
                                                                        .add(0);
                                                                  }
                                                                  widget
                                                                      .cardScrollController
                                                                      .jumpTo(
                                                                          0.0);
                                                                });
                                                              });
                                                            } else {
                                                              GetPostListAPI()
                                                                  .list(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!)
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  hasTypeSelected =
                                                                      false;
                                                                  selectedPostType =
                                                                      0;
                                                                  currentPage
                                                                      .clear();
                                                                  postListData =
                                                                      value.result[
                                                                          'data'];
                                                                  for (int i =
                                                                          0;
                                                                      i <
                                                                          value
                                                                              .result['data']
                                                                              .length;
                                                                      i++) {
                                                                    currentPage2
                                                                        .add(0);
                                                                  }
                                                                  widget
                                                                      .cardScrollController
                                                                      .jumpTo(
                                                                          0.0);
                                                                });
                                                              });
                                                            }
                                                          },
                                                          child: LabelCategoryWidgetBuilder(
                                                              data:
                                                                  postListData[
                                                                          index]
                                                                      ['type']),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  Row(
                                                    children: [
                                                      // 선물받은 뱃지영역
                                                      postListData[index]
                                                                  ['gift']
                                                              .isNotEmpty
                                                          ? InkWell(
                                                              onTap: () async {
                                                                final _prefs =
                                                                    await SharedPreferences
                                                                        .getInstance();

                                                                GetGiftHistoryListDataAPI()
                                                                    .giftHistory(
                                                                        accesToken:
                                                                            _prefs.getString(
                                                                                'AccessToken')!,
                                                                        postIndex:
                                                                            postListData[index][
                                                                                'post_index'])
                                                                    .then(
                                                                        (history) {
                                                                  showModalBottomSheet(
                                                                      context:
                                                                          context,
                                                                      backgroundColor:
                                                                          ColorsConfig()
                                                                              .subBackground1(),
                                                                      shape:
                                                                          const RoundedRectangleBorder(
                                                                        borderRadius:
                                                                            BorderRadius.only(
                                                                          topLeft:
                                                                              Radius.circular(12.0),
                                                                          topRight:
                                                                              Radius.circular(12.0),
                                                                        ),
                                                                      ),
                                                                      builder:
                                                                          (BuildContext
                                                                              context) {
                                                                        return SafeArea(
                                                                          child:
                                                                              Container(
                                                                            decoration:
                                                                                const BoxDecoration(
                                                                              borderRadius: BorderRadius.only(
                                                                                topLeft: Radius.circular(12.0),
                                                                                topRight: Radius.circular(12.0),
                                                                              ),
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Container(
                                                                                  width: 50.0,
                                                                                  height: 4.0,
                                                                                  margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig().textBlack2(),
                                                                                    borderRadius: BorderRadius.circular(100.0),
                                                                                  ),
                                                                                ),
                                                                                Center(
                                                                                  child: Container(
                                                                                    width: MediaQuery.of(context).size.width,
                                                                                    padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                    decoration: BoxDecoration(
                                                                                      border: Border(
                                                                                        bottom: BorderSide(
                                                                                          width: 0.5,
                                                                                          color: ColorsConfig().border1(),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                    child: CustomTextBuilder(
                                                                                      text: TextConstant.giftHistoryText,
                                                                                      fontColor: ColorsConfig().textWhite1(),
                                                                                      fontSize: 18.0.sp,
                                                                                      fontWeight: FontWeight.w600,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Expanded(
                                                                                  child: ListView.builder(
                                                                                      itemCount: history.result['users'].length,
                                                                                      itemBuilder: (context, historyIndex) {
                                                                                        return Container(
                                                                                          width: MediaQuery.of(context).size.width,
                                                                                          height: 65.0,
                                                                                          padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                          decoration: BoxDecoration(
                                                                                            border: Border(
                                                                                              bottom: BorderSide(
                                                                                                width: 0.5,
                                                                                                color: ColorsConfig().border1(),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                          child: Row(
                                                                                            children: [
                                                                                              Expanded(
                                                                                                child: InkWell(
                                                                                                  onTap: () {
                                                                                                    Navigator.pop(context);
                                                                                                    if (history.result['users'][historyIndex]['isMe']) {
                                                                                                      Navigator.pushNamed(context, '/my_profile', arguments: {
                                                                                                        'onNavigator': true,
                                                                                                      });
                                                                                                    } else {
                                                                                                      Navigator.pushNamed(context, '/your_profile', arguments: {
                                                                                                        'user_index': history.result['users'][historyIndex]['user_index'],
                                                                                                        'user_nickname': history.result['users'][historyIndex]['nick'],
                                                                                                      }).then((_) async {
                                                                                                        final _prefs = await SharedPreferences.getInstance();

                                                                                                        GetSubscribePostListAPI().subscribePostList(accesToken: _prefs.getString('AccessToken')!).then((value) {
                                                                                                          setState(() {
                                                                                                            currentPage2.clear();
                                                                                                            getSubscribePostListData = value.result;
                                                                                                            for (int i = 0; i < value.result['list'].length; i++) {
                                                                                                              currentPage2.add(0);
                                                                                                            }
                                                                                                          });
                                                                                                        });
                                                                                                      });
                                                                                                    }
                                                                                                  },
                                                                                                  child: Row(
                                                                                                    children: [
                                                                                                      // 아바타 이미지
                                                                                                      Container(
                                                                                                        width: 35.0,
                                                                                                        height: 35.0,
                                                                                                        decoration: BoxDecoration(
                                                                                                          color: ColorsConfig().userIconBackground(),
                                                                                                          borderRadius: BorderRadius.circular(17.5),
                                                                                                          image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                              ? DecorationImage(
                                                                                                                  image: NetworkImage(
                                                                                                                    history.result['users'][historyIndex]['avatar'],
                                                                                                                    scale: 7.0,
                                                                                                                  ),
                                                                                                                  filterQuality: FilterQuality.high,
                                                                                                                  fit: BoxFit.none,
                                                                                                                  alignment: const Alignment(0.0, -0.3),
                                                                                                                )
                                                                                                              : null,
                                                                                                        ),
                                                                                                      ),
                                                                                                      const SizedBox(width: 15.0),
                                                                                                      CustomTextBuilder(
                                                                                                        text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                                        fontSize: 16.0.sp,
                                                                                                        fontWeight: FontWeight.w400,
                                                                                                      ),
                                                                                                    ],
                                                                                                  ),
                                                                                                ),
                                                                                              ),
                                                                                              Expanded(
                                                                                                child: ListView.builder(
                                                                                                  scrollDirection: Axis.horizontal,
                                                                                                  itemCount: history.result['gifts'].length,
                                                                                                  itemBuilder: (context, giftHistory) {
                                                                                                    if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                      return Container();
                                                                                                    }
                                                                                                    return Row(
                                                                                                      children: [
                                                                                                        Image(
                                                                                                          image: NetworkImage(
                                                                                                            history.result['gifts'][giftHistory]['image'],
                                                                                                          ),
                                                                                                        ),
                                                                                                        const SizedBox(width: 4.0),
                                                                                                        CustomTextBuilder(
                                                                                                          text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                          fontColor: ColorsConfig().textBlack2(),
                                                                                                          fontSize: 12.0.sp,
                                                                                                          fontWeight: FontWeight.w700,
                                                                                                        ),
                                                                                                        const SizedBox(width: 4.0),
                                                                                                      ],
                                                                                                    );
                                                                                                  },
                                                                                                ),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        );
                                                                                      }),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      });
                                                                });
                                                              },
                                                              child: !getPostListMoreBtnState[
                                                                      index]
                                                                  ? Container(
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          left:
                                                                              4.0,
                                                                          top:
                                                                              5.0),
                                                                      child:
                                                                          SingleChildScrollView(
                                                                        physics:
                                                                            const NeverScrollableScrollPhysics(),
                                                                        scrollDirection:
                                                                            Axis.horizontal,
                                                                        child: postListData[index]['gift'].isNotEmpty
                                                                            ? Row(
                                                                                children: List.generate(postListData[index]['gift'].length > 4 ? 4 : postListData[index]['gift'].length, (giftIndex) {
                                                                                  return Container(
                                                                                    margin: const EdgeInsets.only(right: 8.0),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Container(
                                                                                          width: 24.0,
                                                                                          height: 24.0,
                                                                                          decoration: BoxDecoration(
                                                                                            borderRadius: BorderRadius.circular(9.0),
                                                                                          ),
                                                                                          child: Image(
                                                                                            image: NetworkImage(
                                                                                              postListData[index]['gift'][giftIndex]['image'],
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        CustomTextBuilder(
                                                                                          text: '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                                          fontColor: ColorsConfig.defaultGray,
                                                                                          fontSize: 12.0.sp,
                                                                                          fontWeight: FontWeight.w700,
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                }),
                                                                              )
                                                                            : Container(),
                                                                      ),
                                                                    )
                                                                  : Container(
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          left:
                                                                              4.0,
                                                                          top:
                                                                              5.0),
                                                                      child: postListData[index]['gift']
                                                                              .isNotEmpty
                                                                          ? Wrap(
                                                                              children: List.generate(postListData[index]['gift'].length, (giftIndex) {
                                                                                return Container(
                                                                                  margin: const EdgeInsets.only(right: 8.0),
                                                                                  child: Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    mainAxisSize: MainAxisSize.min,
                                                                                    children: [
                                                                                      Container(
                                                                                        width: 24.0,
                                                                                        height: 24.0,
                                                                                        decoration: BoxDecoration(
                                                                                          borderRadius: BorderRadius.circular(9.0),
                                                                                        ),
                                                                                        child: Image(
                                                                                          image: NetworkImage(
                                                                                            postListData[index]['gift'][giftIndex]['image'],
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      CustomTextBuilder(
                                                                                        text: '${postListData[index]['gift'][giftIndex]['gift_count']}',
                                                                                        fontColor: ColorsConfig.defaultGray,
                                                                                        fontSize: 12.0.sp,
                                                                                        fontWeight: FontWeight.w700,
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              }),
                                                                            )
                                                                          : Container(),
                                                                    ),
                                                            )
                                                          : Container(),
                                                      !getPostListMoreBtnState[
                                                                  index] &&
                                                              postListData[index]
                                                                          [
                                                                          'gift']
                                                                      .length >
                                                                  4
                                                          ? InkWell(
                                                              onTap: () {
                                                                setState(() {
                                                                  getPostListMoreBtnState[
                                                                          index] =
                                                                      true;
                                                                });
                                                              },
                                                              child: Padding(
                                                                padding: const EdgeInsets
                                                                    .symmetric(
                                                                    horizontal:
                                                                        4.0),
                                                                child:
                                                                    CustomTextBuilder(
                                                                  text: TextConstant
                                                                      .moreReadText,
                                                                  fontColor:
                                                                      ColorsConfig()
                                                                          .textBlack2(),
                                                                  fontSize:
                                                                      14.0.sp,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w400,
                                                                ),
                                                              ),
                                                            )
                                                          : Container(),
                                                    ],
                                                  ),
                                                ],
                                              ),
                                            ],
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                  postListData[index]['type'] == 4
                                      ? Container(
                                          margin: const EdgeInsets.symmetric(
                                              vertical: 12.0),
                                          padding: const EdgeInsets.symmetric(
                                              horizontal: 20.0),
                                          child: Column(
                                            children: [
                                              Row(
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                mainAxisAlignment:
                                                    MainAxisAlignment
                                                        .spaceBetween,
                                                children: [
                                                  Column(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceBetween,
                                                    children: [
                                                      Container(
                                                        width: (MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width *
                                                                0.8) -
                                                            80.0,
                                                        margin: const EdgeInsets
                                                            .only(bottom: 8.0),
                                                        child:
                                                            CustomTextBuilder(
                                                          text:
                                                              '${postListData[index]['title']}',
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textWhite1(),
                                                          fontSize: 19.0.sp,
                                                          fontWeight:
                                                              FontWeight.w600,
                                                          maxLines: 2,
                                                          textOverflow:
                                                              TextOverflow
                                                                  .ellipsis,
                                                        ),
                                                      ),
                                                      SizedBox(
                                                        width: (MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width *
                                                                0.8) -
                                                            80.0,
                                                        child:
                                                            CustomTextBuilder(
                                                          text:
                                                              '${postListData[index]['description']}',
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textBlack1(),
                                                          fontSize: 16.0.sp,
                                                          fontWeight:
                                                              FontWeight.w400,
                                                          maxLines: 1,
                                                          textOverflow:
                                                              TextOverflow
                                                                  .ellipsis,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                  InkWell(
                                                    onTap: () {
                                                      UrlLauncherBuilder()
                                                          .launchURL(
                                                              postListData[
                                                                      index]
                                                                  ['link']);
                                                    },
                                                    child: Container(
                                                      width: (MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .width *
                                                              0.35) -
                                                          23.0,
                                                      height: 80.0,
                                                      decoration: BoxDecoration(
                                                        color: ColorsConfig()
                                                            .textBlack2(),
                                                        border: Border.all(
                                                          width: 0.5,
                                                          color: ColorsConfig()
                                                              .primary(),
                                                        ),
                                                        image: DecorationImage(
                                                          image: NetworkImage(
                                                            postListData[index]
                                                                ['news_image'],
                                                          ),
                                                          fit: BoxFit.cover,
                                                          filterQuality:
                                                              FilterQuality
                                                                  .high,
                                                        ),
                                                      ),
                                                      child: Stack(
                                                        children: [
                                                          Positioned(
                                                            right: 3.0,
                                                            bottom: 3.0,
                                                            child: Container(
                                                              width: 18.0,
                                                              height: 18.0,
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .linkIconBackground(),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            9.0),
                                                              ),
                                                              child: Center(
                                                                child:
                                                                    SvgAssets(
                                                                  image:
                                                                      'assets/icon/link.svg',
                                                                  color: ColorsConfig()
                                                                      .primary(),
                                                                  width: 12.0,
                                                                  height: 12.0,
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ],
                                          ),
                                        )
                                      : postListData[index]['type'] == 1 ||
                                              postListData[index]['type'] ==
                                                  2 ||
                                              postListData[index]['type'] == 3
                                          ? Column(
                                              mainAxisSize: MainAxisSize.min,
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              mainAxisAlignment:
                                                  MainAxisAlignment.start,
                                              children: [
                                                postListData[index]
                                                                ['category'] !=
                                                            null &&
                                                        postListData[index]
                                                                ['category'] ==
                                                            'i'
                                                    ? Container(
                                                        width: MediaQuery.of(
                                                                context)
                                                            .size
                                                            .width,
                                                        margin: const EdgeInsets
                                                            .only(top: 12.0),
                                                        child: postListData[index]
                                                                        [
                                                                        'image']
                                                                    .length >
                                                                1
                                                            ? ConstrainedBox(
                                                                constraints:
                                                                    BoxConstraints(
                                                                  maxHeight: MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .width *
                                                                      1.33,
                                                                ),
                                                                child: PageView
                                                                    .builder(
                                                                  controller:
                                                                      _pageController,
                                                                  itemCount: postListData[
                                                                              index]
                                                                          [
                                                                          'image']
                                                                      .length,
                                                                  onPageChanged:
                                                                      (int
                                                                          page) {
                                                                    setState(
                                                                        () {
                                                                      currentPage[
                                                                              index] =
                                                                          page;
                                                                    });
                                                                  },
                                                                  itemBuilder:
                                                                      (context,
                                                                          imageIndex) {
                                                                    return Image(
                                                                        image:
                                                                            NetworkImage(
                                                                          postListData[index]['image']
                                                                              [
                                                                              imageIndex],
                                                                        ),
                                                                        fit: BoxFit
                                                                            .fitWidth,
                                                                        filterQuality:
                                                                            FilterQuality
                                                                                .high,
                                                                        alignment:
                                                                            Alignment.center);
                                                                  },
                                                                ),
                                                              )
                                                            : SizedBox(
                                                                height: MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width,
                                                                child: Image(
                                                                    image:
                                                                        NetworkImage(
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'image'][0],
                                                                    ),
                                                                    fit: BoxFit
                                                                        .cover,
                                                                    filterQuality:
                                                                        FilterQuality
                                                                            .high,
                                                                    alignment:
                                                                        Alignment
                                                                            .center),
                                                              ),
                                                      )
                                                    : Container(),
                                                postListData[index]
                                                                ['category'] !=
                                                            null &&
                                                        postListData[index]
                                                                ['category'] ==
                                                            'i' &&
                                                        postListData[index]
                                                                    ['image']
                                                                .length >
                                                            1
                                                    ? Container(
                                                        margin: const EdgeInsets
                                                            .only(top: 12.0),
                                                        child: Row(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .center,
                                                          children: List.generate(
                                                              postListData[
                                                                          index]
                                                                      ['image']
                                                                  .length,
                                                              (dots) {
                                                            return Container(
                                                              width: 8.0,
                                                              height: 8.0,
                                                              margin: dots ==
                                                                      postListData[index]
                                                                              [
                                                                              'image']
                                                                          .last
                                                                  ? EdgeInsets
                                                                      .zero
                                                                  : const EdgeInsets
                                                                      .only(
                                                                      right:
                                                                          10.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: currentPage[
                                                                            index] ==
                                                                        dots
                                                                    ? ColorsConfig()
                                                                        .primary()
                                                                    : ColorsConfig
                                                                        .defaultToast,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            4.0),
                                                              ),
                                                            );
                                                          }),
                                                        ),
                                                      )
                                                    : Container(),
                                                postListData[index]
                                                                ['category'] !=
                                                            null &&
                                                        postListData[index]
                                                                ['category'] ==
                                                            'g'
                                                    ? Container(
                                                        width: MediaQuery.of(
                                                                context)
                                                            .size
                                                            .width,
                                                        margin: const EdgeInsets
                                                            .only(top: 12.0),
                                                        child: Image(
                                                          image: NetworkImage(
                                                            postListData[index]
                                                                ['sub_link'],
                                                          ),
                                                          fit: BoxFit.cover,
                                                          filterQuality:
                                                              FilterQuality
                                                                  .high,
                                                        ),
                                                      )
                                                    : Container(),
                                                postListData[index]
                                                                ['category'] !=
                                                            null &&
                                                        postListData[index]
                                                                ['category'] ==
                                                            'y'
                                                    ? Container(
                                                        width: MediaQuery.of(
                                                                context)
                                                            .size
                                                            .width,
                                                        margin: const EdgeInsets
                                                            .only(top: 12.0),
                                                        child:
                                                            YoutubePlayerIFrame(
                                                          aspectRatio: 16 / 9,
                                                          controller:
                                                              YoutubePlayerController(
                                                            initialVideoId: postListData[index][
                                                                        'sub_link']
                                                                    .startsWith(
                                                                        'https://youtu.be/')
                                                                ? postListData[index][
                                                                            'sub_link']
                                                                        .toString()
                                                                        .split(
                                                                            'https://youtu.be/')[
                                                                    1]
                                                                : postListData[index][
                                                                            'sub_link']
                                                                        .startsWith(
                                                                            'https://youtube.com/shorts/')
                                                                    ? postListData[index]
                                                                            ['sub_link']
                                                                        .toString()
                                                                        .split('shorts/')[1]
                                                                        .split('?')[0]
                                                                    : postListData[index]['sub_link'].toString().split('watch?v=')[1],
                                                            params:
                                                                const YoutubePlayerParams(
                                                              autoPlay: false,
                                                              showControls:
                                                                  true,
                                                              showFullscreenButton:
                                                                  true,
                                                              mute: true,
                                                            ),
                                                          ),
                                                        ))
                                                    : Container(),
                                                Container(
                                                  width: MediaQuery.of(context)
                                                      .size
                                                      .width,
                                                  margin: const EdgeInsets
                                                      .symmetric(
                                                      vertical: 12.0),
                                                  padding: const EdgeInsets
                                                      .symmetric(
                                                      horizontal: 20.0),
                                                  child: CustomTextBuilder(
                                                    text:
                                                        '${postListData[index]['title']}',
                                                    fontColor: ColorsConfig()
                                                        .textWhite1(),
                                                    fontSize: 20.0.sp,
                                                    fontWeight: FontWeight.w700,
                                                    maxLines: 2,
                                                    textOverflow:
                                                        TextOverflow.ellipsis,
                                                  ),
                                                ),
                                                Container(
                                                  width: MediaQuery.of(context)
                                                      .size
                                                      .width,
                                                  padding: const EdgeInsets
                                                      .symmetric(
                                                      horizontal: 20.0),
                                                  child: CustomTextBuilder(
                                                    text: postListData[index]
                                                        ['description'],
                                                    fontColor: ColorsConfig()
                                                        .textBlack1(),
                                                    fontSize: 18.0.sp,
                                                    fontWeight: FontWeight.w400,
                                                    maxLines: 5,
                                                    textOverflow:
                                                        TextOverflow.ellipsis,
                                                  ),
                                                ),
                                              ],
                                            )
                                          : postListData[index]['type'] == 5
                                              ? Padding(
                                                  padding: const EdgeInsets
                                                      .symmetric(
                                                      horizontal: 20.0),
                                                  child: Column(
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .start,
                                                    children: [
                                                      Container(
                                                        width: MediaQuery.of(
                                                                context)
                                                            .size
                                                            .width,
                                                        margin: const EdgeInsets
                                                            .only(
                                                            top: 12.0,
                                                            bottom: 4.0),
                                                        child:
                                                            CustomTextBuilder(
                                                          text: postListData[
                                                              index]['title'],
                                                          fontColor:
                                                              ColorsConfig()
                                                                  .textWhite1(),
                                                          fontSize: 19.0.sp,
                                                          fontWeight:
                                                              FontWeight.w700,
                                                          maxLines: 2,
                                                          textOverflow:
                                                              TextOverflow
                                                                  .ellipsis,
                                                        ),
                                                      ),
                                                      Column(
                                                        children: List.generate(
                                                            postListData[index]
                                                                    ['vote']
                                                                .length,
                                                            (votes) {
                                                          return InkWell(
                                                            onTap: () async {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              if (DateTime.parse(
                                                                          postListData[index]
                                                                              [
                                                                              'vote_end_date'])
                                                                      .millisecondsSinceEpoch >
                                                                  DateTime.now()
                                                                      .millisecondsSinceEpoch) {
                                                                if (postListData[
                                                                            index]
                                                                        [
                                                                        'selected_vote_index'] ==
                                                                    null) {
                                                                  SelectVoteAPI()
                                                                      .addVote(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: postListData[index]
                                                                              [
                                                                              'post_index'],
                                                                          voteIndex: postListData[index]['vote'][votes]
                                                                              [
                                                                              'vote_index'])
                                                                      .then(
                                                                          (_v) {
                                                                    setState(
                                                                        () {
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'selected_vote_index'] = postListData[index]['vote']
                                                                              [
                                                                              votes]
                                                                          [
                                                                          'vote_index'];
                                                                      postListData[index]['vote']
                                                                              [
                                                                              votes]
                                                                          [
                                                                          'cnt'] = postListData[index]['vote'][votes]
                                                                              [
                                                                              'cnt'] +
                                                                          1;
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'vote_count'] = postListData[index]
                                                                              [
                                                                              'vote_count'] +
                                                                          1;
                                                                    });
                                                                  });
                                                                } else if (postListData[index]
                                                                            [
                                                                            'selected_vote_index'] !=
                                                                        null &&
                                                                    postListData[index]
                                                                            [
                                                                            'selected_vote_index'] ==
                                                                        postListData[index]['vote'][votes]
                                                                            [
                                                                            'vote_index']) {
                                                                  SelectedVoteCancleAPI()
                                                                      .cancel(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: postListData[index]
                                                                              [
                                                                              'post_index'],
                                                                          voteIndex: postListData[index]['vote'][votes]
                                                                              [
                                                                              'vote_index'])
                                                                      .then(
                                                                          (_v) {
                                                                    setState(
                                                                        () {
                                                                      postListData[index]
                                                                              [
                                                                              'selected_vote_index'] =
                                                                          null;
                                                                      postListData[index]['vote']
                                                                              [
                                                                              votes]
                                                                          [
                                                                          'cnt'] = postListData[index]['vote'][votes]
                                                                              [
                                                                              'cnt'] -
                                                                          1;
                                                                      postListData[
                                                                              index]
                                                                          [
                                                                          'vote_count'] = postListData[index]
                                                                              [
                                                                              'vote_count'] -
                                                                          1;
                                                                    });
                                                                  });
                                                                }
                                                              }
                                                            },
                                                            child: Container(
                                                              width:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                              height: 36.0,
                                                              margin:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      vertical:
                                                                          4.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig
                                                                    .transparent,
                                                                border:
                                                                    Border.all(
                                                                  width: 0.5,
                                                                  color: postListData[index]['selected_vote_index'] ==
                                                                              null ||
                                                                          postListData[index]['selected_vote_index'] !=
                                                                              postListData[index]['vote'][votes][
                                                                                  'vote_index']
                                                                      ? ColorsConfig()
                                                                          .border1()
                                                                      : ColorsConfig()
                                                                          .voteBorder(),
                                                                ),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            4.0),
                                                              ),
                                                              child: Stack(
                                                                children: [
                                                                  postListData[index]
                                                                              [
                                                                              'vote_count'] >
                                                                          0
                                                                      ? LinearPercentIndicator(
                                                                          percent:
                                                                              postListData[index]['vote'][votes]['cnt'] / postListData[index]['vote_count'],
                                                                          lineHeight:
                                                                              100,
                                                                          padding:
                                                                              EdgeInsets.zero,
                                                                          barRadius: const Radius
                                                                              .circular(
                                                                              4.0),
                                                                          animation:
                                                                              true,
                                                                          backgroundColor:
                                                                              ColorsConfig.transparent,
                                                                          progressColor: postListData[index]['selected_vote_index'] == null || postListData[index]['selected_vote_index'] != postListData[index]['vote'][votes]['vote_index']
                                                                              ? ColorsConfig().graphColor2()
                                                                              : ColorsConfig().graphColor1(),
                                                                        )
                                                                      : Container(),
                                                                  Padding(
                                                                    padding:
                                                                        const EdgeInsets
                                                                            .all(
                                                                            8.0),
                                                                    child: Row(
                                                                      mainAxisAlignment:
                                                                          MainAxisAlignment
                                                                              .spaceBetween,
                                                                      children: [
                                                                        CustomTextBuilder(
                                                                          text: postListData[index]['vote'][votes]
                                                                              [
                                                                              'vote_title'],
                                                                          fontColor:
                                                                              ColorsConfig().textWhite1(),
                                                                          fontSize:
                                                                              16.0.sp,
                                                                          fontWeight:
                                                                              FontWeight.w400,
                                                                        ),
                                                                        CustomTextBuilder(
                                                                          text: postListData[index]['selected_vote_index'] != null || DateTime.parse(postListData[index]['date']).millisecondsSinceEpoch < DateTime.now().millisecondsSinceEpoch
                                                                              ? postListData[index]['vote_count'] > 0
                                                                                  ? '${(postListData[index]['vote'][votes]['cnt'] / postListData[index]['vote_count'] * 100).toStringAsFixed(0)}%'
                                                                                  : '0%'
                                                                              : '',
                                                                          fontColor:
                                                                              ColorsConfig().textBlack1(),
                                                                          fontSize:
                                                                              16.0.sp,
                                                                          fontWeight:
                                                                              FontWeight.w400,
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          );
                                                        }),
                                                      ),
                                                      Container(
                                                        width: MediaQuery.of(
                                                                context)
                                                            .size
                                                            .width,
                                                        margin: const EdgeInsets
                                                            .only(
                                                            top: 5.0,
                                                            bottom: 11.0),
                                                        child: Row(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .spaceBetween,
                                                          children: [
                                                            CustomTextBuilder(
                                                              text:
                                                                  '총 ${postListData[index]['vote_count']}명 투표',
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textBlack1(),
                                                              fontSize: 12.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w400,
                                                            ),
                                                            CustomTextBuilder(
                                                              text: DateCalculatorWrapper().expiredDate(postListData[index]
                                                                              [
                                                                              'vote_end_date']) >=
                                                                          0 &&
                                                                      DateCalculatorWrapper().expiredHoursForDate(postListData[index]
                                                                              [
                                                                              'vote_end_date']) >
                                                                          0
                                                                  ? '${DateCalculatorWrapper().expiredDate(postListData[index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(postListData[index]['vote_end_date'])}시간 남음'
                                                                  : DateCalculatorWrapper().expiredDate(postListData[index]['vote_end_date']) >= 0 &&
                                                                          DateCalculatorWrapper().expiredHoursForDate(postListData[index]['vote_end_date']) <=
                                                                              0 &&
                                                                          DateCalculatorWrapper().expiredMinutesForDate(postListData[index]['vote_end_date']) >
                                                                              0
                                                                      ? '${DateCalculatorWrapper().expiredDate(postListData[index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(postListData[index]['vote_end_date'])}시간 ${DateCalculatorWrapper().expiredMinutesForDate(postListData[index]['vote_end_date'])}분 남음'
                                                                      : '투표가 마감되었습니다.',
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textBlack1(),
                                                              fontSize: 12.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w400,
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                )
                                              : Container(),
                                ],
                              ),
                            ),
                          ),
                          // 좋아요, 댓글, 선물, 공유, 더보기 버튼
                          Container(
                            padding:
                                const EdgeInsets.fromLTRB(0.0, 0.0, 0.0, 0.0),
                            margin: const EdgeInsets.only(bottom: 8.0),
                            color: ColorsConfig().subBackground1(),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                // 좋아요
                                SizedBox(
                                  width: MediaQuery.of(context).size.width / 4,
                                  child: MaterialButton(
                                    onPressed: () async {
                                      final _prefs =
                                          await SharedPreferences.getInstance();

                                      if (!postListData[index]['isLike']) {
                                        AddLikeSenderAPI()
                                            .add(
                                                accesToken: _prefs
                                                    .getString('AccessToken')!,
                                                postIndex: postListData[index]
                                                    ['post_index'])
                                            .then((res) {
                                          if (res.result['status'] == 10800) {
                                            setState(() {
                                              postListData[index]['like']++;
                                              postListData[index]['isLike'] =
                                                  true;
                                            });
                                          }
                                        });
                                      } else {
                                        CancelLikeSenderAPI()
                                            .cancel(
                                                accesToken: _prefs
                                                    .getString('AccessToken')!,
                                                postIndex: postListData[index]
                                                    ['post_index'])
                                            .then((res) {
                                          if (res.result['status'] == 10805) {
                                            setState(() {
                                              postListData[index]['like']--;
                                              postListData[index]['isLike'] =
                                                  false;
                                            });
                                          }
                                        });
                                      }
                                    },
                                    child: Row(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      children: [
                                        SvgAssets(
                                          image: 'assets/icon/like.svg',
                                          color: postListData[index]['isLike']
                                              ? ColorsConfig().primary()
                                              : ColorsConfig().textBlack1(),
                                          width: 18.0,
                                          height: 18.0,
                                        ),
                                        const SizedBox(width: 10.0),
                                        CustomTextBuilder(
                                          text: numberFormat.format(
                                              postListData[index]['like'] +
                                                  addLikeCount),
                                          fontColor:
                                              ColorsConfig().textBlack1(),
                                          fontSize: 13.0.sp,
                                          fontWeight: FontWeight.w600,
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                                // 댓글
                                SizedBox(
                                  width: MediaQuery.of(context).size.width / 4,
                                  child: MaterialButton(
                                    onPressed: () {
                                      if (postListData[index]['type'] == 4) {
                                        Navigator.push(
                                          context,
                                          MaterialPageRoute(
                                            builder: (context) =>
                                                NewsDetailScreen(
                                              postIndex: postListData[index]
                                                  ['post_index'],
                                              postType: postListData[index]
                                                  ['type'],
                                            ),
                                          ),
                                        ).then((returns) async {
                                          if (returns != null) {
                                            if (returns['ret']) {
                                              setState(() {
                                                postListData.remove(
                                                    postListData[index]);
                                                currentPage.removeAt(index);
                                              });
                                            }
                                          } else {
                                            final _prefs =
                                                await SharedPreferences
                                                    .getInstance();

                                            PostDetailDataAPI()
                                                .detail(
                                                    accesToken:
                                                        _prefs.getString(
                                                            'AccessToken')!,
                                                    postIndex:
                                                        postListData[index]
                                                            ['post_index'])
                                                .then((value) {
                                              setState(() {
                                                postListData[index] =
                                                    value.result;
                                              });
                                            });
                                          }
                                        });
                                      } else if (postListData[index]['type'] ==
                                          5) {
                                        Navigator.push(
                                          context,
                                          MaterialPageRoute(
                                            builder: (context) =>
                                                VoteDetailScreen(
                                              postIndex: postListData[index]
                                                  ['post_index'],
                                              postType: postListData[index]
                                                  ['type'],
                                            ),
                                          ),
                                        ).then((returns) async {
                                          if (returns != null) {
                                            if (returns['ret']) {
                                              setState(() {
                                                postListData.remove(
                                                    postListData[index]);
                                                currentPage.removeAt(index);
                                              });
                                            }
                                          } else {
                                            final _prefs =
                                                await SharedPreferences
                                                    .getInstance();

                                            PostDetailDataAPI()
                                                .detail(
                                                    accesToken:
                                                        _prefs.getString(
                                                            'AccessToken')!,
                                                    postIndex:
                                                        postListData[index]
                                                            ['post_index'])
                                                .then((value) {
                                              setState(() {
                                                postListData[index] =
                                                    value.result;
                                              });
                                            });
                                          }
                                        });
                                      } else {
                                        Navigator.push(
                                          context,
                                          MaterialPageRoute(
                                            builder: (context) =>
                                                PostingDetailScreen(
                                              postIndex: postListData[index]
                                                  ['post_index'],
                                              postType: postListData[index]
                                                  ['type'],
                                            ),
                                          ),
                                        ).then((returns) async {
                                          if (returns != null) {
                                            if (returns['ret']) {
                                              setState(() {
                                                postListData.remove(
                                                    postListData[index]);
                                                currentPage.removeAt(index);
                                              });
                                            }
                                          } else {
                                            final _prefs =
                                                await SharedPreferences
                                                    .getInstance();

                                            PostDetailDataAPI()
                                                .detail(
                                                    accesToken:
                                                        _prefs.getString(
                                                            'AccessToken')!,
                                                    postIndex:
                                                        postListData[index]
                                                            ['post_index'])
                                                .then((value) {
                                              setState(() {
                                                postListData[index] =
                                                    value.result;
                                              });
                                            });
                                          }
                                        });
                                      }
                                    },
                                    child: Row(
                                      mainAxisAlignment:
                                          MainAxisAlignment.center,
                                      children: [
                                        SvgAssets(
                                          image: 'assets/icon/reply.svg',
                                          color: ColorsConfig().textBlack1(),
                                          width: 18.0,
                                          height: 18.0,
                                        ),
                                        const SizedBox(width: 10.0),
                                        CustomTextBuilder(
                                          text: numberFormat.format(
                                              postListData[index]['reply']),
                                          fontColor:
                                              ColorsConfig().textBlack1(),
                                          fontSize: 13.0.sp,
                                          fontWeight: FontWeight.w600,
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                                // 선물
                                SizedBox(
                                  width: MediaQuery.of(context).size.width / 4,
                                  child: MaterialButton(
                                    onPressed: () async {
                                      if (postListData[index]['isMe']) {
                                        ToastBuilder().toast(
                                          Container(
                                            width: MediaQuery.of(context)
                                                .size
                                                .width,
                                            padding: const EdgeInsets.all(14.0),
                                            margin: const EdgeInsets.symmetric(
                                                horizontal: 30.0),
                                            decoration: BoxDecoration(
                                              color: ColorsConfig.defaultToast
                                                  .withOpacity(0.9),
                                              borderRadius:
                                                  BorderRadius.circular(6.0),
                                            ),
                                            child: CustomTextBuilder(
                                              text: TextConstant
                                                  .giftSendErrorText1,
                                              fontColor:
                                                  ColorsConfig.defaultWhite,
                                              fontSize: 14.0.sp,
                                            ),
                                          ),
                                        );
                                      } else {
                                        final _prefs = await SharedPreferences
                                            .getInstance();

                                        GetGiftListDataAPI()
                                            .gift(
                                                accesToken: _prefs
                                                    .getString('AccessToken')!)
                                            .then((gifts) {
                                          bool _hasClick = false;

                                          showModalBottomSheet(
                                              context: context,
                                              backgroundColor: ColorsConfig()
                                                  .subBackground1(),
                                              isScrollControlled: true,
                                              shape:
                                                  const RoundedRectangleBorder(
                                                borderRadius: BorderRadius.only(
                                                  topLeft:
                                                      Radius.circular(12.0),
                                                  topRight:
                                                      Radius.circular(12.0),
                                                ),
                                              ),
                                              builder: (BuildContext context) {
                                                int _giftTabIndex = 0;

                                                List<dynamic> _trophy = [];
                                                List<dynamic> _reaction = [];
                                                List<dynamic> _neckTrophy = [];

                                                Map<String, dynamic>
                                                    _selectedGift = {};

                                                var _giftTabController =
                                                    TabController(
                                                  length: 4,
                                                  vsync: this,
                                                );
                                                _giftTabController
                                                    .addListener(() {
                                                  if (_giftTabController
                                                          .indexIsChanging ||
                                                      _giftTabController
                                                              .index !=
                                                          _giftTabIndex) {
                                                    setState(() {
                                                      _giftTabIndex =
                                                          _giftTabController
                                                              .index;
                                                    });
                                                  }
                                                });

                                                for (int i = 0;
                                                    i < gifts.result.length;
                                                    i++) {
                                                  if (gifts.result[i]
                                                          ['item_type'] ==
                                                      0) {
                                                    _trophy
                                                        .add(gifts.result[i]);
                                                  } else if (gifts.result[i]
                                                          ['item_type'] ==
                                                      1) {
                                                    _reaction
                                                        .add(gifts.result[i]);
                                                  } else if (gifts.result[i]
                                                          ['item_type'] ==
                                                      2) {
                                                    _neckTrophy
                                                        .add(gifts.result[i]);
                                                  }
                                                }

                                                return StatefulBuilder(
                                                  builder: (context, state) {
                                                    return Container(
                                                      height: _hasClick
                                                          ? MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .height /
                                                              1.72
                                                          : MediaQuery.of(
                                                                      context)
                                                                  .size
                                                                  .height /
                                                              2,
                                                      decoration:
                                                          const BoxDecoration(
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  12.0),
                                                          topRight:
                                                              Radius.circular(
                                                                  12.0),
                                                        ),
                                                      ),
                                                      child: Column(
                                                        children: [
                                                          Container(
                                                            width: 50.0,
                                                            height: 4.0,
                                                            margin:
                                                                const EdgeInsets
                                                                    .symmetric(
                                                                    vertical:
                                                                        8.0),
                                                            decoration:
                                                                BoxDecoration(
                                                              color: ColorsConfig()
                                                                  .textBlack2(),
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          100.0),
                                                            ),
                                                          ),
                                                          // 선물하기 타이틀
                                                          Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceBetween,
                                                            children: [
                                                              Container(
                                                                padding:
                                                                    const EdgeInsets
                                                                        .fromLTRB(
                                                                        20.0,
                                                                        15.0,
                                                                        20.0,
                                                                        10.0),
                                                                alignment: Alignment
                                                                    .centerLeft,
                                                                child:
                                                                    CustomTextBuilder(
                                                                  text: TextConstant
                                                                      .sendGiftText,
                                                                  fontColor:
                                                                      ColorsConfig()
                                                                          .textWhite1(),
                                                                  fontSize:
                                                                      22.0.sp,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w700,
                                                                ),
                                                              ),
                                                              Container(
                                                                margin:
                                                                    const EdgeInsets
                                                                        .only(
                                                                        right:
                                                                            15.0),
                                                                child:
                                                                    const HoldingBalanceWidget(),
                                                              ),
                                                            ],
                                                          ),
                                                          // 탭바
                                                          Container(
                                                            width:
                                                                MediaQuery.of(
                                                                        context)
                                                                    .size
                                                                    .width,
                                                            decoration:
                                                                BoxDecoration(
                                                              border: Border(
                                                                bottom:
                                                                    BorderSide(
                                                                  width: 0.5,
                                                                  color: ColorsConfig()
                                                                      .border1(),
                                                                ),
                                                              ),
                                                            ),
                                                            child: TabBar(
                                                              controller:
                                                                  _giftTabController,
                                                              isScrollable:
                                                                  true,
                                                              padding:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                          20.0),
                                                              indicatorColor:
                                                                  ColorsConfig()
                                                                      .primary(),
                                                              unselectedLabelColor:
                                                                  ColorsConfig()
                                                                      .textWhite1(),
                                                              unselectedLabelStyle:
                                                                  TextStyle(
                                                                fontSize:
                                                                    16.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w400,
                                                              ),
                                                              labelColor:
                                                                  ColorsConfig()
                                                                      .primary(),
                                                              labelStyle:
                                                                  TextStyle(
                                                                fontSize:
                                                                    16.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w700,
                                                              ),
                                                              onTap: (_) {
                                                                state(() {
                                                                  _hasClick =
                                                                      false;
                                                                  _selectedGift =
                                                                      {};
                                                                });
                                                              },
                                                              tabs: [
                                                                Tab(
                                                                  child:
                                                                      CustomTextBuilder(
                                                                    text: TextConstant
                                                                        .allText,
                                                                  ),
                                                                ),
                                                                Tab(
                                                                  child:
                                                                      CustomTextBuilder(
                                                                    text: TextConstant
                                                                        .trophyText,
                                                                  ),
                                                                ),
                                                                Tab(
                                                                  child:
                                                                      CustomTextBuilder(
                                                                    text: TextConstant
                                                                        .reactionText,
                                                                  ),
                                                                ),
                                                                Tab(
                                                                  child:
                                                                      CustomTextBuilder(
                                                                    text: '메달',
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                          Expanded(
                                                            child: Padding(
                                                              padding: !_hasClick
                                                                  ? const EdgeInsets
                                                                      .fromLTRB(
                                                                      25.0,
                                                                      25.0,
                                                                      15.0,
                                                                      20.0)
                                                                  : const EdgeInsets
                                                                      .fromLTRB(
                                                                      25.0,
                                                                      25.0,
                                                                      15.0,
                                                                      0.0),
                                                              child: TabBarView(
                                                                controller:
                                                                    _giftTabController,
                                                                physics:
                                                                    const NeverScrollableScrollPhysics(),
                                                                children: [
                                                                  ListView(
                                                                    children: [
                                                                      Wrap(
                                                                        children: List.generate(
                                                                            gifts.result.length,
                                                                            (index) {
                                                                          return InkWell(
                                                                            splashColor:
                                                                                ColorsConfig.transparent,
                                                                            highlightColor:
                                                                                ColorsConfig.transparent,
                                                                            onTap:
                                                                                () {
                                                                              state(() {
                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                  _hasClick = false;
                                                                                  _selectedGift = {};
                                                                                } else {
                                                                                  _hasClick = true;
                                                                                  _selectedGift = {
                                                                                    "index": index,
                                                                                    "item_index": gifts.result[index]['item_index'],
                                                                                    "item_type": gifts.result[index]['item_type'],
                                                                                    "item_type_name": gifts.result[index]['item_type_name'],
                                                                                    "url": gifts.result[index]['url'],
                                                                                    "description": gifts.result[index]['description'],
                                                                                    "price": gifts.result[index]['price'],
                                                                                  };
                                                                                }
                                                                              });
                                                                            },
                                                                            child:
                                                                                Container(
                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                              decoration: BoxDecoration(
                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 0 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                              ),
                                                                              child: Column(
                                                                                children: [
                                                                                  Image(
                                                                                    image: NetworkImage(
                                                                                      gifts.result[index]['url'],
                                                                                    ),
                                                                                    filterQuality: FilterQuality.high,
                                                                                    width: 65.0.w,
                                                                                    height: 65.0.h,
                                                                                  ),
                                                                                  Container(
                                                                                    margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                    child: CustomTextBuilder(
                                                                                      text: '${gifts.result[index]['price']}',
                                                                                      fontColor: ColorsConfig().textWhite1(),
                                                                                      fontSize: 12.0.sp,
                                                                                      fontWeight: FontWeight.w400,
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  ListView(
                                                                    children: [
                                                                      Wrap(
                                                                        children: List.generate(
                                                                            _trophy.length,
                                                                            (index) {
                                                                          return InkWell(
                                                                            splashColor:
                                                                                ColorsConfig.transparent,
                                                                            highlightColor:
                                                                                ColorsConfig.transparent,
                                                                            onTap:
                                                                                () {
                                                                              state(() {
                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                  _hasClick = false;
                                                                                  _selectedGift = {};
                                                                                } else {
                                                                                  _hasClick = true;
                                                                                  _selectedGift = {
                                                                                    "index": index,
                                                                                    "item_index": _trophy[index]['item_index'],
                                                                                    "item_type": _trophy[index]['item_type'],
                                                                                    "item_type_name": _trophy[index]['item_type_name'],
                                                                                    "url": _trophy[index]['url'],
                                                                                    "description": _trophy[index]['description'],
                                                                                    "price": _trophy[index]['price'],
                                                                                  };
                                                                                }
                                                                              });
                                                                            },
                                                                            child:
                                                                                Container(
                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                              decoration: BoxDecoration(
                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 1 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                              ),
                                                                              child: _trophy[index]['item_type'] == 0
                                                                                  ? Column(
                                                                                      children: [
                                                                                        Image(
                                                                                          image: NetworkImage(
                                                                                            _trophy[index]['url'],
                                                                                          ),
                                                                                          filterQuality: FilterQuality.high,
                                                                                          width: 65.0.w,
                                                                                          height: 65.0.h,
                                                                                        ),
                                                                                        Container(
                                                                                          margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                          child: CustomTextBuilder(
                                                                                            text: '${_trophy[index]['price']}',
                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                            fontSize: 12.0.sp,
                                                                                            fontWeight: FontWeight.w400,
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    )
                                                                                  : null,
                                                                            ),
                                                                          );
                                                                        }),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  ListView(
                                                                    children: [
                                                                      Wrap(
                                                                        children: List.generate(
                                                                            _reaction.length,
                                                                            (index) {
                                                                          return InkWell(
                                                                            splashColor:
                                                                                ColorsConfig.transparent,
                                                                            highlightColor:
                                                                                ColorsConfig.transparent,
                                                                            onTap:
                                                                                () {
                                                                              state(() {
                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                  _hasClick = false;
                                                                                  _selectedGift = {};
                                                                                } else {
                                                                                  _hasClick = true;
                                                                                  _selectedGift = {
                                                                                    "index": index,
                                                                                    "item_index": _reaction[index]['item_index'],
                                                                                    "item_type": _reaction[index]['item_type'],
                                                                                    "item_type_name": _reaction[index]['item_type_name'],
                                                                                    "url": _reaction[index]['url'],
                                                                                    "description": _reaction[index]['description'],
                                                                                    "price": _reaction[index]['price'],
                                                                                  };
                                                                                }
                                                                              });
                                                                            },
                                                                            child:
                                                                                Container(
                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                              decoration: BoxDecoration(
                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 2 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                              ),
                                                                              child: _reaction[index]['item_type'] == 1
                                                                                  ? Column(
                                                                                      children: [
                                                                                        Image(
                                                                                          image: NetworkImage(
                                                                                            _reaction[index]['url'],
                                                                                          ),
                                                                                          filterQuality: FilterQuality.high,
                                                                                          width: 65.0.w,
                                                                                          height: 65.0.h,
                                                                                        ),
                                                                                        Container(
                                                                                          margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                          child: CustomTextBuilder(
                                                                                            text: '${_reaction[index]['price']}',
                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                            fontSize: 12.0.sp,
                                                                                            fontWeight: FontWeight.w400,
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    )
                                                                                  : null,
                                                                            ),
                                                                          );
                                                                        }),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  ListView(
                                                                    children: [
                                                                      Wrap(
                                                                        children: List.generate(
                                                                            _neckTrophy.length,
                                                                            (index) {
                                                                          return InkWell(
                                                                            splashColor:
                                                                                ColorsConfig.transparent,
                                                                            highlightColor:
                                                                                ColorsConfig.transparent,
                                                                            onTap:
                                                                                () {
                                                                              state(() {
                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                  _hasClick = false;
                                                                                  _selectedGift = {};
                                                                                } else {
                                                                                  _hasClick = true;
                                                                                  _selectedGift = {
                                                                                    "index": index,
                                                                                    "item_index": _neckTrophy[index]['item_index'],
                                                                                    "item_type": _neckTrophy[index]['item_type'],
                                                                                    "item_type_name": _neckTrophy[index]['item_type_name'],
                                                                                    "url": _neckTrophy[index]['url'],
                                                                                    "description": _neckTrophy[index]['description'],
                                                                                    "price": _neckTrophy[index]['price'],
                                                                                  };
                                                                                }
                                                                              });
                                                                            },
                                                                            child:
                                                                                Container(
                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                              decoration: BoxDecoration(
                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 3 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                              ),
                                                                              child: _neckTrophy[index]['item_type'] == 2
                                                                                  ? Column(
                                                                                      children: [
                                                                                        Image(
                                                                                          image: NetworkImage(
                                                                                            _neckTrophy[index]['url'],
                                                                                          ),
                                                                                          filterQuality: FilterQuality.high,
                                                                                          width: 65.0.w,
                                                                                          height: 65.0.h,
                                                                                        ),
                                                                                        Container(
                                                                                          margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                          child: CustomTextBuilder(
                                                                                            text: '${_neckTrophy[index]['price']}',
                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                            fontSize: 12.0.sp,
                                                                                            fontWeight: FontWeight.w400,
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    )
                                                                                  : null,
                                                                            ),
                                                                          );
                                                                        }),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                          _hasClick == true
                                                              ? Container(
                                                                  height: 157.0,
                                                                  padding:
                                                                      const EdgeInsets
                                                                          .fromLTRB(
                                                                          20.0,
                                                                          10.0,
                                                                          20.0,
                                                                          30.0),
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: ColorsConfig()
                                                                        .subBackground1(),
                                                                    boxShadow: [
                                                                      BoxShadow(
                                                                        color: ColorsConfig().textWhite1(
                                                                            opacity:
                                                                                0.16),
                                                                        blurRadius:
                                                                            10.0,
                                                                        offset: const Offset(
                                                                            0.0,
                                                                            -2.0),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  child: Column(
                                                                    children: [
                                                                      Row(
                                                                        children: [
                                                                          Image(
                                                                            image:
                                                                                NetworkImage(
                                                                              '${_selectedGift['url']}',
                                                                            ),
                                                                            filterQuality:
                                                                                FilterQuality.high,
                                                                            width:
                                                                                65.0.w,
                                                                            height:
                                                                                65.0.h,
                                                                          ),
                                                                          const SizedBox(
                                                                              width: 32.0),
                                                                          Column(
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment:
                                                                                CrossAxisAlignment.start,
                                                                            children: [
                                                                              CustomTextBuilder(
                                                                                text: '${_selectedGift['description']}',
                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                fontSize: 16.0.sp,
                                                                                fontWeight: FontWeight.w400,
                                                                              ),
                                                                              CustomTextBuilder(
                                                                                text: numberFormat.format(_selectedGift['price']),
                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                fontSize: 12.0.sp,
                                                                                fontWeight: FontWeight.w400,
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      const SizedBox(
                                                                          height:
                                                                              10.0),
                                                                      InkWell(
                                                                        onTap:
                                                                            () {
                                                                          if (_selectedGift['price'] ==
                                                                              0) {
                                                                            SendGiftDataAPI().gift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: postListData[index]['post_index']).then((value) {
                                                                              int? _existIndex;

                                                                              switch (value.result['status']) {
                                                                                case 10200:
                                                                                  setState(() {
                                                                                    if (postListData[index]['gift'].length == 0) {
                                                                                      postListData[index]['gift'].add({
                                                                                        "image": _selectedGift['url'],
                                                                                        "gift_count": 1,
                                                                                      });
                                                                                    } else {
                                                                                      for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                        if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                          _existIndex = i;
                                                                                          break;
                                                                                        }
                                                                                      }

                                                                                      if (_existIndex != null) {
                                                                                        postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                      } else {
                                                                                        postListData[index]['gift'].insert(0, {
                                                                                          "image": _selectedGift['url'],
                                                                                          "gift_count": 1,
                                                                                        });
                                                                                      }
                                                                                    }
                                                                                  });
                                                                                  Navigator.pop(context);
                                                                                  break;
                                                                                case 10201:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText1,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                                case 10202:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText2,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                                case 10203:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText3,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                                case 10204:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText4,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                              }
                                                                            });
                                                                          } else {
                                                                            SendPricedGiftDataAPI().pricedGift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: postListData[index]['post_index']).then((value) {
                                                                              int? _existIndex;

                                                                              switch (value.result['status']) {
                                                                                case 10201:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText1,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                                case 10202:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText2,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                                case 10203:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText3,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                                case 10210:
                                                                                  setState(() {
                                                                                    if (postListData[index]['gift'].length == 0) {
                                                                                      postListData[index]['gift'].add({
                                                                                        "image": _selectedGift['url'],
                                                                                        "gift_count": 1,
                                                                                      });
                                                                                    } else {
                                                                                      for (int i = 0; i < postListData[index]['gift'].length; i++) {
                                                                                        if (postListData[index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                          _existIndex = i;
                                                                                          break;
                                                                                        }
                                                                                      }

                                                                                      if (_existIndex != null) {
                                                                                        postListData[index]['gift'][_existIndex]['gift_count'] = postListData[index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                      } else {
                                                                                        postListData[index]['gift'].insert(0, {
                                                                                          "image": _selectedGift['url'],
                                                                                          "gift_count": 1,
                                                                                        });
                                                                                      }
                                                                                    }
                                                                                  });
                                                                                  Navigator.pop(context);
                                                                                  break;
                                                                                case 10211:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText5,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                                case 10212:
                                                                                  ToastBuilder().toast(
                                                                                    Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftSendErrorText6,
                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                        fontSize: 14.0.sp,
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                  break;
                                                                              }
                                                                            });
                                                                          }
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          width: MediaQuery.of(context)
                                                                              .size
                                                                              .width,
                                                                          height:
                                                                              42.0,
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            // color: ColorsConfig().primary(),
                                                                            borderRadius:
                                                                                BorderRadius.circular(100.0),
                                                                            gradient:
                                                                                LinearGradient(
                                                                              colors: [
                                                                                ColorsConfig().avatarButtonBackground1(),
                                                                                ColorsConfig().avatarButtonBackground2(),
                                                                              ],
                                                                              begin: Alignment.centerLeft,
                                                                              end: Alignment.centerRight,
                                                                            ),
                                                                          ),
                                                                          child:
                                                                              Center(
                                                                            child:
                                                                                CustomTextBuilder(
                                                                              text: TextConstant.sendText,
                                                                              fontColor: ColorsConfig().background(),
                                                                              fontSize: 16.0.sp,
                                                                              fontWeight: FontWeight.w700,
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                )
                                                              : Container(),
                                                        ],
                                                      ),
                                                    );
                                                  },
                                                );
                                              });
                                        });
                                      }
                                    },
                                    child: SvgAssets(
                                      image: 'assets/icon/gift.svg',
                                      color: ColorsConfig().textBlack1(),
                                      width: 18.0,
                                      height: 18.0,
                                    ),
                                  ),
                                ),
                                // 공유
                                SizedBox(
                                  width: MediaQuery.of(context).size.width / 4,
                                  child: MaterialButton(
                                    materialTapTargetSize:
                                        MaterialTapTargetSize.padded,
                                    onPressed: () async {
                                      var shortLink = await DeepLinkBuilder()
                                          .getShortLink(
                                              'share',
                                              '${postListData[index]['post_index']}',
                                              postListData[index]['type']);

                                      Share.share(
                                        '${postListData[index]['title']}\n$shortLink',
                                        sharePositionOrigin: Rect.fromLTWH(
                                            0,
                                            0,
                                            MediaQuery.of(context).size.width,
                                            MediaQuery.of(context).size.height /
                                                2),
                                      );
                                    },
                                    child: SvgAssets(
                                      image: 'assets/icon/share.svg',
                                      color: ColorsConfig().textBlack1(),
                                      width: 18.0,
                                      height: 18.0,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ],
                      );
                    } else {
                      if (hasTypeSelected) {
                        SharedPreferences.getInstance().then((_prefs) {
                          GetPostListAPI()
                              .list(
                                  accesToken: _prefs.getString('AccessToken')!,
                                  cursor: postListData[index - 1]['post_index'],
                                  category: selectedPostType)
                              .then((value) {
                            for (int i = 0;
                                i < value.result['data'].length;
                                i++) {
                              setState(() {
                                postListData.add(value.result['data'][i]);
                                currentPage.add(0);
                                getPostListMoreBtnState.add(false);
                              });
                            }
                          });
                        });
                      } else {
                        SharedPreferences.getInstance().then((_prefs) {
                          GetPostListAPI()
                              .list(
                                  accesToken: _prefs.getString('AccessToken')!,
                                  cursor: postListData[index - 1]['post_index'])
                              .then((value) {
                            for (int i = 0;
                                i < value.result['data'].length;
                                i++) {
                              setState(() {
                                postListData.add(value.result['data'][i]);
                                currentPage.add(0);
                                getPostListMoreBtnState.add(false);
                              });
                            }
                          });
                        });
                      }
                      return Container();
                    }
                  },
                ),
              ),
              Column(
                children: [
                  getSubscribePostListData.isNotEmpty &&
                          getSubscribePostListData['subscribe'].isNotEmpty
                      ? Expanded(
                          child: getSubscribePostListData['list'].isNotEmpty
                              ? RefreshIndicator(
                                  onRefresh: () async {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    GetSubscribePostListAPI()
                                        .subscribePostList(
                                            accesToken: _prefs
                                                .getString('AccessToken')!)
                                        .then((value) {
                                      setState(() {
                                        currentPage2.clear();
                                        getSubscribePostListData = value.result;
                                        for (int i = 0;
                                            i < value.result['list'].length;
                                            i++) {
                                          currentPage2.add(0);
                                        }
                                      });
                                    });
                                  },
                                  color: ColorsConfig().textWhite1(),
                                  backgroundColor:
                                      ColorsConfig().subBackgroundBlack(),
                                  child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    controller: widget.allListScrollController,
                                    itemCount: getSubscribePostListData['list']
                                            .length +
                                        1,
                                    itemBuilder: (context, index) {
                                      if (index <
                                          getSubscribePostListData['list']
                                              .length) {
                                        // getSubscribePostListData['subscribe'] = getSubscribePostListData['subscribe'].reversed.toList();
                                        if (index == 0) {
                                          return Column(
                                            children: [
                                              Container(
                                                height: 88.0,
                                                color: ColorsConfig()
                                                    .subBackground1(),
                                                child: Row(
                                                  children: [
                                                    Expanded(
                                                      child: ListView.builder(
                                                        scrollDirection:
                                                            Axis.horizontal,
                                                        itemCount:
                                                            getSubscribePostListData[
                                                                    'subscribe']
                                                                .length,
                                                        itemBuilder:
                                                            (context, hor) {
                                                          return InkWell(
                                                            onTap: () async {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              setState(() {
                                                                if (selectedUserIndex !=
                                                                    getSubscribePostListData['subscribe']
                                                                            [
                                                                            hor]
                                                                        [
                                                                        'user_index']) {
                                                                  selectedUserIndex =
                                                                      getSubscribePostListData['subscribe']
                                                                              [
                                                                              hor]
                                                                          [
                                                                          'user_index'];

                                                                  GetSubscribePostListAPI()
                                                                      .subscribePostList(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          userIndex:
                                                                              selectedUserIndex)
                                                                      .then(
                                                                          (value) {
                                                                    setState(
                                                                        () {
                                                                      currentPage2
                                                                          .clear();
                                                                      getSubscribePostListData =
                                                                          value
                                                                              .result;
                                                                      for (int i =
                                                                              0;
                                                                          i < value.result['list'].length;
                                                                          i++) {
                                                                        currentPage2
                                                                            .add(0);
                                                                      }
                                                                    });
                                                                  });
                                                                } else {
                                                                  selectedUserIndex =
                                                                      0;

                                                                  GetSubscribePostListAPI()
                                                                      .subscribePostList(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!)
                                                                      .then(
                                                                          (value) {
                                                                    setState(
                                                                        () {
                                                                      currentPage2
                                                                          .clear();
                                                                      getSubscribePostListData =
                                                                          value
                                                                              .result;
                                                                      for (int i =
                                                                              0;
                                                                          i < value.result['list'].length;
                                                                          i++) {
                                                                        currentPage2
                                                                            .add(0);
                                                                      }
                                                                    });
                                                                  });
                                                                }
                                                              });
                                                            },
                                                            child: Stack(
                                                              children: [
                                                                Container(
                                                                  margin: hor == 0
                                                                      ? const EdgeInsets
                                                                          .only(
                                                                          left:
                                                                              15.0,
                                                                          right:
                                                                              4.0)
                                                                      : const EdgeInsets
                                                                          .symmetric(
                                                                          horizontal:
                                                                              4.0),
                                                                  child: Column(
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .center,
                                                                    children: [
                                                                      Container(
                                                                        width:
                                                                            52.5,
                                                                        height:
                                                                            52.5,
                                                                        margin: const EdgeInsets
                                                                            .only(
                                                                            bottom:
                                                                                2.0),
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              ColorsConfig().userIconBackground(),
                                                                          border: selectedUserIndex == getSubscribePostListData['subscribe'][hor]['user_index']
                                                                              ? Border.all(
                                                                                  width: 2.0,
                                                                                  color: ColorsConfig().primary(),
                                                                                )
                                                                              : null,
                                                                          borderRadius:
                                                                              BorderRadius.circular(100.0),
                                                                          image:
                                                                              DecorationImage(
                                                                            image:
                                                                                NetworkImage(
                                                                              getSubscribePostListData['subscribe'][hor]['avatar_url'],
                                                                              scale: 4.5,
                                                                            ),
                                                                            filterQuality:
                                                                                FilterQuality.high,
                                                                            fit:
                                                                                BoxFit.none,
                                                                            alignment:
                                                                                const Alignment(0.0, -0.3),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      SizedBox(
                                                                        width:
                                                                            60.0,
                                                                        child:
                                                                            Center(
                                                                          child:
                                                                              CustomTextBuilder(
                                                                            text:
                                                                                getSubscribePostListData['subscribe'][hor]['user_nick'],
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                12.0.sp,
                                                                            maxLines:
                                                                                1,
                                                                            textOverflow:
                                                                                TextOverflow.ellipsis,
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                selectedUserIndex !=
                                                                            0 &&
                                                                        selectedUserIndex !=
                                                                            getSubscribePostListData['subscribe'][hor]['user_index']
                                                                    ? Container(
                                                                        width:
                                                                            60.5,
                                                                        height: MediaQuery.of(context)
                                                                            .size
                                                                            .height,
                                                                        color: ColorsConfig().subBackground1(
                                                                            opacity:
                                                                                0.5),
                                                                      )
                                                                    : Container(),
                                                              ],
                                                            ),
                                                          );
                                                        },
                                                      ),
                                                    ),
                                                    InkWell(
                                                      onTap: () {
                                                        Navigator.pushNamed(
                                                            context,
                                                            '/subscribe',
                                                            arguments: {
                                                              'tabIndex': 1,
                                                              'user_nickname':
                                                                  getProfileData[
                                                                      'nick'],
                                                            }).then(
                                                            (value) async {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          GetSubscribePostListAPI()
                                                              .subscribePostList(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!)
                                                              .then((value) {
                                                            setState(() {
                                                              currentPage2
                                                                  .clear();
                                                              getSubscribePostListData =
                                                                  value.result;
                                                              for (int i = 0;
                                                                  i <
                                                                      value
                                                                          .result[
                                                                              'list']
                                                                          .length;
                                                                  i++) {
                                                                currentPage2
                                                                    .add(0);
                                                              }
                                                            });
                                                          });
                                                        });
                                                      },
                                                      child: Container(
                                                        width: 73.0,
                                                        color: ColorsConfig()
                                                            .subBackground1(),
                                                        child: Center(
                                                          child:
                                                              CustomTextBuilder(
                                                            text: TextConstant
                                                                .allText,
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .primary(),
                                                            fontSize: 14.0.sp,
                                                            fontWeight:
                                                                FontWeight.w400,
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              Container(
                                                color: ColorsConfig()
                                                    .subBackground1(),
                                                margin:
                                                    const EdgeInsets.symmetric(
                                                        vertical: 8.0),
                                                child: Column(
                                                  children: [
                                                    // 유저 이미지, 닉네임, 날짜, 더보기 버튼
                                                    Padding(
                                                      padding: const EdgeInsets
                                                          .fromLTRB(20.0, 13.4,
                                                          20.0, 0.0),
                                                      child: Row(
                                                        mainAxisAlignment:
                                                            MainAxisAlignment
                                                                .spaceBetween,
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          InkWell(
                                                            onTap: () {
                                                              if (getSubscribePostListData[
                                                                          'list']
                                                                      [index]
                                                                  ['isMe']) {
                                                                Navigator.pushNamed(
                                                                    context,
                                                                    '/my_profile',
                                                                    arguments: {
                                                                      'onNavigator':
                                                                          true,
                                                                    });
                                                              } else {
                                                                Navigator.pushNamed(
                                                                    context,
                                                                    '/your_profile',
                                                                    arguments: {
                                                                      'user_index':
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'user_index'],
                                                                      'user_nickname':
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'nick'],
                                                                    }).then(
                                                                    (_) async {
                                                                  final _prefs =
                                                                      await SharedPreferences
                                                                          .getInstance();

                                                                  GetSubscribePostListAPI()
                                                                      .subscribePostList(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!)
                                                                      .then(
                                                                          (value) {
                                                                    setState(
                                                                        () {
                                                                      currentPage2
                                                                          .clear();
                                                                      getSubscribePostListData =
                                                                          value
                                                                              .result;
                                                                      for (int i =
                                                                              0;
                                                                          i < value.result['list'].length;
                                                                          i++) {
                                                                        currentPage2
                                                                            .add(0);
                                                                      }
                                                                    });
                                                                  });
                                                                });
                                                              }
                                                            },
                                                            child: Row(
                                                              children: [
                                                                // 이미지
                                                                Container(
                                                                  width: 42.0,
                                                                  height: 42.0,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: ColorsConfig()
                                                                        .userIconBackground(),
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            21.0),
                                                                    image:
                                                                        DecorationImage(
                                                                      image:
                                                                          NetworkImage(
                                                                        getSubscribePostListData['list'][index]
                                                                            [
                                                                            'avatar_url'],
                                                                        scale:
                                                                            5.5,
                                                                      ),
                                                                      filterQuality:
                                                                          FilterQuality
                                                                              .high,
                                                                      fit: BoxFit
                                                                          .none,
                                                                      alignment:
                                                                          const Alignment(
                                                                              0.0,
                                                                              -0.3),
                                                                    ),
                                                                  ),
                                                                ),
                                                                Column(
                                                                  crossAxisAlignment:
                                                                      CrossAxisAlignment
                                                                          .start,
                                                                  children: [
                                                                    SizedBox(
                                                                      width: MediaQuery.of(context)
                                                                              .size
                                                                              .width -
                                                                          82.0,
                                                                      child:
                                                                          Row(
                                                                        mainAxisAlignment:
                                                                            MainAxisAlignment.spaceBetween,
                                                                        children: [
                                                                          Row(
                                                                            children: [
                                                                              // 닉네임
                                                                              Container(
                                                                                margin: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                                child: CustomTextBuilder(
                                                                                  text: '${getSubscribePostListData['list'][index]['nick']}',
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 16.0.sp,
                                                                                  fontWeight: FontWeight.w700,
                                                                                ),
                                                                              ),
                                                                              // 날짜
                                                                              CustomTextBuilder(
                                                                                text: DateCalculatorWrapper().daysCalculator(getSubscribePostListData['list'][index]['date']),
                                                                                fontColor: ColorsConfig.defaultGray,
                                                                                fontSize: 14.0.sp,
                                                                                fontWeight: FontWeight.w400,
                                                                                height: 1.8,
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          LabelCategoryWidgetBuilder(
                                                                              data: getSubscribePostListData['list'][index]['type']),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    // 선물받은 뱃지영역
                                                                    getSubscribePostListData['list'][index]['gift']
                                                                            .isNotEmpty
                                                                        ? InkWell(
                                                                            onTap:
                                                                                () async {
                                                                              final _prefs = await SharedPreferences.getInstance();

                                                                              GetGiftHistoryListDataAPI().giftHistory(accesToken: _prefs.getString('AccessToken')!, postIndex: getSubscribePostListData['list'][index]['post_index']).then((history) {
                                                                                showModalBottomSheet(
                                                                                    context: context,
                                                                                    backgroundColor: ColorsConfig().subBackground1(),
                                                                                    shape: const RoundedRectangleBorder(
                                                                                      borderRadius: BorderRadius.only(
                                                                                        topLeft: Radius.circular(12.0),
                                                                                        topRight: Radius.circular(12.0),
                                                                                      ),
                                                                                    ),
                                                                                    builder: (BuildContext context) {
                                                                                      return SafeArea(
                                                                                        child: Container(
                                                                                          decoration: const BoxDecoration(
                                                                                            borderRadius: BorderRadius.only(
                                                                                              topLeft: Radius.circular(12.0),
                                                                                              topRight: Radius.circular(12.0),
                                                                                            ),
                                                                                          ),
                                                                                          child: Column(
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Container(
                                                                                                width: 50.0,
                                                                                                height: 4.0,
                                                                                                margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                                decoration: BoxDecoration(
                                                                                                  color: ColorsConfig().textBlack2(),
                                                                                                  borderRadius: BorderRadius.circular(100.0),
                                                                                                ),
                                                                                              ),
                                                                                              Center(
                                                                                                child: Container(
                                                                                                  width: MediaQuery.of(context).size.width,
                                                                                                  padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                                  decoration: BoxDecoration(
                                                                                                    border: Border(
                                                                                                      bottom: BorderSide(
                                                                                                        width: 0.5,
                                                                                                        color: ColorsConfig().border1(),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ),
                                                                                                  child: CustomTextBuilder(
                                                                                                    text: TextConstant.giftHistoryText,
                                                                                                    fontColor: ColorsConfig().textWhite1(),
                                                                                                    fontSize: 18.0.sp,
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                  ),
                                                                                                ),
                                                                                              ),
                                                                                              Expanded(
                                                                                                child: ListView.builder(
                                                                                                    itemCount: history.result['users'].length,
                                                                                                    itemBuilder: (context, historyIndex) {
                                                                                                      return Container(
                                                                                                        width: MediaQuery.of(context).size.width,
                                                                                                        height: 65.0,
                                                                                                        padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                                        decoration: BoxDecoration(
                                                                                                          border: Border(
                                                                                                            bottom: BorderSide(
                                                                                                              width: 0.5,
                                                                                                              color: ColorsConfig().border1(),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ),
                                                                                                        child: Row(
                                                                                                          children: [
                                                                                                            Expanded(
                                                                                                              child: Row(
                                                                                                                children: [
                                                                                                                  // 아바타 이미지
                                                                                                                  Container(
                                                                                                                    width: 35.0,
                                                                                                                    height: 35.0,
                                                                                                                    decoration: BoxDecoration(
                                                                                                                      color: ColorsConfig().userIconBackground(),
                                                                                                                      borderRadius: BorderRadius.circular(17.5),
                                                                                                                      image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                                          ? DecorationImage(
                                                                                                                              image: NetworkImage(
                                                                                                                                history.result['users'][historyIndex]['avatar'],
                                                                                                                                scale: 7.0,
                                                                                                                              ),
                                                                                                                              filterQuality: FilterQuality.high,
                                                                                                                              fit: BoxFit.none,
                                                                                                                              alignment: const Alignment(0.0, -0.3),
                                                                                                                            )
                                                                                                                          : null,
                                                                                                                    ),
                                                                                                                  ),
                                                                                                                  const SizedBox(width: 15.0),
                                                                                                                  CustomTextBuilder(
                                                                                                                    text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                                    fontColor: ColorsConfig().textWhite1(),
                                                                                                                    fontSize: 16.0.sp,
                                                                                                                    fontWeight: FontWeight.w400,
                                                                                                                  ),
                                                                                                                ],
                                                                                                              ),
                                                                                                            ),
                                                                                                            Expanded(
                                                                                                              child: ListView.builder(
                                                                                                                scrollDirection: Axis.horizontal,
                                                                                                                itemCount: history.result['gifts'].length,
                                                                                                                itemBuilder: (context, giftHistory) {
                                                                                                                  if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                                    return Container();
                                                                                                                  }
                                                                                                                  return Row(
                                                                                                                    children: [
                                                                                                                      Image(
                                                                                                                        image: NetworkImage(
                                                                                                                          history.result['gifts'][giftHistory]['image'],
                                                                                                                        ),
                                                                                                                      ),
                                                                                                                      const SizedBox(width: 4.0),
                                                                                                                      CustomTextBuilder(
                                                                                                                        text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                                        fontColor: ColorsConfig().textBlack2(),
                                                                                                                        fontSize: 12.0.sp,
                                                                                                                        fontWeight: FontWeight.w700,
                                                                                                                      ),
                                                                                                                      const SizedBox(width: 4.0),
                                                                                                                    ],
                                                                                                                  );
                                                                                                                },
                                                                                                              ),
                                                                                                            ),
                                                                                                          ],
                                                                                                        ),
                                                                                                      );
                                                                                                    }),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                      );
                                                                                    });
                                                                              });
                                                                            },
                                                                            child: !getSubscribeMoreBtnState[index]
                                                                                ? Container(
                                                                                    margin: const EdgeInsets.only(left: 4.0, top: 5.0),
                                                                                    child: getSubscribePostListData['list'][index]['gift'].isNotEmpty
                                                                                        ? SingleChildScrollView(
                                                                                            physics: const NeverScrollableScrollPhysics(),
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Row(
                                                                                              children: [
                                                                                                Row(
                                                                                                  children: List.generate(getSubscribePostListData['list'][index]['gift'].length > 4 ? 4 : getSubscribePostListData['list'][index]['gift'].length, (giftIndex) {
                                                                                                    return Container(
                                                                                                      margin: const EdgeInsets.only(right: 8.0),
                                                                                                      child: Row(
                                                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                                        children: [
                                                                                                          Container(
                                                                                                            width: 24.0,
                                                                                                            height: 24.0,
                                                                                                            decoration: BoxDecoration(
                                                                                                              borderRadius: BorderRadius.circular(9.0),
                                                                                                            ),
                                                                                                            child: Image(
                                                                                                              image: NetworkImage(
                                                                                                                getSubscribePostListData['list'][index]['gift'][giftIndex]['image'],
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                          CustomTextBuilder(
                                                                                                            text: '${getSubscribePostListData['list'][index]['gift'][giftIndex]['gift_count']}',
                                                                                                            fontColor: ColorsConfig.defaultGray,
                                                                                                            fontSize: 12.0.sp,
                                                                                                            fontWeight: FontWeight.w700,
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    );
                                                                                                  }),
                                                                                                ),
                                                                                                !getSubscribeMoreBtnState[index] && getSubscribePostListData['list'][index]['gift'].length > 4
                                                                                                    ? InkWell(
                                                                                                        onTap: () {
                                                                                                          setState(() {
                                                                                                            getSubscribeMoreBtnState[index] = true;
                                                                                                          });
                                                                                                        },
                                                                                                        child: Padding(
                                                                                                          padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.moreReadText,
                                                                                                            fontColor: ColorsConfig().textBlack2(),
                                                                                                            fontSize: 14.0.sp,
                                                                                                            fontWeight: FontWeight.w400,
                                                                                                          ),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(),
                                                                                              ],
                                                                                            ),
                                                                                          )
                                                                                        : Container(),
                                                                                  )
                                                                                : Container(
                                                                                    margin: const EdgeInsets.only(left: 4.0, top: 5.0),
                                                                                    child: getSubscribePostListData['list'][index]['gift'].isNotEmpty
                                                                                        ? Wrap(
                                                                                            children: List.generate(getSubscribePostListData['list'][index]['gift'].length, (giftIndex) {
                                                                                              return Container(
                                                                                                margin: const EdgeInsets.only(right: 8.0),
                                                                                                child: Row(
                                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                                  mainAxisSize: MainAxisSize.min,
                                                                                                  children: [
                                                                                                    Container(
                                                                                                      width: 24.0,
                                                                                                      height: 24.0,
                                                                                                      decoration: BoxDecoration(
                                                                                                        borderRadius: BorderRadius.circular(9.0),
                                                                                                      ),
                                                                                                      child: Image(
                                                                                                        image: NetworkImage(
                                                                                                          getSubscribePostListData['list'][index]['gift'][giftIndex]['image'],
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                    CustomTextBuilder(
                                                                                                      text: '${getSubscribePostListData['list'][index]['gift'][giftIndex]['gift_count']}',
                                                                                                      fontColor: ColorsConfig.defaultGray,
                                                                                                      fontSize: 12.0.sp,
                                                                                                      fontWeight: FontWeight.w700,
                                                                                                    ),
                                                                                                  ],
                                                                                                ),
                                                                                              );
                                                                                            }),
                                                                                          )
                                                                                        : Container(),
                                                                                  ),
                                                                          )
                                                                        : Container(),
                                                                  ],
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    // 내용 부분
                                                    InkWell(
                                                      onTap: () {
                                                        if (getSubscribePostListData[
                                                                        'list']
                                                                    [index]
                                                                ['type'] ==
                                                            4) {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  NewsDetailScreen(
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                                postType: getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                              ),
                                                            ),
                                                          ).then(
                                                              (returns) async {
                                                            if (returns !=
                                                                null) {
                                                              if (returns[
                                                                  'ret']) {
                                                                setState(() {
                                                                  postListData.remove(
                                                                      postListData[
                                                                          index]);
                                                                  currentPage
                                                                      .removeAt(
                                                                          index);
                                                                });
                                                              }
                                                            } else {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              PostDetailDataAPI()
                                                                  .detail(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index] =
                                                                      value
                                                                          .result;
                                                                });
                                                              });
                                                            }
                                                          });
                                                        } else if (getSubscribePostListData[
                                                                        'list']
                                                                    [index]
                                                                ['type'] ==
                                                            5) {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  VoteDetailScreen(
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                                postType: getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                              ),
                                                            ),
                                                          ).then(
                                                              (returns) async {
                                                            if (returns !=
                                                                null) {
                                                              if (returns[
                                                                  'ret']) {
                                                                setState(() {
                                                                  postListData.remove(
                                                                      postListData[
                                                                          index]);
                                                                  currentPage2
                                                                      .removeAt(
                                                                          index);
                                                                });
                                                              }
                                                            } else {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              PostDetailDataAPI()
                                                                  .detail(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index] =
                                                                      value
                                                                          .result;
                                                                });
                                                              });
                                                            }
                                                          });
                                                        } else {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  PostingDetailScreen(
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                                postType: getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                              ),
                                                            ),
                                                          ).then(
                                                              (returns) async {
                                                            if (returns !=
                                                                null) {
                                                              if (returns[
                                                                  'ret']) {
                                                                setState(() {
                                                                  postListData.remove(
                                                                      postListData[
                                                                          index]);
                                                                  currentPage2
                                                                      .removeAt(
                                                                          index);
                                                                });
                                                              }
                                                            } else {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              PostDetailDataAPI()
                                                                  .detail(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index] =
                                                                      value
                                                                          .result;
                                                                });
                                                              });
                                                            }
                                                          });
                                                        }
                                                      },
                                                      child:
                                                          getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'type'] ==
                                                                  4
                                                              ? Container(
                                                                  margin: const EdgeInsets
                                                                      .symmetric(
                                                                      vertical:
                                                                          12.0),
                                                                  padding: const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                          20.0),
                                                                  child: Row(
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .spaceBetween,
                                                                    children: [
                                                                      Column(
                                                                        children: [
                                                                          Container(
                                                                            width:
                                                                                (MediaQuery.of(context).size.width * 0.8) - 80.0,
                                                                            margin:
                                                                                const EdgeInsets.only(bottom: 8.0),
                                                                            child:
                                                                                CustomTextBuilder(
                                                                              text: '${getSubscribePostListData['list'][index]['title']}',
                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                              fontSize: 19.0.sp,
                                                                              fontWeight: FontWeight.w600,
                                                                              maxLines: 2,
                                                                              textOverflow: TextOverflow.ellipsis,
                                                                            ),
                                                                          ),
                                                                          SizedBox(
                                                                            width:
                                                                                (MediaQuery.of(context).size.width * 0.8) - 80.0,
                                                                            child:
                                                                                CustomTextBuilder(
                                                                              text: '${getSubscribePostListData['list'][index]['description']}',
                                                                              fontColor: ColorsConfig().textBlack1(),
                                                                              fontSize: 16.0.sp,
                                                                              fontWeight: FontWeight.w400,
                                                                              maxLines: 1,
                                                                              textOverflow: TextOverflow.ellipsis,
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      InkWell(
                                                                        onTap:
                                                                            () {
                                                                          UrlLauncherBuilder().launchURL(getSubscribePostListData['list'][index]
                                                                              [
                                                                              'link']);
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          width:
                                                                              (MediaQuery.of(context).size.width * 0.3) - 23.0,
                                                                          height:
                                                                              80.0,
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            color:
                                                                                ColorsConfig().textBlack2(),
                                                                            border:
                                                                                Border.all(
                                                                              width: 0.5,
                                                                              color: ColorsConfig().primary(),
                                                                            ),
                                                                            image:
                                                                                DecorationImage(
                                                                              image: NetworkImage(
                                                                                getSubscribePostListData['list'][index]['news_image'],
                                                                              ),
                                                                              fit: BoxFit.cover,
                                                                              filterQuality: FilterQuality.high,
                                                                            ),
                                                                          ),
                                                                          child:
                                                                              Stack(
                                                                            children: [
                                                                              Positioned(
                                                                                right: 3.0,
                                                                                bottom: 3.0,
                                                                                child: Container(
                                                                                  width: 18.0,
                                                                                  height: 18.0,
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig().linkIconBackground(),
                                                                                    borderRadius: BorderRadius.circular(9.0),
                                                                                  ),
                                                                                  child: Center(
                                                                                    child: SvgAssets(
                                                                                      image: 'assets/icon/link.svg',
                                                                                      color: ColorsConfig().primary(),
                                                                                      width: 12.0,
                                                                                      height: 12.0,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                )
                                                              : getSubscribePostListData['list'][index]['type'] == 1 ||
                                                                      getSubscribePostListData['list'][index]
                                                                              [
                                                                              'type'] ==
                                                                          2 ||
                                                                      getSubscribePostListData['list'][index]
                                                                              [
                                                                              'type'] ==
                                                                          3
                                                                  ? Column(
                                                                      mainAxisSize:
                                                                          MainAxisSize
                                                                              .min,
                                                                      crossAxisAlignment:
                                                                          CrossAxisAlignment
                                                                              .start,
                                                                      mainAxisAlignment:
                                                                          MainAxisAlignment
                                                                              .start,
                                                                      children: [
                                                                        getSubscribePostListData['list'][index]['category'] != null &&
                                                                                getSubscribePostListData['list'][index]['category'] == 'i'
                                                                            ? Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                margin: const EdgeInsets.only(top: 12.0),
                                                                                child: getSubscribePostListData['list'][index]['image'].length > 1
                                                                                    ? ConstrainedBox(
                                                                                        constraints: BoxConstraints(
                                                                                          maxHeight: MediaQuery.of(context).size.width * 1.33,
                                                                                        ),
                                                                                        child: PageView.builder(
                                                                                          controller: _pageController,
                                                                                          itemCount: getSubscribePostListData['list'][index]['image'].length,
                                                                                          onPageChanged: (int page) {
                                                                                            setState(() {
                                                                                              currentPage2[index] = page;
                                                                                            });
                                                                                          },
                                                                                          itemBuilder: (context, imageIndex) {
                                                                                            return Image(
                                                                                                image: NetworkImage(
                                                                                                  getSubscribePostListData['list'][index]['image'][imageIndex],
                                                                                                ),
                                                                                                fit: BoxFit.fitWidth,
                                                                                                filterQuality: FilterQuality.high,
                                                                                                alignment: Alignment.center);
                                                                                          },
                                                                                        ),
                                                                                      )
                                                                                    : SizedBox(
                                                                                        height: MediaQuery.of(context).size.width,
                                                                                        child: Image(
                                                                                            image: NetworkImage(
                                                                                              getSubscribePostListData['list'][index]['image'][0],
                                                                                            ),
                                                                                            fit: BoxFit.cover,
                                                                                            filterQuality: FilterQuality.high,
                                                                                            alignment: Alignment.center),
                                                                                      ),
                                                                              )
                                                                            : Container(),
                                                                        getSubscribePostListData['list'][index]['category'] != null &&
                                                                                getSubscribePostListData['list'][index]['category'] == 'i' &&
                                                                                getSubscribePostListData['list'][index]['image'].length > 1
                                                                            ? Container(
                                                                                margin: const EdgeInsets.only(top: 12.0),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  children: List.generate(getSubscribePostListData['list'][index]['image'].length, (dots) {
                                                                                    return Container(
                                                                                      width: 8.0,
                                                                                      height: 8.0,
                                                                                      margin: dots == getSubscribePostListData['list'][index]['image'].last ? EdgeInsets.zero : const EdgeInsets.only(right: 10.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: currentPage2[index] == dots ? ColorsConfig().primary() : ColorsConfig.defaultToast,
                                                                                        borderRadius: BorderRadius.circular(4.0),
                                                                                      ),
                                                                                    );
                                                                                  }),
                                                                                ),
                                                                              )
                                                                            : Container(),
                                                                        getSubscribePostListData['list'][index]['category'] != null &&
                                                                                getSubscribePostListData['list'][index]['category'] == 'g'
                                                                            ? Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                margin: const EdgeInsets.only(top: 12.0),
                                                                                child: Image(
                                                                                  image: NetworkImage(
                                                                                    getSubscribePostListData['list'][index]['sub_link'],
                                                                                  ),
                                                                                  fit: BoxFit.contain,
                                                                                  filterQuality: FilterQuality.high,
                                                                                ),
                                                                              )
                                                                            : Container(),
                                                                        getSubscribePostListData['list'][index]['category'] != null &&
                                                                                getSubscribePostListData['list'][index]['category'] == 'y'
                                                                            ? Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                margin: const EdgeInsets.only(top: 12.0),
                                                                                child: YoutubePlayerIFrame(
                                                                                  aspectRatio: 16 / 9,
                                                                                  controller: YoutubePlayerController(
                                                                                    initialVideoId: getSubscribePostListData['list'][index]['sub_link'].startsWith('https://youtu.be/')
                                                                                        ? getSubscribePostListData['list'][index]['sub_link'].toString().split('https://youtu.be/')[1]
                                                                                        : getSubscribePostListData['list'][index]['sub_link'].startsWith('https://youtube.com/shorts/')
                                                                                            ? getSubscribePostListData['list'][index]['sub_link'].toString().split('shorts/')[1].split('?')[0]
                                                                                            : getSubscribePostListData['list'][index]['sub_link'].toString().split('watch?v=')[1],
                                                                                    params: const YoutubePlayerParams(
                                                                                      autoPlay: false,
                                                                                      showControls: true,
                                                                                      showFullscreenButton: true,
                                                                                      mute: true,
                                                                                    ),
                                                                                  ),
                                                                                ))
                                                                            : Container(),
                                                                        Container(
                                                                          width: MediaQuery.of(context)
                                                                              .size
                                                                              .width,
                                                                          margin: const EdgeInsets
                                                                              .symmetric(
                                                                              vertical: 12.0),
                                                                          padding: const EdgeInsets
                                                                              .symmetric(
                                                                              horizontal: 20.0),
                                                                          child:
                                                                              CustomTextBuilder(
                                                                            text:
                                                                                '${getSubscribePostListData['list'][index]['title']}',
                                                                            fontColor:
                                                                                ColorsConfig().textWhite1(),
                                                                            fontSize:
                                                                                20.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w700,
                                                                          ),
                                                                        ),
                                                                        Container(
                                                                          width: MediaQuery.of(context)
                                                                              .size
                                                                              .width,
                                                                          margin: const EdgeInsets
                                                                              .only(
                                                                              top: 8.0,
                                                                              bottom: 16.0),
                                                                          padding: const EdgeInsets
                                                                              .symmetric(
                                                                              horizontal: 20.0),
                                                                          child:
                                                                              CustomTextBuilder(
                                                                            text:
                                                                                getSubscribePostListData['list'][index]['description'],
                                                                            fontColor:
                                                                                ColorsConfig().textBlack1(),
                                                                            fontSize:
                                                                                18.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w400,
                                                                            maxLines:
                                                                                5,
                                                                            textOverflow:
                                                                                TextOverflow.ellipsis,
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    )
                                                                  : getSubscribePostListData['list'][index]
                                                                              [
                                                                              'type'] ==
                                                                          5
                                                                      ? Padding(
                                                                          padding: const EdgeInsets
                                                                              .symmetric(
                                                                              horizontal: 20.0),
                                                                          child:
                                                                              Column(
                                                                            crossAxisAlignment:
                                                                                CrossAxisAlignment.start,
                                                                            children: [
                                                                              Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                margin: const EdgeInsets.symmetric(vertical: 12.0),
                                                                                child: CustomTextBuilder(
                                                                                  text: getSubscribePostListData['list'][index]['title'],
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 19.0.sp,
                                                                                  fontWeight: FontWeight.w700,
                                                                                ),
                                                                              ),
                                                                              Column(
                                                                                children: List.generate(getSubscribePostListData['list'][index]['vote'].length, (votes) {
                                                                                  return InkWell(
                                                                                    onTap: () async {
                                                                                      final _prefs = await SharedPreferences.getInstance();

                                                                                      if (DateTime.parse(getSubscribePostListData['list'][index]['date']).millisecondsSinceEpoch > DateTime.now().millisecondsSinceEpoch) {
                                                                                        if (getSubscribePostListData['list'][index]['selected_vote_index'] == null) {
                                                                                          SelectVoteAPI().addVote(accesToken: _prefs.getString('AccessToken')!, postIndex: getSubscribePostListData['list'][index]['post_index'], voteIndex: getSubscribePostListData['list'][index]['vote'][votes]['vote_index']).then((_v) {
                                                                                            setState(() {
                                                                                              getSubscribePostListData['list'][index]['selected_vote_index'] = getSubscribePostListData['list'][index]['vote'][votes]['vote_index'];
                                                                                              getSubscribePostListData['list'][index]['vote'][votes]['cnt'] = getSubscribePostListData['list'][index]['vote'][votes]['cnt'] + 1;
                                                                                              getSubscribePostListData['list'][index]['vote_count'] = getSubscribePostListData['list'][index]['vote_count'] + 1;
                                                                                            });
                                                                                          });
                                                                                        } else if (getSubscribePostListData['list'][index]['selected_vote_index'] != null && getSubscribePostListData['list'][index]['selected_vote_index'] == getSubscribePostListData['list'][index]['vote'][votes]['vote_index']) {
                                                                                          SelectedVoteCancleAPI().cancel(accesToken: _prefs.getString('AccessToken')!, postIndex: getSubscribePostListData['list'][index]['post_index'], voteIndex: getSubscribePostListData['list'][index]['vote'][votes]['vote_index']).then((_v) {
                                                                                            setState(() {
                                                                                              getSubscribePostListData['list'][index]['selected_vote_index'] = null;
                                                                                              getSubscribePostListData['list'][index]['vote'][votes]['cnt'] = getSubscribePostListData['list'][index]['vote'][votes]['cnt'] - 1;
                                                                                              getSubscribePostListData['list'][index]['vote_count'] = getSubscribePostListData['list'][index]['vote_count'] - 1;
                                                                                            });
                                                                                          });
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    child: Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      height: 36.0,
                                                                                      margin: const EdgeInsets.symmetric(vertical: 4.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig.transparent,
                                                                                        border: Border.all(
                                                                                          width: 0.5,
                                                                                          color: getSubscribePostListData['list'][index]['selected_vote_index'] == null || getSubscribePostListData['list'][index]['selected_vote_index'] != getSubscribePostListData['list'][index]['vote'][votes]['vote_index'] ? ColorsConfig().border1() : ColorsConfig().primary(),
                                                                                        ),
                                                                                        borderRadius: BorderRadius.circular(4.0),
                                                                                      ),
                                                                                      child: Stack(
                                                                                        children: [
                                                                                          getSubscribePostListData['list'][index]['vote_count'] > 0
                                                                                              ? LinearPercentIndicator(
                                                                                                  percent: getSubscribePostListData['list'][index]['vote'][votes]['cnt'] / getSubscribePostListData['list'][index]['vote_count'],
                                                                                                  lineHeight: 100,
                                                                                                  padding: EdgeInsets.zero,
                                                                                                  barRadius: const Radius.circular(4.0),
                                                                                                  animation: true,
                                                                                                  backgroundColor: ColorsConfig.transparent,
                                                                                                  progressColor: getSubscribePostListData['list'][index]['selected_vote_index'] == null || getSubscribePostListData['list'][index]['selected_vote_index'] != getSubscribePostListData['list'][index]['vote'][votes]['vote_index'] ? ColorsConfig().graphColor2() : ColorsConfig().graphColor1(),
                                                                                                )
                                                                                              : Container(),
                                                                                          Padding(
                                                                                            padding: const EdgeInsets.all(8.0),
                                                                                            child: Row(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              children: [
                                                                                                CustomTextBuilder(
                                                                                                  text: getSubscribePostListData['list'][index]['vote'][votes]['vote_title'],
                                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                                  fontSize: 16.0.sp,
                                                                                                  fontWeight: FontWeight.w400,
                                                                                                ),
                                                                                                CustomTextBuilder(
                                                                                                  text: getSubscribePostListData['list'][index]['selected_vote_index'] != null || DateTime.parse(getSubscribePostListData['list'][index]['date']).millisecondsSinceEpoch < DateTime.now().millisecondsSinceEpoch
                                                                                                      ? getSubscribePostListData['list'][index]['vote_count'] > 0
                                                                                                          ? '${(getSubscribePostListData['list'][index]['vote'][votes]['cnt'] / getSubscribePostListData['list'][index]['vote_count'] * 100).toStringAsFixed(0)}%'
                                                                                                          : '0%'
                                                                                                      : '',
                                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                                  fontSize: 16.0.sp,
                                                                                                  fontWeight: FontWeight.w400,
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                }),
                                                                              ),
                                                                              Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                margin: const EdgeInsets.only(top: 5.0, bottom: 11.0),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  children: [
                                                                                    CustomTextBuilder(
                                                                                      text: '총 ${getSubscribePostListData['list'][index]['vote_count']}명 투표',
                                                                                      fontColor: ColorsConfig().textBlack2(),
                                                                                      fontSize: 12.0.sp,
                                                                                      fontWeight: FontWeight.w400,
                                                                                    ),
                                                                                    CustomTextBuilder(
                                                                                      text: DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date']) >= 0 && DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date']) > 0
                                                                                          ? '${DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date'])}시간 남음'
                                                                                          : DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date']) >= 0 && DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date']) <= 0 && DateCalculatorWrapper().expiredMinutesForDate(getSubscribePostListData['list'][index]['vote_end_date']) > 0
                                                                                              ? '${DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date'])}시간 ${DateCalculatorWrapper().expiredMinutesForDate(getSubscribePostListData['list'][index]['vote_end_date'])}분 남음'
                                                                                              : '투표가 마감되었습니다.',
                                                                                      fontColor: ColorsConfig().textBlack2(),
                                                                                      fontSize: 12.0.sp,
                                                                                      fontWeight: FontWeight.w400,
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        )
                                                                      : Container(),
                                                    ),
                                                    // 좋아요, 댓글, 선물, 공유, 더보기 버튼
                                                    Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        // 좋아요
                                                        MaterialButton(
                                                          onPressed: () async {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            if (!getSubscribePostListData[
                                                                        'list']
                                                                    [index]
                                                                ['isLike']) {
                                                              AddLikeSenderAPI()
                                                                  .add(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then((res) {
                                                                if (res.result[
                                                                        'status'] ==
                                                                    10800) {
                                                                  setState(() {
                                                                    getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'like']++;
                                                                    getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'isLike'] = true;
                                                                  });
                                                                }
                                                              });
                                                            } else {
                                                              CancelLikeSenderAPI()
                                                                  .cancel(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then((res) {
                                                                if (res.result[
                                                                        'status'] ==
                                                                    10805) {
                                                                  setState(() {
                                                                    getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'like']--;
                                                                    getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'isLike'] = false;
                                                                  });
                                                                }
                                                              });
                                                            }
                                                          },
                                                          child: Row(
                                                            children: [
                                                              SvgAssets(
                                                                image:
                                                                    'assets/icon/like.svg',
                                                                color: getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'isLike']
                                                                    ? ColorsConfig()
                                                                        .primary()
                                                                    : ColorsConfig()
                                                                        .textBlack1(),
                                                                width: 18.0,
                                                                height: 18.0,
                                                              ),
                                                              const SizedBox(
                                                                  width: 10.0),
                                                              CustomTextBuilder(
                                                                text: numberFormat.format(getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'like'] +
                                                                    addLikeCount2),
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textBlack1(),
                                                                fontSize:
                                                                    13.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w600,
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        // 댓글
                                                        MaterialButton(
                                                          onPressed: () {
                                                            if (getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'] ==
                                                                4) {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          NewsDetailScreen(
                                                                    postIndex: getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'post_index'],
                                                                    postType: getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'type'],
                                                                  ),
                                                                ),
                                                              ).then(
                                                                  (returns) async {
                                                                if (returns !=
                                                                    null) {
                                                                  if (returns[
                                                                      'ret']) {
                                                                    setState(
                                                                        () {
                                                                      getSubscribePostListData[
                                                                              'list']
                                                                          .remove(getSubscribePostListData['list']
                                                                              [
                                                                              index]);
                                                                      currentPage2
                                                                          .removeAt(
                                                                              index);
                                                                    });
                                                                  }
                                                                } else {
                                                                  final _prefs =
                                                                      await SharedPreferences
                                                                          .getInstance();

                                                                  PostDetailDataAPI()
                                                                      .detail(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                      .then(
                                                                          (value) {
                                                                    setState(
                                                                        () {
                                                                      getSubscribePostListData['list']
                                                                              [
                                                                              index] =
                                                                          value
                                                                              .result;
                                                                    });
                                                                  });
                                                                }
                                                              });
                                                            } else if (getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'] ==
                                                                5) {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          VoteDetailScreen(
                                                                    postIndex: getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'post_index'],
                                                                    postType: getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'type'],
                                                                  ),
                                                                ),
                                                              ).then(
                                                                  (returns) async {
                                                                if (returns !=
                                                                    null) {
                                                                  if (returns[
                                                                      'ret']) {
                                                                    setState(
                                                                        () {
                                                                      getSubscribePostListData[
                                                                              'list']
                                                                          .remove(getSubscribePostListData['list']
                                                                              [
                                                                              index]);
                                                                      currentPage2
                                                                          .removeAt(
                                                                              index);
                                                                    });
                                                                  }
                                                                } else {
                                                                  final _prefs =
                                                                      await SharedPreferences
                                                                          .getInstance();

                                                                  PostDetailDataAPI()
                                                                      .detail(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                      .then(
                                                                          (value) {
                                                                    setState(
                                                                        () {
                                                                      getSubscribePostListData['list']
                                                                              [
                                                                              index] =
                                                                          value
                                                                              .result;
                                                                    });
                                                                  });
                                                                }
                                                              });
                                                            } else {
                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                  builder:
                                                                      (context) =>
                                                                          PostingDetailScreen(
                                                                    postIndex: getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'post_index'],
                                                                    postType: getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'type'],
                                                                  ),
                                                                ),
                                                              ).then(
                                                                  (returns) async {
                                                                if (returns !=
                                                                    null) {
                                                                  if (returns[
                                                                      'ret']) {
                                                                    setState(
                                                                        () {
                                                                      getSubscribePostListData[
                                                                              'list']
                                                                          .remove(getSubscribePostListData['list']
                                                                              [
                                                                              index]);
                                                                      currentPage2
                                                                          .removeAt(
                                                                              index);
                                                                    });
                                                                  }
                                                                } else {
                                                                  final _prefs =
                                                                      await SharedPreferences
                                                                          .getInstance();

                                                                  PostDetailDataAPI()
                                                                      .detail(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                      .then(
                                                                          (value) {
                                                                    setState(
                                                                        () {
                                                                      getSubscribePostListData['list']
                                                                              [
                                                                              index] =
                                                                          value
                                                                              .result;
                                                                    });
                                                                  });
                                                                }
                                                              });
                                                            }
                                                          },
                                                          child: Row(
                                                            children: [
                                                              SvgAssets(
                                                                image:
                                                                    'assets/icon/reply.svg',
                                                                color: ColorsConfig()
                                                                    .textBlack1(),
                                                                width: 18.0,
                                                                height: 18.0,
                                                              ),
                                                              const SizedBox(
                                                                  width: 10.0),
                                                              CustomTextBuilder(
                                                                text: numberFormat.format(
                                                                    getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'reply']),
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textBlack1(),
                                                                fontSize:
                                                                    13.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w600,
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        // 선물
                                                        MaterialButton(
                                                          onPressed: () async {
                                                            final _prefs =
                                                                await SharedPreferences
                                                                    .getInstance();

                                                            GetGiftListDataAPI()
                                                                .gift(
                                                                    accesToken:
                                                                        _prefs.getString(
                                                                            'AccessToken')!)
                                                                .then((gifts) {
                                                              bool _hasClick =
                                                                  false;

                                                              showModalBottomSheet(
                                                                  context:
                                                                      context,
                                                                  backgroundColor:
                                                                      ColorsConfig()
                                                                          .subBackground1(),
                                                                  isScrollControlled:
                                                                      true,
                                                                  shape:
                                                                      const RoundedRectangleBorder(
                                                                    borderRadius:
                                                                        BorderRadius
                                                                            .only(
                                                                      topLeft: Radius
                                                                          .circular(
                                                                              12.0),
                                                                      topRight:
                                                                          Radius.circular(
                                                                              12.0),
                                                                    ),
                                                                  ),
                                                                  builder:
                                                                      (BuildContext
                                                                          context) {
                                                                    int _giftTabIndex =
                                                                        0;

                                                                    List<dynamic>
                                                                        _trophy =
                                                                        [];
                                                                    List<dynamic>
                                                                        _reaction =
                                                                        [];
                                                                    List<dynamic>
                                                                        _neckTrophy =
                                                                        [];

                                                                    Map<String,
                                                                            dynamic>
                                                                        _selectedGift =
                                                                        {};

                                                                    var _giftTabController =
                                                                        TabController(
                                                                      length: 4,
                                                                      vsync:
                                                                          this,
                                                                    );
                                                                    _giftTabController
                                                                        .addListener(
                                                                            () {
                                                                      if (_giftTabController
                                                                              .indexIsChanging ||
                                                                          _giftTabController.index !=
                                                                              _giftTabIndex) {
                                                                        setState(
                                                                            () {
                                                                          _giftTabIndex =
                                                                              _giftTabController.index;
                                                                        });
                                                                      }
                                                                    });

                                                                    for (int i =
                                                                            0;
                                                                        i < gifts.result.length;
                                                                        i++) {
                                                                      if (gifts.result[i]
                                                                              [
                                                                              'item_type'] ==
                                                                          0) {
                                                                        _trophy.add(
                                                                            gifts.result[i]);
                                                                      } else if (gifts.result[i]
                                                                              [
                                                                              'item_type'] ==
                                                                          1) {
                                                                        _reaction
                                                                            .add(gifts.result[i]);
                                                                      } else if (gifts.result[i]
                                                                              [
                                                                              'item_type'] ==
                                                                          2) {
                                                                        _neckTrophy
                                                                            .add(gifts.result[i]);
                                                                      }
                                                                    }

                                                                    return StatefulBuilder(
                                                                      builder:
                                                                          (context,
                                                                              state) {
                                                                        return Container(
                                                                          height: _hasClick
                                                                              ? MediaQuery.of(context).size.height / 1.72
                                                                              : MediaQuery.of(context).size.height / 2,
                                                                          decoration:
                                                                              const BoxDecoration(
                                                                            borderRadius:
                                                                                BorderRadius.only(
                                                                              topLeft: Radius.circular(12.0),
                                                                              topRight: Radius.circular(12.0),
                                                                            ),
                                                                          ),
                                                                          child:
                                                                              Column(
                                                                            children: [
                                                                              Container(
                                                                                width: 50.0,
                                                                                height: 4.0,
                                                                                margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                decoration: BoxDecoration(
                                                                                  color: ColorsConfig().textBlack2(),
                                                                                  borderRadius: BorderRadius.circular(100.0),
                                                                                ),
                                                                              ),
                                                                              // 선물하기 타이틀
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                children: [
                                                                                  Container(
                                                                                    padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 10.0),
                                                                                    alignment: Alignment.centerLeft,
                                                                                    child: CustomTextBuilder(
                                                                                      text: TextConstant.sendGiftText,
                                                                                      fontColor: ColorsConfig().textWhite1(),
                                                                                      fontSize: 22.0.sp,
                                                                                      fontWeight: FontWeight.w700,
                                                                                    ),
                                                                                  ),
                                                                                  Container(
                                                                                    margin: const EdgeInsets.only(right: 15.0),
                                                                                    child: const HoldingBalanceWidget(),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              // 탭바
                                                                              Container(
                                                                                width: MediaQuery.of(context).size.width,
                                                                                decoration: BoxDecoration(
                                                                                  border: Border(
                                                                                    bottom: BorderSide(
                                                                                      width: 0.5,
                                                                                      color: ColorsConfig().border1(),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                child: TabBar(
                                                                                  controller: _giftTabController,
                                                                                  isScrollable: true,
                                                                                  padding: const EdgeInsets.symmetric(horizontal: 20.0),
                                                                                  indicatorColor: ColorsConfig().primary(),
                                                                                  unselectedLabelColor: ColorsConfig().textWhite1(),
                                                                                  unselectedLabelStyle: TextStyle(
                                                                                    fontSize: 16.0.sp,
                                                                                    fontWeight: FontWeight.w400,
                                                                                  ),
                                                                                  labelColor: ColorsConfig().primary(),
                                                                                  labelStyle: TextStyle(
                                                                                    fontSize: 16.0.sp,
                                                                                    fontWeight: FontWeight.w700,
                                                                                  ),
                                                                                  onTap: (_) {
                                                                                    state(() {
                                                                                      _hasClick = false;
                                                                                      _selectedGift = {};
                                                                                    });
                                                                                  },
                                                                                  tabs: [
                                                                                    Tab(
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.allText,
                                                                                      ),
                                                                                    ),
                                                                                    Tab(
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.trophyText,
                                                                                      ),
                                                                                    ),
                                                                                    Tab(
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.reactionText,
                                                                                      ),
                                                                                    ),
                                                                                    Tab(
                                                                                      child: CustomTextBuilder(
                                                                                        text: '메달',
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              Expanded(
                                                                                child: Padding(
                                                                                  padding: !_hasClick ? const EdgeInsets.fromLTRB(25.0, 25.0, 15.0, 20.0) : const EdgeInsets.fromLTRB(25.0, 25.0, 15.0, 0.0),
                                                                                  child: TabBarView(
                                                                                    controller: _giftTabController,
                                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                                    children: [
                                                                                      ListView(
                                                                                        children: [
                                                                                          Wrap(
                                                                                            children: List.generate(gifts.result.length, (index) {
                                                                                              return InkWell(
                                                                                                splashColor: ColorsConfig.transparent,
                                                                                                highlightColor: ColorsConfig.transparent,
                                                                                                onTap: () {
                                                                                                  state(() {
                                                                                                    if (_hasClick && _selectedGift['index'] == index) {
                                                                                                      _hasClick = false;
                                                                                                      _selectedGift = {};
                                                                                                    } else {
                                                                                                      _hasClick = true;
                                                                                                      _selectedGift = {
                                                                                                        "index": index,
                                                                                                        "item_index": gifts.result[index]['item_index'],
                                                                                                        "item_type": gifts.result[index]['item_type'],
                                                                                                        "item_type_name": gifts.result[index]['item_type_name'],
                                                                                                        "url": gifts.result[index]['url'],
                                                                                                        "description": gifts.result[index]['description'],
                                                                                                        "price": gifts.result[index]['price'],
                                                                                                      };
                                                                                                    }
                                                                                                  });
                                                                                                },
                                                                                                child: Container(
                                                                                                  margin: EdgeInsets.only(right: 10.0.w),
                                                                                                  decoration: BoxDecoration(
                                                                                                    color: _selectedGift['index'] == index && _giftTabIndex == 0 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                    borderRadius: BorderRadius.circular(14.0),
                                                                                                  ),
                                                                                                  child: Column(
                                                                                                    children: [
                                                                                                      Image(
                                                                                                        image: NetworkImage(
                                                                                                          gifts.result[index]['url'],
                                                                                                        ),
                                                                                                        filterQuality: FilterQuality.high,
                                                                                                        width: 65.0.w,
                                                                                                        height: 65.0.h,
                                                                                                      ),
                                                                                                      Container(
                                                                                                        margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                        child: CustomTextBuilder(
                                                                                                          text: '${gifts.result[index]['price']}',
                                                                                                          fontColor: ColorsConfig().textWhite1(),
                                                                                                          fontSize: 12.0.sp,
                                                                                                          fontWeight: FontWeight.w400,
                                                                                                        ),
                                                                                                      ),
                                                                                                    ],
                                                                                                  ),
                                                                                                ),
                                                                                              );
                                                                                            }),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      ListView(
                                                                                        children: [
                                                                                          Wrap(
                                                                                            children: List.generate(_trophy.length, (index) {
                                                                                              return InkWell(
                                                                                                splashColor: ColorsConfig.transparent,
                                                                                                highlightColor: ColorsConfig.transparent,
                                                                                                onTap: () {
                                                                                                  state(() {
                                                                                                    if (_hasClick && _selectedGift['index'] == index) {
                                                                                                      _hasClick = false;
                                                                                                      _selectedGift = {};
                                                                                                    } else {
                                                                                                      _hasClick = true;
                                                                                                      _selectedGift = {
                                                                                                        "index": index,
                                                                                                        "item_index": _trophy[index]['item_index'],
                                                                                                        "item_type": _trophy[index]['item_type'],
                                                                                                        "item_type_name": _trophy[index]['item_type_name'],
                                                                                                        "url": _trophy[index]['url'],
                                                                                                        "description": _trophy[index]['description'],
                                                                                                        "price": _trophy[index]['price'],
                                                                                                      };
                                                                                                    }
                                                                                                  });
                                                                                                },
                                                                                                child: Container(
                                                                                                  margin: EdgeInsets.only(right: 10.0.w),
                                                                                                  decoration: BoxDecoration(
                                                                                                    color: _selectedGift['index'] == index && _giftTabIndex == 1 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                    borderRadius: BorderRadius.circular(14.0),
                                                                                                  ),
                                                                                                  child: _trophy[index]['item_type'] == 0
                                                                                                      ? Column(
                                                                                                          children: [
                                                                                                            Image(
                                                                                                              image: NetworkImage(
                                                                                                                _trophy[index]['url'],
                                                                                                              ),
                                                                                                              filterQuality: FilterQuality.high,
                                                                                                              width: 65.0.w,
                                                                                                              height: 65.0.h,
                                                                                                            ),
                                                                                                            Container(
                                                                                                              margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                              child: CustomTextBuilder(
                                                                                                                text: '${_trophy[index]['price']}',
                                                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                                                fontSize: 12.0.sp,
                                                                                                                fontWeight: FontWeight.w400,
                                                                                                              ),
                                                                                                            ),
                                                                                                          ],
                                                                                                        )
                                                                                                      : null,
                                                                                                ),
                                                                                              );
                                                                                            }),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      ListView(
                                                                                        children: [
                                                                                          Wrap(
                                                                                            children: List.generate(_reaction.length, (index) {
                                                                                              return InkWell(
                                                                                                splashColor: ColorsConfig.transparent,
                                                                                                highlightColor: ColorsConfig.transparent,
                                                                                                onTap: () {
                                                                                                  state(() {
                                                                                                    if (_hasClick && _selectedGift['index'] == index) {
                                                                                                      _hasClick = false;
                                                                                                      _selectedGift = {};
                                                                                                    } else {
                                                                                                      _hasClick = true;
                                                                                                      _selectedGift = {
                                                                                                        "index": index,
                                                                                                        "item_index": _reaction[index]['item_index'],
                                                                                                        "item_type": _reaction[index]['item_type'],
                                                                                                        "item_type_name": _reaction[index]['item_type_name'],
                                                                                                        "url": _reaction[index]['url'],
                                                                                                        "description": _reaction[index]['description'],
                                                                                                        "price": _reaction[index]['price'],
                                                                                                      };
                                                                                                    }
                                                                                                  });
                                                                                                },
                                                                                                child: Container(
                                                                                                  margin: EdgeInsets.only(right: 10.0.w),
                                                                                                  decoration: BoxDecoration(
                                                                                                    color: _selectedGift['index'] == index && _giftTabIndex == 2 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                    borderRadius: BorderRadius.circular(14.0),
                                                                                                  ),
                                                                                                  child: _reaction[index]['item_type'] == 1
                                                                                                      ? Column(
                                                                                                          children: [
                                                                                                            Image(
                                                                                                              image: NetworkImage(
                                                                                                                _reaction[index]['url'],
                                                                                                              ),
                                                                                                              filterQuality: FilterQuality.high,
                                                                                                              width: 65.0.w,
                                                                                                              height: 65.0.h,
                                                                                                            ),
                                                                                                            Container(
                                                                                                              margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                              child: CustomTextBuilder(
                                                                                                                text: '${_reaction[index]['price']}',
                                                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                                                fontSize: 12.0.sp,
                                                                                                                fontWeight: FontWeight.w400,
                                                                                                              ),
                                                                                                            ),
                                                                                                          ],
                                                                                                        )
                                                                                                      : null,
                                                                                                ),
                                                                                              );
                                                                                            }),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      ListView(
                                                                                        children: [
                                                                                          Wrap(
                                                                                            children: List.generate(_neckTrophy.length, (index) {
                                                                                              return InkWell(
                                                                                                splashColor: ColorsConfig.transparent,
                                                                                                highlightColor: ColorsConfig.transparent,
                                                                                                onTap: () {
                                                                                                  state(() {
                                                                                                    if (_hasClick && _selectedGift['index'] == index) {
                                                                                                      _hasClick = false;
                                                                                                      _selectedGift = {};
                                                                                                    } else {
                                                                                                      _hasClick = true;
                                                                                                      _selectedGift = {
                                                                                                        "index": index,
                                                                                                        "item_index": _neckTrophy[index]['item_index'],
                                                                                                        "item_type": _neckTrophy[index]['item_type'],
                                                                                                        "item_type_name": _neckTrophy[index]['item_type_name'],
                                                                                                        "url": _neckTrophy[index]['url'],
                                                                                                        "description": _neckTrophy[index]['description'],
                                                                                                        "price": _neckTrophy[index]['price'],
                                                                                                      };
                                                                                                    }
                                                                                                  });
                                                                                                },
                                                                                                child: Container(
                                                                                                  margin: EdgeInsets.only(right: 10.0.w),
                                                                                                  decoration: BoxDecoration(
                                                                                                    color: _selectedGift['index'] == index && _giftTabIndex == 3 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                    borderRadius: BorderRadius.circular(14.0),
                                                                                                  ),
                                                                                                  child: _neckTrophy[index]['item_type'] == 2
                                                                                                      ? Column(
                                                                                                          children: [
                                                                                                            Image(
                                                                                                              image: NetworkImage(
                                                                                                                _neckTrophy[index]['url'],
                                                                                                              ),
                                                                                                              filterQuality: FilterQuality.high,
                                                                                                              width: 65.0.w,
                                                                                                              height: 65.0.h,
                                                                                                            ),
                                                                                                            Container(
                                                                                                              margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                              child: CustomTextBuilder(
                                                                                                                text: '${_neckTrophy[index]['price']}',
                                                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                                                fontSize: 12.0.sp,
                                                                                                                fontWeight: FontWeight.w400,
                                                                                                              ),
                                                                                                            ),
                                                                                                          ],
                                                                                                        )
                                                                                                      : null,
                                                                                                ),
                                                                                              );
                                                                                            }),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              _hasClick == true
                                                                                  ? Container(
                                                                                      height: 157.0,
                                                                                      padding: const EdgeInsets.fromLTRB(20.0, 10.0, 20.0, 30.0),
                                                                                      decoration: BoxDecoration(
                                                                                        color: ColorsConfig().subBackground1(),
                                                                                        boxShadow: [
                                                                                          BoxShadow(
                                                                                            color: ColorsConfig().textWhite1(opacity: 0.16),
                                                                                            blurRadius: 10.0,
                                                                                            offset: const Offset(0.0, -2.0),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      child: Column(
                                                                                        children: [
                                                                                          Row(
                                                                                            children: [
                                                                                              Image(
                                                                                                image: NetworkImage(
                                                                                                  '${_selectedGift['url']}',
                                                                                                ),
                                                                                                filterQuality: FilterQuality.high,
                                                                                                width: 65.0.w,
                                                                                                height: 65.0.h,
                                                                                              ),
                                                                                              const SizedBox(width: 32.0),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  CustomTextBuilder(
                                                                                                    text: '${_selectedGift['description']}',
                                                                                                    fontColor: ColorsConfig().textWhite1(),
                                                                                                    fontSize: 16.0.sp,
                                                                                                    fontWeight: FontWeight.w400,
                                                                                                  ),
                                                                                                  CustomTextBuilder(
                                                                                                    text: numberFormat.format(_selectedGift['price']),
                                                                                                    fontColor: ColorsConfig().textWhite1(),
                                                                                                    fontSize: 12.0.sp,
                                                                                                    fontWeight: FontWeight.w400,
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          const SizedBox(height: 10.0),
                                                                                          InkWell(
                                                                                            onTap: () {
                                                                                              if (_selectedGift['price'] == 0) {
                                                                                                SendGiftDataAPI().gift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: getSubscribePostListData['list'][index]['post_index']).then((value) {
                                                                                                  int? _existIndex;

                                                                                                  switch (value.result['status']) {
                                                                                                    case 10200:
                                                                                                      setState(() {
                                                                                                        if (getSubscribePostListData['list'][index]['gift'].length == 0) {
                                                                                                          getSubscribePostListData['list'][index]['gift'].add({
                                                                                                            "image": _selectedGift['url'],
                                                                                                            "gift_count": 1,
                                                                                                          });
                                                                                                        } else {
                                                                                                          for (int i = 0; i < getSubscribePostListData['list'][index]['gift'].length; i++) {
                                                                                                            if (getSubscribePostListData['list'][index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                                              _existIndex = i;
                                                                                                              break;
                                                                                                            }
                                                                                                          }

                                                                                                          if (_existIndex != null) {
                                                                                                            getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] = getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                                          } else {
                                                                                                            getSubscribePostListData['list'][index]['gift'].insert(0, {
                                                                                                              "image": _selectedGift['url'],
                                                                                                              "gift_count": 1,
                                                                                                            });
                                                                                                          }
                                                                                                        }
                                                                                                      });
                                                                                                      Navigator.pop(context);
                                                                                                      break;
                                                                                                    case 10201:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText1,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                    case 10202:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText2,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                    case 10203:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText3,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                    case 10204:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText4,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                  }
                                                                                                });
                                                                                              } else {
                                                                                                SendPricedGiftDataAPI().pricedGift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: getSubscribePostListData['list'][index]['post_index']).then((value) {
                                                                                                  int? _existIndex;

                                                                                                  switch (value.result['status']) {
                                                                                                    case 10201:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText1,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                    case 10202:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText2,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                    case 10203:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText3,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                    case 10210:
                                                                                                      setState(() {
                                                                                                        if (getSubscribePostListData['list'][index]['gift'].length == 0) {
                                                                                                          getSubscribePostListData['list'][index]['gift'].add({
                                                                                                            "image": _selectedGift['url'],
                                                                                                            "gift_count": 1,
                                                                                                          });
                                                                                                        } else {
                                                                                                          for (int i = 0; i < getSubscribePostListData['list'][index]['gift'].length; i++) {
                                                                                                            if (getSubscribePostListData['list'][index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                                              _existIndex = i;
                                                                                                              break;
                                                                                                            }
                                                                                                          }

                                                                                                          if (_existIndex != null) {
                                                                                                            getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] = getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                                          } else {
                                                                                                            getSubscribePostListData['list'][index]['gift'].insert(0, {
                                                                                                              "image": _selectedGift['url'],
                                                                                                              "gift_count": 1,
                                                                                                            });
                                                                                                          }
                                                                                                        }
                                                                                                      });
                                                                                                      Navigator.pop(context);
                                                                                                      break;
                                                                                                    case 10211:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText5,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                    case 10212:
                                                                                                      ToastBuilder().toast(
                                                                                                        Container(
                                                                                                          width: MediaQuery.of(context).size.width,
                                                                                                          padding: const EdgeInsets.all(14.0),
                                                                                                          margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                            borderRadius: BorderRadius.circular(6.0),
                                                                                                          ),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: TextConstant.giftSendErrorText6,
                                                                                                            fontColor: ColorsConfig.defaultWhite,
                                                                                                            fontSize: 14.0.sp,
                                                                                                          ),
                                                                                                        ),
                                                                                                      );
                                                                                                      break;
                                                                                                  }
                                                                                                });
                                                                                              }
                                                                                            },
                                                                                            child: Container(
                                                                                              width: MediaQuery.of(context).size.width,
                                                                                              height: 42.0,
                                                                                              decoration: BoxDecoration(
                                                                                                // color: ColorsConfig().primary(),
                                                                                                borderRadius: BorderRadius.circular(100.0),
                                                                                                gradient: LinearGradient(
                                                                                                  colors: [
                                                                                                    ColorsConfig().avatarButtonBackground1(),
                                                                                                    ColorsConfig().avatarButtonBackground2(),
                                                                                                  ],
                                                                                                  begin: Alignment.centerLeft,
                                                                                                  end: Alignment.centerRight,
                                                                                                ),
                                                                                              ),
                                                                                              child: Center(
                                                                                                child: CustomTextBuilder(
                                                                                                  text: TextConstant.sendText,
                                                                                                  fontColor: ColorsConfig().background(),
                                                                                                  fontSize: 16.0.sp,
                                                                                                  fontWeight: FontWeight.w700,
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    )
                                                                                  : Container(),
                                                                            ],
                                                                          ),
                                                                        );
                                                                      },
                                                                    );
                                                                  });
                                                            });
                                                          },
                                                          child: SvgAssets(
                                                            image:
                                                                'assets/icon/gift.svg',
                                                            color: ColorsConfig()
                                                                .textBlack1(),
                                                            width: 18.0,
                                                            height: 18.0,
                                                          ),
                                                        ),
                                                        // 공유
                                                        MaterialButton(
                                                          onPressed: () async {
                                                            var shortLink = await DeepLinkBuilder().getShortLink(
                                                                'share',
                                                                '${getSubscribePostListData['list'][index]['post_index']}',
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type']);

                                                            Share.share(
                                                              '${getSubscribePostListData['list'][index]['title']}\n$shortLink',
                                                              sharePositionOrigin: Rect.fromLTWH(
                                                                  0,
                                                                  0,
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                                  MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .height /
                                                                      2),
                                                            );
                                                          },
                                                          child: SvgAssets(
                                                            image:
                                                                'assets/icon/share.svg',
                                                            color: ColorsConfig()
                                                                .textBlack1(),
                                                            width: 18.0,
                                                            height: 18.0,
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  ],
                                                ),
                                              ),
                                            ],
                                          );
                                        } else {
                                          return Container(
                                            color:
                                                ColorsConfig().subBackground1(),
                                            margin: const EdgeInsets.only(
                                                bottom: 8.0),
                                            child: Column(
                                              children: [
                                                // 유저 이미지, 닉네임, 날짜, 더보기 버튼
                                                Padding(
                                                  padding:
                                                      const EdgeInsets.fromLTRB(
                                                          20.0,
                                                          13.4,
                                                          20.0,
                                                          0.0),
                                                  child: Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceBetween,
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .start,
                                                    children: [
                                                      InkWell(
                                                        onTap: () {
                                                          if (getSubscribePostListData[
                                                                  'list'][index]
                                                              ['isMe']) {
                                                            Navigator.pushNamed(
                                                                context,
                                                                '/my_profile',
                                                                arguments: {
                                                                  'onNavigator':
                                                                      true,
                                                                });
                                                          } else {
                                                            Navigator.pushNamed(
                                                                context,
                                                                '/your_profile',
                                                                arguments: {
                                                                  'user_index':
                                                                      getSubscribePostListData['list']
                                                                              [
                                                                              index]
                                                                          [
                                                                          'user_index'],
                                                                  'user_nickname':
                                                                      getSubscribePostListData['list']
                                                                              [
                                                                              index]
                                                                          [
                                                                          'nick'],
                                                                }).then(
                                                                (_) async {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              GetSubscribePostListAPI()
                                                                  .subscribePostList(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!)
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  currentPage2
                                                                      .clear();
                                                                  getSubscribePostListData =
                                                                      value
                                                                          .result;
                                                                  for (int i =
                                                                          0;
                                                                      i <
                                                                          value
                                                                              .result['list']
                                                                              .length;
                                                                      i++) {
                                                                    currentPage2
                                                                        .add(0);
                                                                  }
                                                                });
                                                              });
                                                            });
                                                          }
                                                        },
                                                        child: Row(
                                                          children: [
                                                            // 이미지
                                                            Container(
                                                              width: 42.0,
                                                              height: 42.0,
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .userIconBackground(),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            21.0),
                                                                image:
                                                                    DecorationImage(
                                                                  image:
                                                                      NetworkImage(
                                                                    getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'avatar_url'],
                                                                    scale: 5.5,
                                                                  ),
                                                                  filterQuality:
                                                                      FilterQuality
                                                                          .high,
                                                                  fit: BoxFit
                                                                      .none,
                                                                  alignment:
                                                                      const Alignment(
                                                                          0.0,
                                                                          -0.3),
                                                                ),
                                                              ),
                                                            ),
                                                            Column(
                                                              crossAxisAlignment:
                                                                  CrossAxisAlignment
                                                                      .start,
                                                              children: [
                                                                SizedBox(
                                                                  width: MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .width -
                                                                      82.0,
                                                                  child: Row(
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .spaceBetween,
                                                                    children: [
                                                                      Row(
                                                                        children: [
                                                                          // 닉네임
                                                                          Container(
                                                                            margin:
                                                                                const EdgeInsets.symmetric(horizontal: 8.0),
                                                                            child:
                                                                                CustomTextBuilder(
                                                                              text: '${getSubscribePostListData['list'][index]['nick']}',
                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                              fontSize: 16.0.sp,
                                                                              fontWeight: FontWeight.w700,
                                                                            ),
                                                                          ),
                                                                          // 날짜
                                                                          CustomTextBuilder(
                                                                            text:
                                                                                DateCalculatorWrapper().daysCalculator(getSubscribePostListData['list'][index]['date']),
                                                                            fontColor:
                                                                                ColorsConfig.defaultGray,
                                                                            fontSize:
                                                                                14.0.sp,
                                                                            fontWeight:
                                                                                FontWeight.w400,
                                                                            height:
                                                                                1.8,
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      LabelCategoryWidgetBuilder(
                                                                          data: getSubscribePostListData['list'][index]
                                                                              [
                                                                              'type']),
                                                                    ],
                                                                  ),
                                                                ),
                                                                // 선물받은 뱃지영역
                                                                getSubscribePostListData['list'][index]
                                                                            [
                                                                            'gift']
                                                                        .isNotEmpty
                                                                    ? InkWell(
                                                                        onTap:
                                                                            () async {
                                                                          final _prefs =
                                                                              await SharedPreferences.getInstance();

                                                                          GetGiftHistoryListDataAPI()
                                                                              .giftHistory(accesToken: _prefs.getString('AccessToken')!, postIndex: getSubscribePostListData['list'][index]['post_index'])
                                                                              .then((history) {
                                                                            showModalBottomSheet(
                                                                                context: context,
                                                                                backgroundColor: ColorsConfig().subBackground1(),
                                                                                shape: const RoundedRectangleBorder(
                                                                                  borderRadius: BorderRadius.only(
                                                                                    topLeft: Radius.circular(12.0),
                                                                                    topRight: Radius.circular(12.0),
                                                                                  ),
                                                                                ),
                                                                                builder: (BuildContext context) {
                                                                                  return SafeArea(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        borderRadius: BorderRadius.only(
                                                                                          topLeft: Radius.circular(12.0),
                                                                                          topRight: Radius.circular(12.0),
                                                                                        ),
                                                                                      ),
                                                                                      child: Column(
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Container(
                                                                                            width: 50.0,
                                                                                            height: 4.0,
                                                                                            margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                            decoration: BoxDecoration(
                                                                                              color: ColorsConfig().textBlack2(),
                                                                                              borderRadius: BorderRadius.circular(100.0),
                                                                                            ),
                                                                                          ),
                                                                                          Center(
                                                                                            child: Container(
                                                                                              width: MediaQuery.of(context).size.width,
                                                                                              padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                              decoration: BoxDecoration(
                                                                                                border: Border(
                                                                                                  bottom: BorderSide(
                                                                                                    width: 0.5,
                                                                                                    color: ColorsConfig().border1(),
                                                                                                  ),
                                                                                                ),
                                                                                              ),
                                                                                              child: CustomTextBuilder(
                                                                                                text: TextConstant.giftHistoryText,
                                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                                fontSize: 18.0.sp,
                                                                                                fontWeight: FontWeight.w600,
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                          Expanded(
                                                                                            child: ListView.builder(
                                                                                                itemCount: history.result['users'].length,
                                                                                                itemBuilder: (context, historyIndex) {
                                                                                                  return Container(
                                                                                                    width: MediaQuery.of(context).size.width,
                                                                                                    height: 65.0,
                                                                                                    padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                                    decoration: BoxDecoration(
                                                                                                      border: Border(
                                                                                                        bottom: BorderSide(
                                                                                                          width: 0.5,
                                                                                                          color: ColorsConfig().border1(),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                    child: Row(
                                                                                                      children: [
                                                                                                        Expanded(
                                                                                                          child: Row(
                                                                                                            children: [
                                                                                                              // 아바타 이미지
                                                                                                              Container(
                                                                                                                width: 35.0,
                                                                                                                height: 35.0,
                                                                                                                decoration: BoxDecoration(
                                                                                                                  color: ColorsConfig().userIconBackground(),
                                                                                                                  borderRadius: BorderRadius.circular(17.5),
                                                                                                                  image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                                      ? DecorationImage(
                                                                                                                          image: NetworkImage(
                                                                                                                            history.result['users'][historyIndex]['avatar'],
                                                                                                                            scale: 7.0,
                                                                                                                          ),
                                                                                                                          filterQuality: FilterQuality.high,
                                                                                                                          fit: BoxFit.none,
                                                                                                                          alignment: const Alignment(0.0, -0.3),
                                                                                                                        )
                                                                                                                      : null,
                                                                                                                ),
                                                                                                              ),
                                                                                                              const SizedBox(width: 15.0),
                                                                                                              CustomTextBuilder(
                                                                                                                text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                                                fontSize: 16.0.sp,
                                                                                                                fontWeight: FontWeight.w400,
                                                                                                              ),
                                                                                                            ],
                                                                                                          ),
                                                                                                        ),
                                                                                                        Expanded(
                                                                                                          child: ListView.builder(
                                                                                                            scrollDirection: Axis.horizontal,
                                                                                                            itemCount: history.result['gifts'].length,
                                                                                                            itemBuilder: (context, giftHistory) {
                                                                                                              if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                                return Container();
                                                                                                              }
                                                                                                              return Row(
                                                                                                                children: [
                                                                                                                  Image(
                                                                                                                    image: NetworkImage(
                                                                                                                      history.result['gifts'][giftHistory]['image'],
                                                                                                                    ),
                                                                                                                  ),
                                                                                                                  const SizedBox(width: 4.0),
                                                                                                                  CustomTextBuilder(
                                                                                                                    text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                                    fontColor: ColorsConfig().textBlack2(),
                                                                                                                    fontSize: 12.0.sp,
                                                                                                                    fontWeight: FontWeight.w700,
                                                                                                                  ),
                                                                                                                  const SizedBox(width: 4.0),
                                                                                                                ],
                                                                                                              );
                                                                                                            },
                                                                                                          ),
                                                                                                        ),
                                                                                                      ],
                                                                                                    ),
                                                                                                  );
                                                                                                }),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                });
                                                                          });
                                                                        },
                                                                        child: !getSubscribeMoreBtnState[index]
                                                                            ? Container(
                                                                                margin: const EdgeInsets.only(left: 4.0, top: 5.0),
                                                                                child: SingleChildScrollView(
                                                                                  physics: const NeverScrollableScrollPhysics(),
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  child: Row(
                                                                                    children: [
                                                                                      Row(
                                                                                        children: List.generate(getSubscribePostListData['list'][index]['gift'].length > 4 ? 4 : getSubscribePostListData['list'][index]['gift'].length, (giftIndex) {
                                                                                          return Container(
                                                                                            margin: const EdgeInsets.only(right: 8.0),
                                                                                            child: Row(
                                                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Container(
                                                                                                  width: 24.0,
                                                                                                  height: 24.0,
                                                                                                  decoration: BoxDecoration(
                                                                                                    borderRadius: BorderRadius.circular(9.0),
                                                                                                  ),
                                                                                                  child: Image(
                                                                                                    image: NetworkImage(
                                                                                                      getSubscribePostListData['list'][index]['gift'][giftIndex]['image'],
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                                CustomTextBuilder(
                                                                                                  text: '${getSubscribePostListData['list'][index]['gift'][giftIndex]['gift_count']}',
                                                                                                  fontColor: ColorsConfig.defaultGray,
                                                                                                  fontSize: 12.0.sp,
                                                                                                  fontWeight: FontWeight.w700,
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                      ),
                                                                                      !getSubscribeMoreBtnState[index] && getSubscribePostListData['list'][index]['gift'].length > 4
                                                                                          ? InkWell(
                                                                                              onTap: () {
                                                                                                setState(() {
                                                                                                  getSubscribeMoreBtnState[index] = true;
                                                                                                });
                                                                                              },
                                                                                              child: Padding(
                                                                                                padding: const EdgeInsets.symmetric(horizontal: 8.0),
                                                                                                child: CustomTextBuilder(
                                                                                                  text: TextConstant.moreReadText,
                                                                                                  fontColor: ColorsConfig().textBlack2(),
                                                                                                  fontSize: 14.0.sp,
                                                                                                  fontWeight: FontWeight.w400,
                                                                                                ),
                                                                                              ),
                                                                                            )
                                                                                          : Container(),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                              )
                                                                            : Container(
                                                                                margin: const EdgeInsets.only(left: 4.0, top: 5.0),
                                                                                child: Wrap(
                                                                                  children: List.generate(getSubscribePostListData['list'][index]['gift'].length, (giftIndex) {
                                                                                    return Container(
                                                                                      margin: const EdgeInsets.only(right: 8.0),
                                                                                      child: Row(
                                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Container(
                                                                                            width: 24.0,
                                                                                            height: 24.0,
                                                                                            decoration: BoxDecoration(
                                                                                              borderRadius: BorderRadius.circular(9.0),
                                                                                            ),
                                                                                            child: Image(
                                                                                              image: NetworkImage(
                                                                                                getSubscribePostListData['list'][index]['gift'][giftIndex]['image'],
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                          CustomTextBuilder(
                                                                                            text: '${getSubscribePostListData['list'][index]['gift'][giftIndex]['gift_count']}',
                                                                                            fontColor: ColorsConfig.defaultGray,
                                                                                            fontSize: 12.0.sp,
                                                                                            fontWeight: FontWeight.w700,
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  }),
                                                                                ),
                                                                              ),
                                                                      )
                                                                    : Container(),
                                                              ],
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                                // 내용 부분
                                                InkWell(
                                                  onTap: () {
                                                    if (getSubscribePostListData[
                                                                'list'][index]
                                                            ['type'] ==
                                                        4) {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) =>
                                                              NewsDetailScreen(
                                                            postIndex:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                            postType:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                          ),
                                                        ),
                                                      ).then((returns) async {
                                                        if (returns != null) {
                                                          if (returns['ret']) {
                                                            setState(() {
                                                              postListData.remove(
                                                                  postListData[
                                                                      index]);
                                                              currentPage
                                                                  .removeAt(
                                                                      index);
                                                            });
                                                          }
                                                        } else {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          PostDetailDataAPI()
                                                              .detail(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'post_index'])
                                                              .then((value) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [index] =
                                                                  value.result;
                                                            });
                                                          });
                                                        }
                                                      });
                                                    } else if (getSubscribePostListData[
                                                                'list'][index]
                                                            ['type'] ==
                                                        5) {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) =>
                                                              VoteDetailScreen(
                                                            postIndex:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                            postType:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                          ),
                                                        ),
                                                      ).then((returns) async {
                                                        if (returns != null) {
                                                          if (returns['ret']) {
                                                            setState(() {
                                                              postListData.remove(
                                                                  postListData[
                                                                      index]);
                                                              currentPage2
                                                                  .removeAt(
                                                                      index);
                                                            });
                                                          }
                                                        } else {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          PostDetailDataAPI()
                                                              .detail(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'post_index'])
                                                              .then((value) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [index] =
                                                                  value.result;
                                                            });
                                                          });
                                                        }
                                                      });
                                                    } else {
                                                      Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                          builder: (context) =>
                                                              PostingDetailScreen(
                                                            postIndex:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                            postType:
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                          ),
                                                        ),
                                                      ).then((returns) async {
                                                        if (returns != null) {
                                                          if (returns['ret']) {
                                                            setState(() {
                                                              postListData.remove(
                                                                  postListData[
                                                                      index]);
                                                              currentPage2
                                                                  .removeAt(
                                                                      index);
                                                            });
                                                          }
                                                        } else {
                                                          final _prefs =
                                                              await SharedPreferences
                                                                  .getInstance();

                                                          PostDetailDataAPI()
                                                              .detail(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'post_index'])
                                                              .then((value) {
                                                            setState(() {
                                                              getSubscribePostListData[
                                                                          'list']
                                                                      [index] =
                                                                  value.result;
                                                            });
                                                          });
                                                        }
                                                      });
                                                    }
                                                  },
                                                  child:
                                                      getSubscribePostListData[
                                                                          'list']
                                                                      [index]
                                                                  ['type'] ==
                                                              4
                                                          ? Container(
                                                              margin:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      vertical:
                                                                          12.0),
                                                              padding:
                                                                  const EdgeInsets
                                                                      .symmetric(
                                                                      horizontal:
                                                                          20.0),
                                                              child: Row(
                                                                crossAxisAlignment:
                                                                    CrossAxisAlignment
                                                                        .start,
                                                                mainAxisAlignment:
                                                                    MainAxisAlignment
                                                                        .spaceBetween,
                                                                children: [
                                                                  Column(
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    children: [
                                                                      Container(
                                                                        width: (MediaQuery.of(context).size.width *
                                                                                0.8) -
                                                                            56.0,
                                                                        margin: const EdgeInsets
                                                                            .only(
                                                                            bottom:
                                                                                8.0),
                                                                        child: CustomTextBuilder(
                                                                            text:
                                                                                '${getSubscribePostListData['list'][index]['title']}',
                                                                            fontColor: ColorsConfig()
                                                                                .textWhite1(),
                                                                            fontSize: 19.0
                                                                                .sp,
                                                                            fontWeight: FontWeight
                                                                                .w700,
                                                                            maxLines:
                                                                                2,
                                                                            textOverflow:
                                                                                TextOverflow.ellipsis),
                                                                      ),
                                                                      SizedBox(
                                                                        width: (MediaQuery.of(context).size.width *
                                                                                0.8) -
                                                                            80.0,
                                                                        child:
                                                                            CustomTextBuilder(
                                                                          text:
                                                                              '${getSubscribePostListData['list'][index]['description']}',
                                                                          fontColor:
                                                                              ColorsConfig().textBlack1(),
                                                                          fontSize:
                                                                              16.0.sp,
                                                                          fontWeight:
                                                                              FontWeight.w400,
                                                                          maxLines:
                                                                              1,
                                                                          textOverflow:
                                                                              TextOverflow.ellipsis,
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  InkWell(
                                                                    onTap: () {
                                                                      UrlLauncherBuilder().launchURL(getSubscribePostListData['list']
                                                                              [
                                                                              index]
                                                                          [
                                                                          'link']);
                                                                    },
                                                                    child:
                                                                        Container(
                                                                      width: (MediaQuery.of(context).size.width *
                                                                              0.3) -
                                                                          23.0,
                                                                      height:
                                                                          75.0,
                                                                      decoration:
                                                                          BoxDecoration(
                                                                        color: ColorsConfig()
                                                                            .textBlack2(),
                                                                        border:
                                                                            Border.all(
                                                                          width:
                                                                              0.5,
                                                                          color:
                                                                              ColorsConfig().primary(),
                                                                        ),
                                                                        image:
                                                                            DecorationImage(
                                                                          image:
                                                                              NetworkImage(
                                                                            getSubscribePostListData['list'][index]['news_image'],
                                                                          ),
                                                                          fit: BoxFit
                                                                              .cover,
                                                                          filterQuality:
                                                                              FilterQuality.high,
                                                                        ),
                                                                      ),
                                                                      child:
                                                                          Stack(
                                                                        children: [
                                                                          Positioned(
                                                                            right:
                                                                                3.0,
                                                                            bottom:
                                                                                3.0,
                                                                            child:
                                                                                Container(
                                                                              width: 18.0,
                                                                              height: 18.0,
                                                                              decoration: BoxDecoration(
                                                                                color: ColorsConfig().linkIconBackground(),
                                                                                borderRadius: BorderRadius.circular(9.0),
                                                                              ),
                                                                              child: Center(
                                                                                child: SvgAssets(
                                                                                  image: 'assets/icon/link.svg',
                                                                                  color: ColorsConfig().primary(),
                                                                                  width: 12.0,
                                                                                  height: 12.0,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            )
                                                          : getSubscribePostListData['list'][index]['type'] == 1 ||
                                                                  getSubscribePostListData['list']
                                                                              [index]
                                                                          [
                                                                          'type'] ==
                                                                      2 ||
                                                                  getSubscribePostListData['list']
                                                                              [index]
                                                                          [
                                                                          'type'] ==
                                                                      3
                                                              ? Column(
                                                                  mainAxisSize:
                                                                      MainAxisSize
                                                                          .min,
                                                                  crossAxisAlignment:
                                                                      CrossAxisAlignment
                                                                          .start,
                                                                  mainAxisAlignment:
                                                                      MainAxisAlignment
                                                                          .start,
                                                                  children: [
                                                                    getSubscribePostListData['list'][index]['category'] !=
                                                                                null &&
                                                                            getSubscribePostListData['list'][index]['category'] ==
                                                                                'i'
                                                                        ? Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            margin:
                                                                                const EdgeInsets.only(top: 12.0),
                                                                            child: getSubscribePostListData['list'][index]['image'].length > 1
                                                                                ? ConstrainedBox(
                                                                                    constraints: BoxConstraints(
                                                                                      maxHeight: MediaQuery.of(context).size.width * 1.33,
                                                                                    ),
                                                                                    child: PageView.builder(
                                                                                      controller: _pageController,
                                                                                      itemCount: getSubscribePostListData['list'][index]['image'].length,
                                                                                      onPageChanged: (int page) {
                                                                                        setState(() {
                                                                                          currentPage2[index] = page;
                                                                                        });
                                                                                      },
                                                                                      itemBuilder: (context, imageIndex) {
                                                                                        return Image(
                                                                                            image: NetworkImage(
                                                                                              getSubscribePostListData['list'][index]['image'][imageIndex],
                                                                                            ),
                                                                                            fit: BoxFit.fitWidth,
                                                                                            filterQuality: FilterQuality.high,
                                                                                            alignment: Alignment.center);
                                                                                      },
                                                                                    ),
                                                                                  )
                                                                                : SizedBox(
                                                                                    height: MediaQuery.of(context).size.width,
                                                                                    child: Image(
                                                                                        image: NetworkImage(
                                                                                          getSubscribePostListData['list'][index]['image'][0],
                                                                                        ),
                                                                                        fit: BoxFit.cover,
                                                                                        filterQuality: FilterQuality.high,
                                                                                        alignment: Alignment.center),
                                                                                  ),
                                                                          )
                                                                        : Container(),
                                                                    getSubscribePostListData['list'][index]['category'] != null &&
                                                                            getSubscribePostListData['list'][index]['category'] ==
                                                                                'i' &&
                                                                            getSubscribePostListData['list'][index]['image'].length >
                                                                                1
                                                                        ? Container(
                                                                            margin:
                                                                                const EdgeInsets.only(top: 12.0),
                                                                            child:
                                                                                Row(
                                                                              mainAxisAlignment: MainAxisAlignment.center,
                                                                              children: List.generate(getSubscribePostListData['list'][index]['image'].length, (dots) {
                                                                                return Container(
                                                                                  width: 8.0,
                                                                                  height: 8.0,
                                                                                  margin: dots == getSubscribePostListData['list'][index]['image'].last ? EdgeInsets.zero : const EdgeInsets.only(right: 10.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: currentPage2[index] == dots ? ColorsConfig().primary() : ColorsConfig.defaultToast,
                                                                                    borderRadius: BorderRadius.circular(4.0),
                                                                                  ),
                                                                                );
                                                                              }),
                                                                            ),
                                                                          )
                                                                        : Container(),
                                                                    getSubscribePostListData['list'][index]['category'] !=
                                                                                null &&
                                                                            getSubscribePostListData['list'][index]['category'] ==
                                                                                'g'
                                                                        ? Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            margin:
                                                                                const EdgeInsets.only(top: 12.0),
                                                                            child:
                                                                                Image(
                                                                              image: NetworkImage(
                                                                                getSubscribePostListData['list'][index]['sub_link'],
                                                                              ),
                                                                              fit: BoxFit.contain,
                                                                              filterQuality: FilterQuality.high,
                                                                            ),
                                                                          )
                                                                        : Container(),
                                                                    getSubscribePostListData['list'][index]['category'] !=
                                                                                null &&
                                                                            getSubscribePostListData['list'][index]['category'] ==
                                                                                'y'
                                                                        ? Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            margin: const EdgeInsets.only(top: 12.0),
                                                                            child: YoutubePlayerIFrame(
                                                                              aspectRatio: 16 / 9,
                                                                              controller: YoutubePlayerController(
                                                                                initialVideoId: getSubscribePostListData['list'][index]['sub_link'].startsWith('https://youtu.be/')
                                                                                    ? getSubscribePostListData['list'][index]['sub_link'].toString().split('https://youtu.be/')[1]
                                                                                    : getSubscribePostListData['list'][index]['sub_link'].startsWith('https://youtube.com/shorts/')
                                                                                        ? getSubscribePostListData['list'][index]['sub_link'].toString().split('shorts/')[1].split('?')[0]
                                                                                        : getSubscribePostListData['list'][index]['sub_link'].toString().split('watch?v=')[1],
                                                                                params: const YoutubePlayerParams(
                                                                                  autoPlay: false,
                                                                                  showControls: true,
                                                                                  showFullscreenButton: true,
                                                                                  mute: true,
                                                                                ),
                                                                              ),
                                                                            ))
                                                                        : Container(),
                                                                    Container(
                                                                      width: MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .width,
                                                                      margin: const EdgeInsets
                                                                          .symmetric(
                                                                          vertical:
                                                                              12.0),
                                                                      padding: const EdgeInsets
                                                                          .symmetric(
                                                                          horizontal:
                                                                              20.0),
                                                                      child:
                                                                          CustomTextBuilder(
                                                                        text:
                                                                            '${getSubscribePostListData['list'][index]['title']}',
                                                                        fontColor:
                                                                            ColorsConfig().textWhite1(),
                                                                        fontSize:
                                                                            20.0.sp,
                                                                        fontWeight:
                                                                            FontWeight.w700,
                                                                      ),
                                                                    ),
                                                                    Container(
                                                                      width: MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .width,
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          top:
                                                                              8.0,
                                                                          bottom:
                                                                              16.0),
                                                                      padding: const EdgeInsets
                                                                          .symmetric(
                                                                          horizontal:
                                                                              20.0),
                                                                      child:
                                                                          CustomTextBuilder(
                                                                        text: getSubscribePostListData['list'][index]
                                                                            [
                                                                            'description'],
                                                                        fontColor:
                                                                            ColorsConfig().textBlack1(),
                                                                        fontSize:
                                                                            18.0.sp,
                                                                        fontWeight:
                                                                            FontWeight.w400,
                                                                        maxLines:
                                                                            5,
                                                                        textOverflow:
                                                                            TextOverflow.ellipsis,
                                                                      ),
                                                                    ),
                                                                  ],
                                                                )
                                                              : getSubscribePostListData['list']
                                                                              [
                                                                              index]
                                                                          [
                                                                          'type'] ==
                                                                      5
                                                                  ? Padding(
                                                                      padding: const EdgeInsets
                                                                          .symmetric(
                                                                          horizontal:
                                                                              20.0),
                                                                      child:
                                                                          Column(
                                                                        crossAxisAlignment:
                                                                            CrossAxisAlignment.start,
                                                                        children: [
                                                                          Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            margin:
                                                                                const EdgeInsets.symmetric(vertical: 12.0),
                                                                            child:
                                                                                CustomTextBuilder(
                                                                              text: getSubscribePostListData['list'][index]['title'],
                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                              fontSize: 19.0.sp,
                                                                              fontWeight: FontWeight.w700,
                                                                            ),
                                                                          ),
                                                                          Column(
                                                                            children:
                                                                                List.generate(getSubscribePostListData['list'][index]['vote'].length, (votes) {
                                                                              return InkWell(
                                                                                onTap: () async {
                                                                                  final _prefs = await SharedPreferences.getInstance();

                                                                                  if (DateTime.parse(getSubscribePostListData['list'][index]['date']).millisecondsSinceEpoch > DateTime.now().millisecondsSinceEpoch) {
                                                                                    if (getSubscribePostListData['list'][index]['selected_vote_index'] == null) {
                                                                                      SelectVoteAPI().addVote(accesToken: _prefs.getString('AccessToken')!, postIndex: getSubscribePostListData['list'][index]['post_index'], voteIndex: getSubscribePostListData['list'][index]['vote'][votes]['vote_index']).then((_v) {
                                                                                        setState(() {
                                                                                          getSubscribePostListData['list'][index]['selected_vote_index'] = getSubscribePostListData['list'][index]['vote'][votes]['vote_index'];
                                                                                          getSubscribePostListData['list'][index]['vote'][votes]['cnt'] = getSubscribePostListData['list'][index]['vote'][votes]['cnt'] + 1;
                                                                                          getSubscribePostListData['list'][index]['vote_count'] = getSubscribePostListData['list'][index]['vote_count'] + 1;
                                                                                        });
                                                                                      });
                                                                                    } else if (getSubscribePostListData['list'][index]['selected_vote_index'] != null && getSubscribePostListData['list'][index]['selected_vote_index'] == getSubscribePostListData['list'][index]['vote'][votes]['vote_index']) {
                                                                                      SelectedVoteCancleAPI().cancel(accesToken: _prefs.getString('AccessToken')!, postIndex: getSubscribePostListData['list'][index]['post_index'], voteIndex: getSubscribePostListData['list'][index]['vote'][votes]['vote_index']).then((_v) {
                                                                                        setState(() {
                                                                                          getSubscribePostListData['list'][index]['selected_vote_index'] = null;
                                                                                          getSubscribePostListData['list'][index]['vote'][votes]['cnt'] = getSubscribePostListData['list'][index]['vote'][votes]['cnt'] - 1;
                                                                                          getSubscribePostListData['list'][index]['vote_count'] = getSubscribePostListData['list'][index]['vote_count'] - 1;
                                                                                        });
                                                                                      });
                                                                                    }
                                                                                  }
                                                                                },
                                                                                child: Container(
                                                                                  width: MediaQuery.of(context).size.width,
                                                                                  height: 36.0,
                                                                                  margin: const EdgeInsets.symmetric(vertical: 4.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig.transparent,
                                                                                    border: Border.all(
                                                                                      width: 0.5,
                                                                                      color: getSubscribePostListData['list'][index]['selected_vote_index'] == null || getSubscribePostListData['list'][index]['selected_vote_index'] != getSubscribePostListData['list'][index]['vote'][votes]['vote_index'] ? ColorsConfig().border1() : ColorsConfig().primary(),
                                                                                    ),
                                                                                    borderRadius: BorderRadius.circular(4.0),
                                                                                  ),
                                                                                  child: Stack(
                                                                                    children: [
                                                                                      getSubscribePostListData['list'][index]['vote_count'] > 0
                                                                                          ? LinearPercentIndicator(
                                                                                              percent: getSubscribePostListData['list'][index]['vote'][votes]['cnt'] / getSubscribePostListData['list'][index]['vote_count'],
                                                                                              lineHeight: 100,
                                                                                              padding: EdgeInsets.zero,
                                                                                              barRadius: const Radius.circular(4.0),
                                                                                              animation: true,
                                                                                              backgroundColor: ColorsConfig.transparent,
                                                                                              progressColor: getSubscribePostListData['list'][index]['selected_vote_index'] == null || getSubscribePostListData['list'][index]['selected_vote_index'] != getSubscribePostListData['list'][index]['vote'][votes]['vote_index'] ? ColorsConfig().graphColor2() : ColorsConfig().graphColor1(),
                                                                                            )
                                                                                          : Container(),
                                                                                      Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Row(
                                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                          children: [
                                                                                            CustomTextBuilder(
                                                                                              text: getSubscribePostListData['list'][index]['vote'][votes]['vote_title'],
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 16.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                            CustomTextBuilder(
                                                                                              text: getSubscribePostListData['list'][index]['selected_vote_index'] != null || DateTime.parse(getSubscribePostListData['list'][index]['date']).millisecondsSinceEpoch < DateTime.now().millisecondsSinceEpoch
                                                                                                  ? getSubscribePostListData['list'][index]['vote_count'] > 0
                                                                                                      ? '${(getSubscribePostListData['list'][index]['vote'][votes]['cnt'] / getSubscribePostListData['list'][index]['vote_count'] * 100).toStringAsFixed(0)}%'
                                                                                                      : '0%'
                                                                                                  : '',
                                                                                              fontColor: ColorsConfig().textWhite1(),
                                                                                              fontSize: 16.0.sp,
                                                                                              fontWeight: FontWeight.w400,
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            }),
                                                                          ),
                                                                          Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            margin:
                                                                                const EdgeInsets.only(top: 5.0, bottom: 11.0),
                                                                            child:
                                                                                Row(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              children: [
                                                                                CustomTextBuilder(
                                                                                  text: '총 ${getSubscribePostListData['list'][index]['vote_count']}명 투표',
                                                                                  fontColor: ColorsConfig().textBlack2(),
                                                                                  fontSize: 12.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                                CustomTextBuilder(
                                                                                  text: DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date']) >= 0 && DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date']) > 0
                                                                                      ? '${DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date'])}시간 남음'
                                                                                      : DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date']) >= 0 && DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date']) <= 0 && DateCalculatorWrapper().expiredMinutesForDate(getSubscribePostListData['list'][index]['vote_end_date']) > 0
                                                                                          ? '${DateCalculatorWrapper().expiredDate(getSubscribePostListData['list'][index]['vote_end_date'])}일 ${DateCalculatorWrapper().expiredHoursForDate(getSubscribePostListData['list'][index]['vote_end_date'])}시간 ${DateCalculatorWrapper().expiredMinutesForDate(getSubscribePostListData['list'][index]['vote_end_date'])}분 남음'
                                                                                          : '투표가 마감되었습니다.',
                                                                                  fontColor: ColorsConfig().textBlack2(),
                                                                                  fontSize: 12.0.sp,
                                                                                  fontWeight: FontWeight.w400,
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    )
                                                                  : Container(),
                                                ),
                                                // 좋아요, 댓글, 선물, 공유, 더보기 버튼
                                                Row(
                                                  mainAxisAlignment:
                                                      MainAxisAlignment
                                                          .spaceBetween,
                                                  children: [
                                                    // 좋아요
                                                    MaterialButton(
                                                      onPressed: () async {
                                                        final _prefs =
                                                            await SharedPreferences
                                                                .getInstance();

                                                        if (!getSubscribePostListData[
                                                                'list'][index]
                                                            ['isLike']) {
                                                          AddLikeSenderAPI()
                                                              .add(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'post_index'])
                                                              .then((res) {
                                                            if (res.result[
                                                                    'status'] ==
                                                                10800) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['like']++;
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'isLike'] = true;
                                                              });
                                                            }
                                                          });
                                                        } else {
                                                          CancelLikeSenderAPI()
                                                              .cancel(
                                                                  accesToken: _prefs
                                                                      .getString(
                                                                          'AccessToken')!,
                                                                  postIndex: getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'post_index'])
                                                              .then((res) {
                                                            if (res.result[
                                                                    'status'] ==
                                                                10805) {
                                                              setState(() {
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['like']--;
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'isLike'] = false;
                                                              });
                                                            }
                                                          });
                                                        }
                                                      },
                                                      child: Row(
                                                        children: [
                                                          SvgAssets(
                                                            image:
                                                                'assets/icon/like.svg',
                                                            color: getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['isLike']
                                                                ? ColorsConfig()
                                                                    .primary()
                                                                : ColorsConfig()
                                                                    .textBlack1(),
                                                            width: 18.0,
                                                            height: 18.0,
                                                          ),
                                                          const SizedBox(
                                                              width: 10.0),
                                                          CustomTextBuilder(
                                                            text: numberFormat.format(
                                                                getSubscribePostListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'like'] +
                                                                    addLikeCount2),
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textBlack1(),
                                                            fontSize: 13.0.sp,
                                                            fontWeight:
                                                                FontWeight.w600,
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    // 댓글
                                                    MaterialButton(
                                                      onPressed: () {
                                                        if (getSubscribePostListData[
                                                                        'list']
                                                                    [index]
                                                                ['type'] ==
                                                            4) {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  NewsDetailScreen(
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                                postType: getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                              ),
                                                            ),
                                                          ).then(
                                                              (returns) async {
                                                            if (returns !=
                                                                null) {
                                                              if (returns[
                                                                  'ret']) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                          'list']
                                                                      .remove(getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]);
                                                                  currentPage2
                                                                      .removeAt(
                                                                          index);
                                                                });
                                                              }
                                                            } else {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              PostDetailDataAPI()
                                                                  .detail(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index] =
                                                                      value
                                                                          .result;
                                                                });
                                                              });
                                                            }
                                                          });
                                                        } else if (getSubscribePostListData[
                                                                        'list']
                                                                    [index]
                                                                ['type'] ==
                                                            5) {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  VoteDetailScreen(
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                                postType: getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                              ),
                                                            ),
                                                          ).then(
                                                              (returns) async {
                                                            if (returns !=
                                                                null) {
                                                              if (returns[
                                                                  'ret']) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                          'list']
                                                                      .remove(getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]);
                                                                  currentPage2
                                                                      .removeAt(
                                                                          index);
                                                                });
                                                              }
                                                            } else {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              PostDetailDataAPI()
                                                                  .detail(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index] =
                                                                      value
                                                                          .result;
                                                                });
                                                              });
                                                            }
                                                          });
                                                        } else {
                                                          Navigator.push(
                                                            context,
                                                            MaterialPageRoute(
                                                              builder: (context) =>
                                                                  PostingDetailScreen(
                                                                postIndex: getSubscribePostListData[
                                                                            'list']
                                                                        [index][
                                                                    'post_index'],
                                                                postType: getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type'],
                                                              ),
                                                            ),
                                                          ).then(
                                                              (returns) async {
                                                            if (returns !=
                                                                null) {
                                                              if (returns[
                                                                  'ret']) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                          'list']
                                                                      .remove(getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index]);
                                                                  currentPage2
                                                                      .removeAt(
                                                                          index);
                                                                });
                                                              }
                                                            } else {
                                                              final _prefs =
                                                                  await SharedPreferences
                                                                      .getInstance();

                                                              PostDetailDataAPI()
                                                                  .detail(
                                                                      accesToken:
                                                                          _prefs.getString(
                                                                              'AccessToken')!,
                                                                      postIndex:
                                                                          getSubscribePostListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                  .then(
                                                                      (value) {
                                                                setState(() {
                                                                  getSubscribePostListData[
                                                                              'list']
                                                                          [
                                                                          index] =
                                                                      value
                                                                          .result;
                                                                });
                                                              });
                                                            }
                                                          });
                                                        }
                                                      },
                                                      child: Row(
                                                        children: [
                                                          SvgAssets(
                                                            image:
                                                                'assets/icon/reply.svg',
                                                            color: ColorsConfig()
                                                                .textBlack1(),
                                                            width: 18.0,
                                                            height: 18.0,
                                                          ),
                                                          const SizedBox(
                                                              width: 10.0),
                                                          CustomTextBuilder(
                                                            text: numberFormat.format(
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['reply']),
                                                            fontColor:
                                                                ColorsConfig()
                                                                    .textBlack1(),
                                                            fontSize: 13.0.sp,
                                                            fontWeight:
                                                                FontWeight.w600,
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    // 선물
                                                    MaterialButton(
                                                      onPressed: () async {
                                                        final _prefs =
                                                            await SharedPreferences
                                                                .getInstance();

                                                        GetGiftListDataAPI()
                                                            .gift(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!)
                                                            .then((gifts) {
                                                          bool _hasClick =
                                                              false;

                                                          showModalBottomSheet(
                                                              context: context,
                                                              backgroundColor:
                                                                  ColorsConfig()
                                                                      .subBackground1(),
                                                              isScrollControlled:
                                                                  true,
                                                              shape:
                                                                  const RoundedRectangleBorder(
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .only(
                                                                  topLeft: Radius
                                                                      .circular(
                                                                          12.0),
                                                                  topRight: Radius
                                                                      .circular(
                                                                          12.0),
                                                                ),
                                                              ),
                                                              builder:
                                                                  (BuildContext
                                                                      context) {
                                                                int _giftTabIndex =
                                                                    0;

                                                                List<dynamic>
                                                                    _trophy =
                                                                    [];
                                                                List<dynamic>
                                                                    _reaction =
                                                                    [];
                                                                List<dynamic>
                                                                    _neckTrophy =
                                                                    [];

                                                                Map<String,
                                                                        dynamic>
                                                                    _selectedGift =
                                                                    {};

                                                                var _giftTabController =
                                                                    TabController(
                                                                  length: 4,
                                                                  vsync: this,
                                                                );
                                                                _giftTabController
                                                                    .addListener(
                                                                        () {
                                                                  if (_giftTabController
                                                                          .indexIsChanging ||
                                                                      _giftTabController
                                                                              .index !=
                                                                          _giftTabIndex) {
                                                                    setState(
                                                                        () {
                                                                      _giftTabIndex =
                                                                          _giftTabController
                                                                              .index;
                                                                    });
                                                                  }
                                                                });

                                                                for (int i = 0;
                                                                    i <
                                                                        gifts
                                                                            .result
                                                                            .length;
                                                                    i++) {
                                                                  if (gifts.result[
                                                                              i]
                                                                          [
                                                                          'item_type'] ==
                                                                      0) {
                                                                    _trophy.add(
                                                                        gifts.result[
                                                                            i]);
                                                                  } else if (gifts
                                                                              .result[i]
                                                                          [
                                                                          'item_type'] ==
                                                                      1) {
                                                                    _reaction.add(
                                                                        gifts.result[
                                                                            i]);
                                                                  } else if (gifts
                                                                              .result[i]
                                                                          [
                                                                          'item_type'] ==
                                                                      2) {
                                                                    _neckTrophy.add(
                                                                        gifts.result[
                                                                            i]);
                                                                  }
                                                                }

                                                                return StatefulBuilder(
                                                                  builder:
                                                                      (context,
                                                                          state) {
                                                                    return Container(
                                                                      height: _hasClick
                                                                          ? MediaQuery.of(context).size.height /
                                                                              1.72
                                                                          : MediaQuery.of(context).size.height /
                                                                              2,
                                                                      decoration:
                                                                          const BoxDecoration(
                                                                        borderRadius:
                                                                            BorderRadius.only(
                                                                          topLeft:
                                                                              Radius.circular(12.0),
                                                                          topRight:
                                                                              Radius.circular(12.0),
                                                                        ),
                                                                      ),
                                                                      child:
                                                                          Column(
                                                                        children: [
                                                                          Container(
                                                                            width:
                                                                                50.0,
                                                                            height:
                                                                                4.0,
                                                                            margin:
                                                                                const EdgeInsets.symmetric(vertical: 8.0),
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: ColorsConfig().textBlack2(),
                                                                              borderRadius: BorderRadius.circular(100.0),
                                                                            ),
                                                                          ),
                                                                          // 선물하기 타이틀
                                                                          Row(
                                                                            mainAxisAlignment:
                                                                                MainAxisAlignment.spaceBetween,
                                                                            children: [
                                                                              Container(
                                                                                padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 10.0),
                                                                                alignment: Alignment.centerLeft,
                                                                                child: CustomTextBuilder(
                                                                                  text: TextConstant.sendGiftText,
                                                                                  fontColor: ColorsConfig().textWhite1(),
                                                                                  fontSize: 22.0.sp,
                                                                                  fontWeight: FontWeight.w700,
                                                                                ),
                                                                              ),
                                                                              Container(
                                                                                margin: const EdgeInsets.only(right: 15.0),
                                                                                child: const HoldingBalanceWidget(),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          // 탭바
                                                                          Container(
                                                                            width:
                                                                                MediaQuery.of(context).size.width,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              border: Border(
                                                                                bottom: BorderSide(
                                                                                  width: 0.5,
                                                                                  color: ColorsConfig().border1(),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            child:
                                                                                TabBar(
                                                                              controller: _giftTabController,
                                                                              isScrollable: true,
                                                                              padding: const EdgeInsets.symmetric(horizontal: 20.0),
                                                                              indicatorColor: ColorsConfig().primary(),
                                                                              unselectedLabelColor: ColorsConfig().textWhite1(),
                                                                              unselectedLabelStyle: TextStyle(
                                                                                fontSize: 16.0.sp,
                                                                                fontWeight: FontWeight.w400,
                                                                              ),
                                                                              labelColor: ColorsConfig().primary(),
                                                                              labelStyle: TextStyle(
                                                                                fontSize: 16.0.sp,
                                                                                fontWeight: FontWeight.w700,
                                                                              ),
                                                                              onTap: (_) {
                                                                                state(() {
                                                                                  _hasClick = false;
                                                                                  _selectedGift = {};
                                                                                });
                                                                              },
                                                                              tabs: [
                                                                                Tab(
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.allText,
                                                                                  ),
                                                                                ),
                                                                                Tab(
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.trophyText,
                                                                                  ),
                                                                                ),
                                                                                Tab(
                                                                                  child: CustomTextBuilder(
                                                                                    text: TextConstant.reactionText,
                                                                                  ),
                                                                                ),
                                                                                Tab(
                                                                                  child: CustomTextBuilder(
                                                                                    text: '메달',
                                                                                  ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                          Expanded(
                                                                            child:
                                                                                Padding(
                                                                              padding: !_hasClick ? const EdgeInsets.fromLTRB(25.0, 25.0, 15.0, 20.0) : const EdgeInsets.fromLTRB(25.0, 25.0, 15.0, 0.0),
                                                                              child: TabBarView(
                                                                                controller: _giftTabController,
                                                                                physics: const NeverScrollableScrollPhysics(),
                                                                                children: [
                                                                                  ListView(
                                                                                    children: [
                                                                                      Wrap(
                                                                                        children: List.generate(gifts.result.length, (index) {
                                                                                          return InkWell(
                                                                                            splashColor: ColorsConfig.transparent,
                                                                                            highlightColor: ColorsConfig.transparent,
                                                                                            onTap: () {
                                                                                              state(() {
                                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                                  _hasClick = false;
                                                                                                  _selectedGift = {};
                                                                                                } else {
                                                                                                  _hasClick = true;
                                                                                                  _selectedGift = {
                                                                                                    "index": index,
                                                                                                    "item_index": gifts.result[index]['item_index'],
                                                                                                    "item_type": gifts.result[index]['item_type'],
                                                                                                    "item_type_name": gifts.result[index]['item_type_name'],
                                                                                                    "url": gifts.result[index]['url'],
                                                                                                    "description": gifts.result[index]['description'],
                                                                                                    "price": gifts.result[index]['price'],
                                                                                                  };
                                                                                                }
                                                                                              });
                                                                                            },
                                                                                            child: Container(
                                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                                              decoration: BoxDecoration(
                                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 0 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                                              ),
                                                                                              child: Column(
                                                                                                children: [
                                                                                                  Image(
                                                                                                    image: NetworkImage(
                                                                                                      gifts.result[index]['url'],
                                                                                                    ),
                                                                                                    filterQuality: FilterQuality.high,
                                                                                                    width: 65.0.w,
                                                                                                    height: 65.0.h,
                                                                                                  ),
                                                                                                  Container(
                                                                                                    margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                    child: CustomTextBuilder(
                                                                                                      text: '${gifts.result[index]['price']}',
                                                                                                      fontColor: ColorsConfig().textWhite1(),
                                                                                                      fontSize: 12.0.sp,
                                                                                                      fontWeight: FontWeight.w400,
                                                                                                    ),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  ListView(
                                                                                    children: [
                                                                                      Wrap(
                                                                                        children: List.generate(_trophy.length, (index) {
                                                                                          return InkWell(
                                                                                            splashColor: ColorsConfig.transparent,
                                                                                            highlightColor: ColorsConfig.transparent,
                                                                                            onTap: () {
                                                                                              state(() {
                                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                                  _hasClick = false;
                                                                                                  _selectedGift = {};
                                                                                                } else {
                                                                                                  _hasClick = true;
                                                                                                  _selectedGift = {
                                                                                                    "index": index,
                                                                                                    "item_index": _trophy[index]['item_index'],
                                                                                                    "item_type": _trophy[index]['item_type'],
                                                                                                    "item_type_name": _trophy[index]['item_type_name'],
                                                                                                    "url": _trophy[index]['url'],
                                                                                                    "description": _trophy[index]['description'],
                                                                                                    "price": _trophy[index]['price'],
                                                                                                  };
                                                                                                }
                                                                                              });
                                                                                            },
                                                                                            child: Container(
                                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                                              decoration: BoxDecoration(
                                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 1 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                                              ),
                                                                                              child: _trophy[index]['item_type'] == 0
                                                                                                  ? Column(
                                                                                                      children: [
                                                                                                        Image(
                                                                                                          image: NetworkImage(
                                                                                                            _trophy[index]['url'],
                                                                                                          ),
                                                                                                          filterQuality: FilterQuality.high,
                                                                                                          width: 65.0.w,
                                                                                                          height: 65.0.h,
                                                                                                        ),
                                                                                                        Container(
                                                                                                          margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: '${_trophy[index]['price']}',
                                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                                            fontSize: 12.0.sp,
                                                                                                            fontWeight: FontWeight.w400,
                                                                                                          ),
                                                                                                        ),
                                                                                                      ],
                                                                                                    )
                                                                                                  : null,
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  ListView(
                                                                                    children: [
                                                                                      Wrap(
                                                                                        children: List.generate(_reaction.length, (index) {
                                                                                          return InkWell(
                                                                                            splashColor: ColorsConfig.transparent,
                                                                                            highlightColor: ColorsConfig.transparent,
                                                                                            onTap: () {
                                                                                              state(() {
                                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                                  _hasClick = false;
                                                                                                  _selectedGift = {};
                                                                                                } else {
                                                                                                  _hasClick = true;
                                                                                                  _selectedGift = {
                                                                                                    "index": index,
                                                                                                    "item_index": _reaction[index]['item_index'],
                                                                                                    "item_type": _reaction[index]['item_type'],
                                                                                                    "item_type_name": _reaction[index]['item_type_name'],
                                                                                                    "url": _reaction[index]['url'],
                                                                                                    "description": _reaction[index]['description'],
                                                                                                    "price": _reaction[index]['price'],
                                                                                                  };
                                                                                                }
                                                                                              });
                                                                                            },
                                                                                            child: Container(
                                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                                              decoration: BoxDecoration(
                                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 2 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                                              ),
                                                                                              child: _reaction[index]['item_type'] == 1
                                                                                                  ? Column(
                                                                                                      children: [
                                                                                                        Image(
                                                                                                          image: NetworkImage(
                                                                                                            _reaction[index]['url'],
                                                                                                          ),
                                                                                                          filterQuality: FilterQuality.high,
                                                                                                          width: 65.0.w,
                                                                                                          height: 65.0.h,
                                                                                                        ),
                                                                                                        Container(
                                                                                                          margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: '${_reaction[index]['price']}',
                                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                                            fontSize: 12.0.sp,
                                                                                                            fontWeight: FontWeight.w400,
                                                                                                          ),
                                                                                                        ),
                                                                                                      ],
                                                                                                    )
                                                                                                  : null,
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  ListView(
                                                                                    children: [
                                                                                      Wrap(
                                                                                        children: List.generate(_neckTrophy.length, (index) {
                                                                                          return InkWell(
                                                                                            splashColor: ColorsConfig.transparent,
                                                                                            highlightColor: ColorsConfig.transparent,
                                                                                            onTap: () {
                                                                                              state(() {
                                                                                                if (_hasClick && _selectedGift['index'] == index) {
                                                                                                  _hasClick = false;
                                                                                                  _selectedGift = {};
                                                                                                } else {
                                                                                                  _hasClick = true;
                                                                                                  _selectedGift = {
                                                                                                    "index": index,
                                                                                                    "item_index": _neckTrophy[index]['item_index'],
                                                                                                    "item_type": _neckTrophy[index]['item_type'],
                                                                                                    "item_type_name": _neckTrophy[index]['item_type_name'],
                                                                                                    "url": _neckTrophy[index]['url'],
                                                                                                    "description": _neckTrophy[index]['description'],
                                                                                                    "price": _neckTrophy[index]['price'],
                                                                                                  };
                                                                                                }
                                                                                              });
                                                                                            },
                                                                                            child: Container(
                                                                                              margin: EdgeInsets.only(right: 10.0.w),
                                                                                              decoration: BoxDecoration(
                                                                                                color: _selectedGift['index'] == index && _giftTabIndex == 3 ? ColorsConfig().subBackgroundBlack() : null,
                                                                                                borderRadius: BorderRadius.circular(14.0),
                                                                                              ),
                                                                                              child: _neckTrophy[index]['item_type'] == 2
                                                                                                  ? Column(
                                                                                                      children: [
                                                                                                        Image(
                                                                                                          image: NetworkImage(
                                                                                                            _neckTrophy[index]['url'],
                                                                                                          ),
                                                                                                          filterQuality: FilterQuality.high,
                                                                                                          width: 65.0.w,
                                                                                                          height: 65.0.h,
                                                                                                        ),
                                                                                                        Container(
                                                                                                          margin: const EdgeInsets.symmetric(vertical: 5.0),
                                                                                                          child: CustomTextBuilder(
                                                                                                            text: '${_neckTrophy[index]['price']}',
                                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                                            fontSize: 12.0.sp,
                                                                                                            fontWeight: FontWeight.w400,
                                                                                                          ),
                                                                                                        ),
                                                                                                      ],
                                                                                                    )
                                                                                                  : null,
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          ),
                                                                          _hasClick == true
                                                                              ? Container(
                                                                                  height: 157.0,
                                                                                  padding: const EdgeInsets.fromLTRB(20.0, 10.0, 20.0, 30.0),
                                                                                  decoration: BoxDecoration(
                                                                                    color: ColorsConfig().subBackground1(),
                                                                                    boxShadow: [
                                                                                      BoxShadow(
                                                                                        color: ColorsConfig().textWhite1(opacity: 0.16),
                                                                                        blurRadius: 10.0,
                                                                                        offset: const Offset(0.0, -2.0),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  child: Column(
                                                                                    children: [
                                                                                      Row(
                                                                                        children: [
                                                                                          Image(
                                                                                            image: NetworkImage(
                                                                                              '${_selectedGift['url']}',
                                                                                            ),
                                                                                            filterQuality: FilterQuality.high,
                                                                                            width: 65.0.w,
                                                                                            height: 65.0.h,
                                                                                          ),
                                                                                          const SizedBox(width: 32.0),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              CustomTextBuilder(
                                                                                                text: '${_selectedGift['description']}',
                                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                                fontSize: 16.0.sp,
                                                                                                fontWeight: FontWeight.w400,
                                                                                              ),
                                                                                              CustomTextBuilder(
                                                                                                text: numberFormat.format(_selectedGift['price']),
                                                                                                fontColor: ColorsConfig().textWhite1(),
                                                                                                fontSize: 12.0.sp,
                                                                                                fontWeight: FontWeight.w400,
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      const SizedBox(height: 10.0),
                                                                                      InkWell(
                                                                                        onTap: () {
                                                                                          if (_selectedGift['price'] == 0) {
                                                                                            SendGiftDataAPI().gift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: getSubscribePostListData['list'][index]['post_index']).then((value) {
                                                                                              int? _existIndex;

                                                                                              switch (value.result['status']) {
                                                                                                case 10200:
                                                                                                  setState(() {
                                                                                                    if (getSubscribePostListData['list'][index]['gift'].length == 0) {
                                                                                                      getSubscribePostListData['list'][index]['gift'].add({
                                                                                                        "image": _selectedGift['url'],
                                                                                                        "gift_count": 1,
                                                                                                      });
                                                                                                    } else {
                                                                                                      for (int i = 0; i < getSubscribePostListData['list'][index]['gift'].length; i++) {
                                                                                                        if (getSubscribePostListData['list'][index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                                          _existIndex = i;
                                                                                                          break;
                                                                                                        }
                                                                                                      }

                                                                                                      if (_existIndex != null) {
                                                                                                        getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] = getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                                      } else {
                                                                                                        getSubscribePostListData['list'][index]['gift'].insert(0, {
                                                                                                          "image": _selectedGift['url'],
                                                                                                          "gift_count": 1,
                                                                                                        });
                                                                                                      }
                                                                                                    }
                                                                                                  });
                                                                                                  Navigator.pop(context);
                                                                                                  break;
                                                                                                case 10201:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText1,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                                case 10202:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText2,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                                case 10203:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText3,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                                case 10204:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText4,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                              }
                                                                                            });
                                                                                          } else {
                                                                                            SendPricedGiftDataAPI().pricedGift(accesToken: _prefs.getString('AccessToken')!, itemIndex: _selectedGift['item_index'], postIndex: getSubscribePostListData['list'][index]['post_index']).then((value) {
                                                                                              int? _existIndex;

                                                                                              switch (value.result['status']) {
                                                                                                case 10201:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText1,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                                case 10202:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText2,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                                case 10203:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText3,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                                case 10210:
                                                                                                  setState(() {
                                                                                                    if (getSubscribePostListData['list'][index]['gift'].length == 0) {
                                                                                                      getSubscribePostListData['list'][index]['gift'].add({
                                                                                                        "image": _selectedGift['url'],
                                                                                                        "gift_count": 1,
                                                                                                      });
                                                                                                    } else {
                                                                                                      for (int i = 0; i < getSubscribePostListData['list'][index]['gift'].length; i++) {
                                                                                                        if (getSubscribePostListData['list'][index]['gift'][i]['image'].contains(_selectedGift['url'])) {
                                                                                                          _existIndex = i;
                                                                                                          break;
                                                                                                        }
                                                                                                      }

                                                                                                      if (_existIndex != null) {
                                                                                                        getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] = getSubscribePostListData['list'][index]['gift'][_existIndex]['gift_count'] + 1;
                                                                                                      } else {
                                                                                                        getSubscribePostListData['list'][index]['gift'].insert(0, {
                                                                                                          "image": _selectedGift['url'],
                                                                                                          "gift_count": 1,
                                                                                                        });
                                                                                                      }
                                                                                                    }
                                                                                                  });
                                                                                                  Navigator.pop(context);
                                                                                                  break;
                                                                                                case 10211:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText5,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                                case 10212:
                                                                                                  ToastBuilder().toast(
                                                                                                    Container(
                                                                                                      width: MediaQuery.of(context).size.width,
                                                                                                      padding: const EdgeInsets.all(14.0),
                                                                                                      margin: const EdgeInsets.symmetric(horizontal: 30.0),
                                                                                                      decoration: BoxDecoration(
                                                                                                        color: ColorsConfig.defaultToast.withOpacity(0.9),
                                                                                                        borderRadius: BorderRadius.circular(6.0),
                                                                                                      ),
                                                                                                      child: CustomTextBuilder(
                                                                                                        text: TextConstant.giftSendErrorText6,
                                                                                                        fontColor: ColorsConfig.defaultWhite,
                                                                                                        fontSize: 14.0.sp,
                                                                                                      ),
                                                                                                    ),
                                                                                                  );
                                                                                                  break;
                                                                                              }
                                                                                            });
                                                                                          }
                                                                                        },
                                                                                        child: Container(
                                                                                          width: MediaQuery.of(context).size.width,
                                                                                          height: 42.0,
                                                                                          decoration: BoxDecoration(
                                                                                            // color: ColorsConfig().primary(),
                                                                                            borderRadius: BorderRadius.circular(100.0),
                                                                                            gradient: LinearGradient(
                                                                                              colors: [
                                                                                                ColorsConfig().avatarButtonBackground1(),
                                                                                                ColorsConfig().avatarButtonBackground2(),
                                                                                              ],
                                                                                              begin: Alignment.centerLeft,
                                                                                              end: Alignment.centerRight,
                                                                                            ),
                                                                                          ),
                                                                                          child: Center(
                                                                                            child: CustomTextBuilder(
                                                                                              text: TextConstant.sendText,
                                                                                              fontColor: ColorsConfig().background(),
                                                                                              fontSize: 16.0.sp,
                                                                                              fontWeight: FontWeight.w700,
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                )
                                                                              : Container(),
                                                                        ],
                                                                      ),
                                                                    );
                                                                  },
                                                                );
                                                              });
                                                        });
                                                      },
                                                      child: SvgAssets(
                                                        image:
                                                            'assets/icon/gift.svg',
                                                        color: ColorsConfig()
                                                            .textBlack1(),
                                                        width: 18.0,
                                                        height: 18.0,
                                                      ),
                                                    ),
                                                    // 공유
                                                    MaterialButton(
                                                      onPressed: () async {
                                                        var shortLink = await DeepLinkBuilder()
                                                            .getShortLink(
                                                                'share',
                                                                '${getSubscribePostListData['list'][index]['post_index']}',
                                                                getSubscribePostListData[
                                                                            'list']
                                                                        [index]
                                                                    ['type']);

                                                        Share.share(
                                                          '${getSubscribePostListData['list'][index]['title']}\n$shortLink',
                                                          sharePositionOrigin:
                                                              Rect.fromLTWH(
                                                                  0,
                                                                  0,
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                                  MediaQuery.of(
                                                                              context)
                                                                          .size
                                                                          .height /
                                                                      2),
                                                        );
                                                      },
                                                      child: SvgAssets(
                                                        image:
                                                            'assets/icon/share.svg',
                                                        color: ColorsConfig()
                                                            .textBlack1(),
                                                        width: 18.0,
                                                        height: 18.0,
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                              ],
                                            ),
                                          );
                                        }
                                      } else {
                                        SharedPreferences.getInstance()
                                            .then((_prefs) {
                                          if (selectedUserIndex == 0) {
                                            GetSubscribePostListAPI()
                                                .subscribePostList(
                                                    accesToken: _prefs
                                                        .getString(
                                                            'AccessToken')!,
                                                    cursor:
                                                        getSubscribePostListData[
                                                                    'list']
                                                                [index - 1]
                                                            ['post_index'])
                                                .then((value) {
                                              for (int i = 0;
                                                  i <
                                                      value.result['list']
                                                          .length;
                                                  i++) {
                                                setState(() {
                                                  getSubscribePostListData[
                                                          'list']
                                                      .add(value.result['list']
                                                          [i]);
                                                  currentPage2.add(0);
                                                });
                                              }
                                            });
                                          } else {
                                            GetSubscribePostListAPI()
                                                .subscribePostList(
                                                    accesToken: _prefs
                                                        .getString(
                                                            'AccessToken')!,
                                                    cursor:
                                                        getSubscribePostListData[
                                                                    'list']
                                                                [index - 1]
                                                            ['post_index'],
                                                    userIndex:
                                                        selectedUserIndex)
                                                .then((value) {
                                              for (int i = 0;
                                                  i <
                                                      value.result['list']
                                                          .length;
                                                  i++) {
                                                setState(() {
                                                  getSubscribePostListData[
                                                          'list']
                                                      .add(value.result['list']
                                                          [i]);
                                                  currentPage2.add(0);
                                                });
                                              }
                                            });
                                          }
                                        });
                                        return Container();
                                      }
                                    },
                                  ),
                                )
                              : Column(
                                  children: [
                                    Container(
                                      height: 88.0,
                                      color: ColorsConfig().subBackground1(),
                                      child: Row(
                                        children: [
                                          Expanded(
                                            child: ListView.builder(
                                              scrollDirection: Axis.horizontal,
                                              itemCount:
                                                  getSubscribePostListData[
                                                          'subscribe']
                                                      .length,
                                              itemBuilder: (context, hor) {
                                                return InkWell(
                                                  onTap: () async {
                                                    final _prefs =
                                                        await SharedPreferences
                                                            .getInstance();

                                                    setState(() {
                                                      if (selectedUserIndex !=
                                                          getSubscribePostListData[
                                                                      'subscribe']
                                                                  [hor]
                                                              ['user_index']) {
                                                        selectedUserIndex =
                                                            getSubscribePostListData[
                                                                    'subscribe']
                                                                [
                                                                hor]['user_index'];

                                                        GetSubscribePostListAPI()
                                                            .subscribePostList(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!,
                                                                userIndex:
                                                                    selectedUserIndex)
                                                            .then((value) {
                                                          setState(() {
                                                            currentPage2
                                                                .clear();
                                                            getSubscribePostListData =
                                                                value.result;
                                                            for (int i = 0;
                                                                i <
                                                                    value
                                                                        .result[
                                                                            'list']
                                                                        .length;
                                                                i++) {
                                                              currentPage2
                                                                  .add(0);
                                                            }
                                                          });
                                                        });
                                                      } else {
                                                        selectedUserIndex = 0;

                                                        GetSubscribePostListAPI()
                                                            .subscribePostList(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!)
                                                            .then((value) {
                                                          setState(() {
                                                            currentPage2
                                                                .clear();
                                                            getSubscribePostListData =
                                                                value.result;
                                                            for (int i = 0;
                                                                i <
                                                                    value
                                                                        .result[
                                                                            'list']
                                                                        .length;
                                                                i++) {
                                                              currentPage2
                                                                  .add(0);
                                                            }
                                                          });
                                                        });
                                                      }
                                                    });
                                                  },
                                                  child: Stack(
                                                    children: [
                                                      Container(
                                                        margin: hor == 0
                                                            ? const EdgeInsets
                                                                .only(
                                                                left: 15.0,
                                                                right: 4.0)
                                                            : const EdgeInsets
                                                                .symmetric(
                                                                horizontal:
                                                                    4.0),
                                                        child: Column(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .center,
                                                          children: [
                                                            Container(
                                                              width: 52.5,
                                                              height: 52.5,
                                                              margin:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      bottom:
                                                                          2.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .userIconBackground(),
                                                                border: selectedUserIndex ==
                                                                        getSubscribePostListData['subscribe'][hor]
                                                                            [
                                                                            'user_index']
                                                                    ? Border
                                                                        .all(
                                                                        width:
                                                                            2.0,
                                                                        color: ColorsConfig()
                                                                            .primary(),
                                                                      )
                                                                    : null,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            100.0),
                                                                image:
                                                                    DecorationImage(
                                                                  image:
                                                                      NetworkImage(
                                                                    getSubscribePostListData['subscribe']
                                                                            [
                                                                            hor]
                                                                        [
                                                                        'avatar_url'],
                                                                    scale: 5.0,
                                                                  ),
                                                                  filterQuality:
                                                                      FilterQuality
                                                                          .high,
                                                                  fit: BoxFit
                                                                      .none,
                                                                  alignment:
                                                                      const Alignment(
                                                                          0.0,
                                                                          -0.5),
                                                                ),
                                                              ),
                                                            ),
                                                            SizedBox(
                                                              width: 60.0,
                                                              child: Center(
                                                                child:
                                                                    CustomTextBuilder(
                                                                  text: getSubscribePostListData[
                                                                              'subscribe']
                                                                          [hor][
                                                                      'user_nick'],
                                                                  fontColor:
                                                                      ColorsConfig()
                                                                          .textWhite1(),
                                                                  fontSize:
                                                                      12.0.sp,
                                                                  maxLines: 1,
                                                                  textOverflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      selectedUserIndex != 0 &&
                                                              selectedUserIndex !=
                                                                  getSubscribePostListData[
                                                                              'subscribe']
                                                                          [hor][
                                                                      'user_index']
                                                          ? Container(
                                                              width: 60.5,
                                                              height:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .height,
                                                              color: ColorsConfig()
                                                                  .subBackground1(
                                                                      opacity:
                                                                          0.5),
                                                            )
                                                          : Container(),
                                                    ],
                                                  ),
                                                );
                                              },
                                            ),
                                          ),
                                          InkWell(
                                            onTap: () {
                                              Navigator.pushNamed(
                                                  context, '/subscribe',
                                                  arguments: {
                                                    'tabIndex': 1,
                                                    'user_nickname':
                                                        getProfileData['nick'],
                                                  }).then((value) async {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                GetSubscribePostListAPI()
                                                    .subscribePostList(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!)
                                                    .then((value) {
                                                  setState(() {
                                                    currentPage2.clear();
                                                    getSubscribePostListData =
                                                        value.result;
                                                    for (int i = 0;
                                                        i <
                                                            value.result['list']
                                                                .length;
                                                        i++) {
                                                      currentPage2.add(0);
                                                    }
                                                  });
                                                });
                                              });
                                            },
                                            child: Container(
                                              width: 73.0,
                                              color: ColorsConfig()
                                                  .subBackground1(),
                                              child: Center(
                                                child: CustomTextBuilder(
                                                  text: TextConstant.allText,
                                                  fontColor:
                                                      ColorsConfig().primary(),
                                                  fontSize: 14.0.sp,
                                                  fontWeight: FontWeight.w400,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    Expanded(
                                      child: Center(
                                        child: Container(
                                          color: ColorsConfig().background(),
                                          child: Center(
                                            child: Column(
                                              mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                              children: [
                                                const SizedBox(
                                                  width: 100.0,
                                                  height: 100.0,
                                                  child: Image(
                                                    image: AssetImage(
                                                        'assets/img/none_data.png'),
                                                    filterQuality:
                                                        FilterQuality.high,
                                                  ),
                                                ),
                                                const SizedBox(height: 20.0),
                                                CustomTextBuilder(
                                                  text: TextConstant
                                                      .noContentsToSubscribeText,
                                                  fontColor: ColorsConfig()
                                                      .textWhite1(),
                                                  fontSize: 16.0.sp,
                                                  fontWeight: FontWeight.w400,
                                                )
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                        )
                      : Expanded(
                          child: Container(
                            color: ColorsConfig().background(),
                            child: Center(
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  const SizedBox(
                                    width: 82.0,
                                    height: 82.0,
                                    child: Image(
                                      image: AssetImage(
                                          'assets/img/none_subscribe.png'),
                                      filterQuality: FilterQuality.high,
                                    ),
                                  ),
                                  const SizedBox(height: 20.0),
                                  CustomTextBuilder(
                                    text: TextConstant.noFollowText,
                                    fontColor: ColorsConfig().textWhite1(),
                                    fontSize: 16.0.sp,
                                    fontWeight: FontWeight.w400,
                                  ),
                                  CustomTextBuilder(
                                    text:
                                        TextConstant.checkSubscribeContentsText,
                                    fontColor: ColorsConfig().textBlack2(),
                                    fontSize: 16.0.sp,
                                    fontWeight: FontWeight.w400,
                                  )
                                ],
                              ),
                            ),
                          ),
                        ),
                ],
              ),
            ],
          ),
        ),
      );
    }
    return Container();
  }

  Widget galleryLayoutWidget() {
    if (feedListData.isNotEmpty) {
      return Expanded(
        child: Container(
          color: ColorsConfig().background(),
          child: TabBarView(
            controller: _tabController,
            children: [
              // 실시간
              RefreshIndicator(
                onRefresh: () async {
                  final _prefs = await SharedPreferences.getInstance();

                  if (selectedText != '') {
                    GetFeedListAPI()
                        .feed(
                            accesToken: _prefs.getString('AccessToken')!,
                            q: selectedText)
                        .then((value) {
                      setState(() {
                        feedListData = value.result['data'];
                      });
                    });
                  } else {
                    GetFeedListAPI()
                        .feed(accesToken: _prefs.getString('AccessToken')!)
                        .then((value) {
                      setState(() {
                        feedListData = value.result['data'];
                      });
                    });
                  }
                },
                color: ColorsConfig().textWhite1(),
                backgroundColor: ColorsConfig().subBackgroundBlack(),
                child: MasonryGridView.builder(
                  controller: widget.galleryScrollController,
                  itemCount: feedListData.length + 1,
                  gridDelegate:
                      const SliverSimpleGridDelegateWithFixedCrossAxisCount(
                    crossAxisCount: 2,
                  ),
                  crossAxisSpacing: 12.0,
                  padding: const EdgeInsets.symmetric(
                      horizontal: 10.5, vertical: 8.5),
                  itemBuilder: (context, index) {
                    if (index < feedListData.length) {
                      if (index.isEven) {
                        int _giftTotalCount = 0;
                        if (feedListData[index]['gift'].isNotEmpty) {
                          for (int i = 0;
                              i < feedListData[index]['gift'].length;
                              i++) {
                            _giftTotalCount += feedListData[index]['gift'][i]
                                ['gift_count'] as int;
                          }
                        }
                        return InkWell(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => PostingDetailScreen(
                                  postIndex: feedListData[index]['post_index'],
                                  postType: 1,
                                ),
                              ),
                            );
                          },
                          child: Container(
                            width:
                                (MediaQuery.of(context).size.width - 35.0) / 2,
                            margin: index != 0
                                ? const EdgeInsets.only(top: 11.0)
                                : null,
                            decoration: BoxDecoration(
                              color: ColorsConfig().subBackground1(),
                              borderRadius: BorderRadius.circular(8.0),
                              boxShadow: [
                                BoxShadow(
                                  color: ColorsConfig().linkIconBackground(),
                                  blurRadius: 9.0,
                                  offset: const Offset(0.0, 0.0),
                                ),
                              ],
                            ),
                            child: Column(
                              children: [
                                // 프로필 이미지, 닉네임, 뱃지, 더보기
                                Padding(
                                  padding: const EdgeInsets.symmetric(
                                      horizontal: 10.0, vertical: 7.0),
                                  child: Row(
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceBetween,
                                    children: [
                                      // 프로필 이미지, 닉네임
                                      InkWell(
                                        onTap: () {
                                          if (feedListData[index]['isMe']) {
                                            Navigator.pushNamed(
                                                context, '/my_profile',
                                                arguments: {
                                                  'onNavigator': true,
                                                });
                                          } else {
                                            Navigator.pushNamed(
                                                context, '/your_profile',
                                                arguments: {
                                                  'user_index':
                                                      feedListData[index]
                                                          ['user_index'],
                                                  'user_nickname':
                                                      feedListData[index]
                                                          ['nick'],
                                                });
                                          }
                                        },
                                        child: Row(
                                          crossAxisAlignment:
                                              CrossAxisAlignment.center,
                                          children: [
                                            // 프로필 이미지
                                            Container(
                                              width: 24.0,
                                              height: 24.0,
                                              margin: const EdgeInsets.only(
                                                  right: 6.0),
                                              decoration: BoxDecoration(
                                                color: ColorsConfig()
                                                    .userIconBackground(),
                                                borderRadius:
                                                    BorderRadius.circular(12.0),
                                                image: DecorationImage(
                                                  image: NetworkImage(
                                                    feedListData[index]
                                                        ['avatar_url'],
                                                    scale: 9.0,
                                                  ),
                                                  filterQuality:
                                                      FilterQuality.high,
                                                  fit: BoxFit.none,
                                                  alignment: const Alignment(
                                                      0.0, -0.3),
                                                ),
                                              ),
                                            ),
                                            // 닉네임
                                            CustomTextBuilder(
                                              text:
                                                  '${feedListData[index]['nick']}',
                                              fontColor:
                                                  ColorsConfig().textWhite1(),
                                              fontSize: 14.0.sp,
                                              fontWeight: FontWeight.w700,
                                            ),
                                          ],
                                        ),
                                      ),
                                      // 뱃지
                                      feedListData[index]['gift'].isNotEmpty
                                          ? InkWell(
                                              onTap: () async {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                GetGiftHistoryListDataAPI()
                                                    .giftHistory(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!,
                                                        postIndex:
                                                            feedListData[index]
                                                                ['post_index'])
                                                    .then((history) {
                                                  showModalBottomSheet(
                                                      context: context,
                                                      backgroundColor:
                                                          ColorsConfig()
                                                              .subBackground1(),
                                                      shape:
                                                          const RoundedRectangleBorder(
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  12.0),
                                                          topRight:
                                                              Radius.circular(
                                                                  12.0),
                                                        ),
                                                      ),
                                                      builder: (BuildContext
                                                          context) {
                                                        return SafeArea(
                                                          child: Container(
                                                            decoration:
                                                                const BoxDecoration(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .only(
                                                                topLeft: Radius
                                                                    .circular(
                                                                        12.0),
                                                                topRight: Radius
                                                                    .circular(
                                                                        12.0),
                                                              ),
                                                            ),
                                                            child: Column(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              children: [
                                                                Container(
                                                                  width: 50.0,
                                                                  height: 4.0,
                                                                  margin: const EdgeInsets
                                                                      .symmetric(
                                                                      vertical:
                                                                          8.0),
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: ColorsConfig()
                                                                        .textBlack2(),
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            100.0),
                                                                  ),
                                                                ),
                                                                Center(
                                                                  child:
                                                                      Container(
                                                                    width: MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .width,
                                                                    padding: const EdgeInsets.only(
                                                                        left:
                                                                            20.0,
                                                                        top:
                                                                            10.0,
                                                                        right:
                                                                            20.0,
                                                                        bottom:
                                                                            15.0),
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      border:
                                                                          Border(
                                                                        bottom:
                                                                            BorderSide(
                                                                          width:
                                                                              0.5,
                                                                          color:
                                                                              ColorsConfig().border1(),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .giftHistoryText,
                                                                      fontColor:
                                                                          ColorsConfig()
                                                                              .textWhite1(),
                                                                      fontSize:
                                                                          18.0.sp,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .w600,
                                                                    ),
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  child: ListView
                                                                      .builder(
                                                                          itemCount: history
                                                                              .result[
                                                                                  'users']
                                                                              .length,
                                                                          itemBuilder:
                                                                              (context, historyIndex) {
                                                                            return Container(
                                                                              width: MediaQuery.of(context).size.width,
                                                                              height: 65.0,
                                                                              padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                              decoration: BoxDecoration(
                                                                                border: Border(
                                                                                  bottom: BorderSide(
                                                                                    width: 0.5,
                                                                                    color: ColorsConfig().border1(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              child: Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: InkWell(
                                                                                      onTap: () {
                                                                                        Navigator.pop(context);
                                                                                        if (history.result['users'][historyIndex]['isMe']) {
                                                                                          Navigator.pushNamed(context, '/my_profile', arguments: {
                                                                                            'onNavigator': true,
                                                                                          });
                                                                                        } else {
                                                                                          Navigator.pushNamed(context, '/your_profile', arguments: {
                                                                                            'user_index': history.result['users'][historyIndex]['user_index'],
                                                                                            'user_nickname': history.result['users'][historyIndex]['nick'],
                                                                                          });
                                                                                        }
                                                                                      },
                                                                                      child: Row(
                                                                                        children: [
                                                                                          // 아바타 이미지
                                                                                          Container(
                                                                                            width: 35.0,
                                                                                            height: 35.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: ColorsConfig().userIconBackground(),
                                                                                              borderRadius: BorderRadius.circular(17.5),
                                                                                              image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                  ? DecorationImage(
                                                                                                      image: NetworkImage(
                                                                                                        history.result['users'][historyIndex]['avatar'],
                                                                                                        scale: 7.0,
                                                                                                      ),
                                                                                                      filterQuality: FilterQuality.high,
                                                                                                      fit: BoxFit.none,
                                                                                                      alignment: const Alignment(0.0, -0.3),
                                                                                                    )
                                                                                                  : null,
                                                                                            ),
                                                                                          ),
                                                                                          const SizedBox(width: 15.0),
                                                                                          CustomTextBuilder(
                                                                                            text: '${history.result['users'][historyIndex]['nick']}',
                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                            fontSize: 16.0.sp,
                                                                                            fontWeight: FontWeight.w400,
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  Expanded(
                                                                                    child: ListView.builder(
                                                                                      scrollDirection: Axis.horizontal,
                                                                                      itemCount: history.result['gifts'].length,
                                                                                      itemBuilder: (context, giftHistory) {
                                                                                        if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                          return Container();
                                                                                        }
                                                                                        return Row(
                                                                                          children: [
                                                                                            Image(
                                                                                              image: NetworkImage(
                                                                                                history.result['gifts'][giftHistory]['image'],
                                                                                              ),
                                                                                            ),
                                                                                            const SizedBox(width: 4.0),
                                                                                            CustomTextBuilder(
                                                                                              text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                              fontColor: ColorsConfig().textBlack2(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w700,
                                                                                            ),
                                                                                            const SizedBox(width: 4.0),
                                                                                          ],
                                                                                        );
                                                                                      },
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            );
                                                                          }),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        );
                                                      });
                                                });
                                              },
                                              child: Row(
                                                children: [
                                                  // 뱃지
                                                  Container(
                                                    width: 18.0,
                                                    height: 18.0,
                                                    margin:
                                                        const EdgeInsets.only(
                                                            right: 4.0),
                                                    decoration: BoxDecoration(
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              9.0),
                                                    ),
                                                    child: Image(
                                                      image: NetworkImage(
                                                        feedListData[index]
                                                                ['gift'][0]
                                                            ['image'],
                                                      ),
                                                    ),
                                                  ),
                                                  // 뱃지 개수
                                                  CustomTextBuilder(
                                                    text: '+$_giftTotalCount',
                                                    fontColor: ColorsConfig()
                                                        .textWhite1(),
                                                    fontSize: 13.0.sp,
                                                    fontWeight: FontWeight.w400,
                                                    height: 1.0,
                                                  ),
                                                ],
                                              ),
                                            )
                                          : Container(),
                                    ],
                                  ),
                                ),
                                // 포스트 이미지
                                Image(
                                  image: feedListData[index]['category'] == 'i'
                                      ? NetworkImage(
                                          feedListData[index]['image'][0])
                                      : NetworkImage(
                                          feedListData[index]['sub_link']),
                                  fit: BoxFit.cover,
                                  width: MediaQuery.of(context).size.width,
                                ),
                                // 포스트 타이틀
                                Container(
                                  width: MediaQuery.of(context).size.width,
                                  padding: const EdgeInsets.symmetric(
                                      horizontal: 10.0, vertical: 12.0),
                                  child: ExtendedText(
                                    '${feedListData[index]['title']}',
                                    style: TextStyle(
                                      color: ColorsConfig().textWhite1(),
                                      fontSize: 15.0.sp,
                                      fontWeight: FontWeight.w400,
                                    ),
                                    maxLines: 2,
                                    textScaleFactor: 1.0,
                                    overflowWidget: TextOverflowWidget(
                                      position: TextOverflowPosition.end,
                                      align: TextOverflowAlign.center,
                                      child: Row(
                                        mainAxisSize: MainAxisSize.min,
                                        children: <Widget>[
                                          CustomTextBuilder(
                                            text: '\u2026 ',
                                            fontColor:
                                                ColorsConfig().textWhite1(),
                                          ),
                                          CustomTextBuilder(
                                            text: TextConstant.onlyMoreReadText,
                                            fontColor:
                                                ColorsConfig().textBlack2(),
                                            fontSize: 10.0.sp,
                                            fontWeight: FontWeight.w400,
                                          )
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                        );
                      } else {
                        int _giftTotalCount = 0;
                        if (feedListData[index]['gift'].isNotEmpty) {
                          for (int i = 0;
                              i < feedListData[index]['gift'].length;
                              i++) {
                            _giftTotalCount += feedListData[index]['gift'][i]
                                ['gift_count'] as int;
                          }
                        }
                        return InkWell(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => PostingDetailScreen(
                                  postIndex: feedListData[index]['post_index'],
                                  postType: 1,
                                ),
                              ),
                            );
                          },
                          child: Container(
                            width:
                                (MediaQuery.of(context).size.width - 35.0) / 2,
                            margin: index != 1
                                ? const EdgeInsets.only(top: 11.0)
                                : null,
                            decoration: BoxDecoration(
                              color: ColorsConfig().subBackground1(),
                              borderRadius: BorderRadius.circular(8.0),
                              boxShadow: [
                                BoxShadow(
                                  color: ColorsConfig().linkIconBackground(),
                                  blurRadius: 9.0,
                                  offset: const Offset(0.0, 0.0),
                                ),
                              ],
                            ),
                            child: Column(
                              children: [
                                // 프로필 이미지, 닉네임, 뱃지, 더보기
                                Padding(
                                  padding: const EdgeInsets.symmetric(
                                      horizontal: 10.0, vertical: 7.0),
                                  child: Row(
                                    mainAxisAlignment:
                                        MainAxisAlignment.spaceBetween,
                                    children: [
                                      // 프로필 이미지, 닉네임
                                      Row(
                                        crossAxisAlignment:
                                            CrossAxisAlignment.center,
                                        children: [
                                          // 프로필 이미지
                                          Container(
                                            width: 24.0,
                                            height: 24.0,
                                            margin: const EdgeInsets.only(
                                                right: 6.0),
                                            decoration: BoxDecoration(
                                              color: ColorsConfig()
                                                  .userIconBackground(),
                                              borderRadius:
                                                  BorderRadius.circular(12.0),
                                              image: DecorationImage(
                                                image: NetworkImage(
                                                  feedListData[index]
                                                      ['avatar_url'],
                                                  scale: 9.0,
                                                ),
                                                filterQuality:
                                                    FilterQuality.high,
                                                fit: BoxFit.none,
                                                alignment:
                                                    const Alignment(0.0, -0.3),
                                              ),
                                            ),
                                          ),
                                          // 닉네임
                                          CustomTextBuilder(
                                            text:
                                                '${feedListData[index]['nick']}',
                                            fontColor:
                                                ColorsConfig().textWhite1(),
                                            fontSize: 14.0.sp,
                                            fontWeight: FontWeight.w700,
                                          ),
                                        ],
                                      ),
                                      // 뱃지
                                      feedListData[index]['gift'].isNotEmpty
                                          ? InkWell(
                                              onTap: () async {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                GetGiftHistoryListDataAPI()
                                                    .giftHistory(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!,
                                                        postIndex:
                                                            feedListData[index]
                                                                ['post_index'])
                                                    .then((history) {
                                                  showModalBottomSheet(
                                                      context: context,
                                                      backgroundColor:
                                                          ColorsConfig()
                                                              .subBackground1(),
                                                      shape:
                                                          const RoundedRectangleBorder(
                                                        borderRadius:
                                                            BorderRadius.only(
                                                          topLeft:
                                                              Radius.circular(
                                                                  12.0),
                                                          topRight:
                                                              Radius.circular(
                                                                  12.0),
                                                        ),
                                                      ),
                                                      builder: (BuildContext
                                                          context) {
                                                        return SafeArea(
                                                          child: Container(
                                                            decoration:
                                                                const BoxDecoration(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .only(
                                                                topLeft: Radius
                                                                    .circular(
                                                                        12.0),
                                                                topRight: Radius
                                                                    .circular(
                                                                        12.0),
                                                              ),
                                                            ),
                                                            child: Column(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .min,
                                                              children: [
                                                                Container(
                                                                  width: 50.0,
                                                                  height: 4.0,
                                                                  margin: const EdgeInsets
                                                                      .symmetric(
                                                                      vertical:
                                                                          8.0),
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: ColorsConfig()
                                                                        .textBlack2(),
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            100.0),
                                                                  ),
                                                                ),
                                                                Center(
                                                                  child:
                                                                      Container(
                                                                    width: MediaQuery.of(
                                                                            context)
                                                                        .size
                                                                        .width,
                                                                    padding: const EdgeInsets.only(
                                                                        left:
                                                                            20.0,
                                                                        top:
                                                                            10.0,
                                                                        right:
                                                                            20.0,
                                                                        bottom:
                                                                            15.0),
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      border:
                                                                          Border(
                                                                        bottom:
                                                                            BorderSide(
                                                                          width:
                                                                              0.5,
                                                                          color:
                                                                              ColorsConfig().border1(),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    child:
                                                                        CustomTextBuilder(
                                                                      text: TextConstant
                                                                          .giftHistoryText,
                                                                      fontColor:
                                                                          ColorsConfig()
                                                                              .textWhite1(),
                                                                      fontSize:
                                                                          18.0.sp,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .w600,
                                                                    ),
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  child: ListView
                                                                      .builder(
                                                                          itemCount: history
                                                                              .result[
                                                                                  'users']
                                                                              .length,
                                                                          itemBuilder:
                                                                              (context, historyIndex) {
                                                                            return Container(
                                                                              width: MediaQuery.of(context).size.width,
                                                                              height: 65.0,
                                                                              padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                              decoration: BoxDecoration(
                                                                                border: Border(
                                                                                  bottom: BorderSide(
                                                                                    width: 0.5,
                                                                                    color: ColorsConfig().border1(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              child: Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: InkWell(
                                                                                      onTap: () {
                                                                                        Navigator.pop(context);
                                                                                        if (history.result['users'][historyIndex]['isMe']) {
                                                                                          Navigator.pushNamed(context, '/my_profile', arguments: {
                                                                                            'onNavigator': true,
                                                                                          });
                                                                                        } else {
                                                                                          Navigator.pushNamed(context, '/your_profile', arguments: {
                                                                                            'user_index': history.result['users'][historyIndex]['user_index'],
                                                                                            'user_nickname': history.result['users'][historyIndex]['nick'],
                                                                                          });
                                                                                        }
                                                                                      },
                                                                                      child: Row(
                                                                                        children: [
                                                                                          // 아바타 이미지
                                                                                          Container(
                                                                                            width: 35.0,
                                                                                            height: 35.0,
                                                                                            decoration: BoxDecoration(
                                                                                              color: ColorsConfig().userIconBackground(),
                                                                                              borderRadius: BorderRadius.circular(17.5),
                                                                                              image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                  ? DecorationImage(
                                                                                                      image: NetworkImage(
                                                                                                        history.result['users'][historyIndex]['avatar'],
                                                                                                        scale: 7.0,
                                                                                                      ),
                                                                                                      filterQuality: FilterQuality.high,
                                                                                                      fit: BoxFit.none,
                                                                                                      alignment: const Alignment(0.0, -0.3),
                                                                                                    )
                                                                                                  : null,
                                                                                            ),
                                                                                          ),
                                                                                          const SizedBox(width: 15.0),
                                                                                          CustomTextBuilder(
                                                                                            text: '${history.result['users'][historyIndex]['nick']}',
                                                                                            fontColor: ColorsConfig().textWhite1(),
                                                                                            fontSize: 16.0.sp,
                                                                                            fontWeight: FontWeight.w400,
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  Expanded(
                                                                                    child: ListView.builder(
                                                                                      scrollDirection: Axis.horizontal,
                                                                                      itemCount: history.result['gifts'].length,
                                                                                      itemBuilder: (context, giftHistory) {
                                                                                        if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                          return Container();
                                                                                        }
                                                                                        return Row(
                                                                                          children: [
                                                                                            Image(
                                                                                              image: NetworkImage(
                                                                                                history.result['gifts'][giftHistory]['image'],
                                                                                              ),
                                                                                            ),
                                                                                            const SizedBox(width: 4.0),
                                                                                            CustomTextBuilder(
                                                                                              text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                              fontColor: ColorsConfig().textBlack2(),
                                                                                              fontSize: 12.0.sp,
                                                                                              fontWeight: FontWeight.w700,
                                                                                            ),
                                                                                            const SizedBox(width: 4.0),
                                                                                          ],
                                                                                        );
                                                                                      },
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            );
                                                                          }),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        );
                                                      });
                                                });
                                              },
                                              child: Row(
                                                children: [
                                                  // 뱃지
                                                  Container(
                                                    width: 18.0,
                                                    height: 18.0,
                                                    margin:
                                                        const EdgeInsets.only(
                                                            right: 4.0),
                                                    decoration: BoxDecoration(
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              9.0),
                                                    ),
                                                    child: Image(
                                                      image: NetworkImage(
                                                        feedListData[index]
                                                                ['gift'][0]
                                                            ['image'],
                                                      ),
                                                    ),
                                                  ),
                                                  // 뱃지 개수
                                                  CustomTextBuilder(
                                                    text: '+$_giftTotalCount',
                                                    fontColor: ColorsConfig()
                                                        .textWhite1(),
                                                    fontSize: 13.0.sp,
                                                    fontWeight: FontWeight.w400,
                                                    height: 1.0,
                                                  ),
                                                ],
                                              ),
                                            )
                                          : Container(),
                                    ],
                                  ),
                                ),
                                // 포스트 이미지
                                Image(
                                  image: feedListData[index]['category'] == 'i'
                                      ? NetworkImage(
                                          feedListData[index]['image'][0])
                                      : NetworkImage(
                                          feedListData[index]['sub_link']),
                                  fit: BoxFit.cover,
                                  width: MediaQuery.of(context).size.width,
                                ),
                                // 포스트 타이틀
                                Container(
                                  width: MediaQuery.of(context).size.width,
                                  padding: const EdgeInsets.symmetric(
                                      horizontal: 10.0, vertical: 12.0),
                                  child: ExtendedText(
                                    '${feedListData[index]['title']}',
                                    style: TextStyle(
                                      color: ColorsConfig().textWhite1(),
                                      fontSize: 15.0.sp,
                                      fontWeight: FontWeight.w400,
                                    ),
                                    maxLines: 2,
                                    textScaleFactor: 1.0,
                                    overflowWidget: TextOverflowWidget(
                                      position: TextOverflowPosition.end,
                                      align: TextOverflowAlign.center,
                                      child: Row(
                                        mainAxisSize: MainAxisSize.min,
                                        children: <Widget>[
                                          CustomTextBuilder(
                                            text: '\u2026',
                                            fontColor:
                                                ColorsConfig().textBlack2(),
                                            fontWeight: FontWeight.w400,
                                          ),
                                          CustomTextBuilder(
                                            text: TextConstant.onlyMoreReadText,
                                            fontColor:
                                                ColorsConfig().textBlack2(),
                                            fontSize: 10.0.sp,
                                            fontWeight: FontWeight.w400,
                                          )
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                        );
                      }
                    } else {
                      SharedPreferences.getInstance().then((_prefs) {
                        if (hasSelected) {
                          GetFeedListAPI()
                              .feed(
                                  accesToken: _prefs.getString('AccessToken')!,
                                  q: selectedText,
                                  cursor: feedListData[index - 1]['post_index'])
                              .then((value) {
                            for (int i = 0;
                                i < value.result['data'].length;
                                i++) {
                              setState(() {
                                feedListData.add(value.result['data'][i]);
                              });
                            }
                          });
                        } else {
                          GetFeedListAPI()
                              .feed(
                                  accesToken: _prefs.getString('AccessToken')!,
                                  cursor: feedListData[index - 1]['post_index'])
                              .then((value) {
                            for (int i = 0;
                                i < value.result['data'].length;
                                i++) {
                              setState(() {
                                feedListData.add(value.result['data'][i]);
                              });
                            }
                          });
                        }
                      });
                      return Container();
                    }
                  },
                ),
              ),
              // 구독
              Column(
                children: [
                  getSubscribeFeedListData.isNotEmpty &&
                          getSubscribeFeedListData['subscribe'].isNotEmpty
                      ? Container(
                          height: 88.0,
                          color: ColorsConfig().subBackground1(),
                          child: Row(
                            children: [
                              Expanded(
                                child: ListView.builder(
                                  scrollDirection: Axis.horizontal,
                                  itemCount:
                                      getSubscribeFeedListData['subscribe']
                                          .length,
                                  itemBuilder: (context, hor) {
                                    return InkWell(
                                      onTap: () async {
                                        final _prefs = await SharedPreferences
                                            .getInstance();

                                        setState(() {
                                          if (selectedUserIndex !=
                                              getSubscribeFeedListData[
                                                      'subscribe'][hor]
                                                  ['user_index']) {
                                            selectedUserIndex =
                                                getSubscribeFeedListData[
                                                        'subscribe'][hor]
                                                    ['user_index'];

                                            GetSubscribePostListAPI()
                                                .subscribePostList(
                                                    accesToken:
                                                        _prefs.getString(
                                                            'AccessToken')!,
                                                    userIndex:
                                                        selectedUserIndex,
                                                    isFeed: true)
                                                .then((value) {
                                              setState(() {
                                                getSubscribeFeedListData =
                                                    value.result;
                                              });
                                            });
                                          } else {
                                            selectedUserIndex = 0;

                                            GetSubscribePostListAPI()
                                                .subscribePostList(
                                                    accesToken:
                                                        _prefs.getString(
                                                            'AccessToken')!,
                                                    isFeed: true)
                                                .then((value) {
                                              setState(() {
                                                getSubscribeFeedListData =
                                                    value.result;
                                              });
                                            });
                                          }
                                        });
                                      },
                                      child: Stack(
                                        children: [
                                          Container(
                                            margin: hor == 0
                                                ? const EdgeInsets.only(
                                                    left: 15.0, right: 4.0)
                                                : const EdgeInsets.symmetric(
                                                    horizontal: 4.0),
                                            child: Column(
                                              mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                              children: [
                                                Container(
                                                  width: 52.5,
                                                  height: 52.5,
                                                  margin: const EdgeInsets.only(
                                                      bottom: 2.0),
                                                  decoration: BoxDecoration(
                                                    color: ColorsConfig()
                                                        .userIconBackground(),
                                                    border: selectedUserIndex ==
                                                            getSubscribeFeedListData[
                                                                    'subscribe']
                                                                [
                                                                hor]['user_index']
                                                        ? Border.all(
                                                            width: 2.0,
                                                            color:
                                                                ColorsConfig()
                                                                    .primary(),
                                                          )
                                                        : null,
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            100.0),
                                                    image: DecorationImage(
                                                      image: NetworkImage(
                                                        getSubscribeFeedListData[
                                                                'subscribe']
                                                            [hor]['avatar_url'],
                                                        scale: 4.5,
                                                      ),
                                                      filterQuality:
                                                          FilterQuality.high,
                                                      fit: BoxFit.none,
                                                      alignment:
                                                          const Alignment(
                                                              0.0, -0.3),
                                                    ),
                                                  ),
                                                ),
                                                SizedBox(
                                                  width: 60.0,
                                                  child: Center(
                                                    child: CustomTextBuilder(
                                                      text:
                                                          getSubscribeFeedListData[
                                                                  'subscribe'][
                                                              hor]['user_nick'],
                                                      fontColor: ColorsConfig()
                                                          .textWhite1(),
                                                      fontSize: 12.0.sp,
                                                      maxLines: 1,
                                                      textOverflow:
                                                          TextOverflow.ellipsis,
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                          ),
                                          selectedUserIndex != 0 &&
                                                  selectedUserIndex !=
                                                      getSubscribeFeedListData[
                                                              'subscribe'][hor]
                                                          ['user_index']
                                              ? Container(
                                                  width: 60.5,
                                                  height: MediaQuery.of(context)
                                                      .size
                                                      .height,
                                                  color: ColorsConfig()
                                                      .colorPicker(
                                                          color: ColorsConfig()
                                                              .subBackground1(),
                                                          opacity: 0.5),
                                                )
                                              : Container(),
                                        ],
                                      ),
                                    );
                                  },
                                ),
                              ),
                              InkWell(
                                onTap: () {
                                  Navigator.pushNamed(context, '/subscribe',
                                      arguments: {
                                        'tabIndex': 1,
                                        'user_nickname': getProfileData['nick'],
                                      });
                                },
                                child: Container(
                                  width: 73.0,
                                  color: ColorsConfig().subBackground1(),
                                  child: Center(
                                    child: CustomTextBuilder(
                                      text: TextConstant.allText,
                                      fontColor: ColorsConfig().primary(),
                                      fontSize: 14.0.sp,
                                      fontWeight: FontWeight.w400,
                                    ),
                                  ),
                                ),
                              ),
                            ],
                          ),
                        )
                      : Container(),
                  getSubscribeFeedListData.isNotEmpty &&
                          getSubscribeFeedListData['subscribe'].isNotEmpty
                      ? Expanded(
                          child: getSubscribeFeedListData['list'].isNotEmpty
                              ? RefreshIndicator(
                                  onRefresh: () async {
                                    final _prefs =
                                        await SharedPreferences.getInstance();

                                    GetSubscribePostListAPI()
                                        .subscribePostList(
                                            accesToken: _prefs
                                                .getString('AccessToken')!,
                                            isFeed: true)
                                        .then((value) {
                                      setState(() {
                                        getSubscribeFeedListData = value.result;
                                      });
                                    });
                                  },
                                  color: ColorsConfig().textWhite1(),
                                  backgroundColor:
                                      ColorsConfig().subBackgroundBlack(),
                                  child: MasonryGridView.builder(
                                    controller: widget.allListScrollController,
                                    itemCount:
                                        getSubscribeFeedListData['list'] != null
                                            ? getSubscribeFeedListData['list']
                                                    .length +
                                                1
                                            : 0,
                                    shrinkWrap: true,
                                    gridDelegate:
                                        const SliverSimpleGridDelegateWithFixedCrossAxisCount(
                                      crossAxisCount: 2,
                                    ),
                                    crossAxisSpacing: 12.0,
                                    padding: const EdgeInsets.symmetric(
                                        horizontal: 10.5, vertical: 8.5),
                                    itemBuilder: (context, index) {
                                      if (index <
                                          getSubscribeFeedListData['list']
                                              .length) {
                                        if (index.isEven) {
                                          int _giftTotalCount = 0;
                                          if (getSubscribeFeedListData['list']
                                                  [index]['gift']
                                              .isNotEmpty) {
                                            for (int i = 0;
                                                i <
                                                    getSubscribeFeedListData[
                                                                'list'][index]
                                                            ['gift']
                                                        .length;
                                                i++) {
                                              _giftTotalCount +=
                                                  getSubscribeFeedListData[
                                                          'list'][index]['gift']
                                                      [i]['gift_count'] as int;
                                            }
                                          }
                                          return InkWell(
                                            onTap: () {
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                  builder: (context) =>
                                                      PostingDetailScreen(
                                                    postIndex:
                                                        getSubscribeFeedListData[
                                                                'list'][index]
                                                            ['post_index'],
                                                    postType: 1,
                                                  ),
                                                ),
                                              );
                                            },
                                            child: Container(
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width -
                                                      35.0) /
                                                  2,
                                              margin: index != 0
                                                  ? const EdgeInsets.only(
                                                      top: 11.0)
                                                  : null,
                                              decoration: BoxDecoration(
                                                color: ColorsConfig()
                                                    .subBackground1(),
                                                borderRadius:
                                                    BorderRadius.circular(8.0),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: ColorsConfig()
                                                        .linkIconBackground(),
                                                    blurRadius: 9.0,
                                                    offset:
                                                        const Offset(0.0, 0.0),
                                                  ),
                                                ],
                                              ),
                                              child: Column(
                                                children: [
                                                  // 프로필 이미지, 닉네임, 뱃지, 더보기
                                                  Padding(
                                                    padding: const EdgeInsets
                                                        .symmetric(
                                                        horizontal: 10.0,
                                                        vertical: 7.0),
                                                    child: Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        // 프로필 이미지, 닉네임
                                                        InkWell(
                                                          onTap: () {
                                                            if (getSubscribeFeedListData[
                                                                        'list']
                                                                    [index]
                                                                ['isMe']) {
                                                              Navigator.pushNamed(
                                                                  context,
                                                                  '/my_profile',
                                                                  arguments: {
                                                                    'onNavigator':
                                                                        true,
                                                                  });
                                                            } else {
                                                              Navigator.pushNamed(
                                                                  context,
                                                                  '/your_profile',
                                                                  arguments: {
                                                                    'user_index':
                                                                        getSubscribeFeedListData['list'][index]
                                                                            [
                                                                            'user_index'],
                                                                    'user_nickname':
                                                                        getSubscribeFeedListData['list'][index]
                                                                            [
                                                                            'nick'],
                                                                  });
                                                            }
                                                          },
                                                          child: Row(
                                                            crossAxisAlignment:
                                                                CrossAxisAlignment
                                                                    .center,
                                                            children: [
                                                              // 프로필 이미지
                                                              Container(
                                                                width: 24.0,
                                                                height: 24.0,
                                                                margin:
                                                                    const EdgeInsets
                                                                        .only(
                                                                        right:
                                                                            6.0),
                                                                decoration:
                                                                    BoxDecoration(
                                                                  color: ColorsConfig()
                                                                      .userIconBackground(),
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              12.0),
                                                                  image:
                                                                      DecorationImage(
                                                                    image:
                                                                        NetworkImage(
                                                                      getSubscribeFeedListData['list']
                                                                              [
                                                                              index]
                                                                          [
                                                                          'avatar_url'],
                                                                      scale:
                                                                          9.0,
                                                                    ),
                                                                    filterQuality:
                                                                        FilterQuality
                                                                            .high,
                                                                    fit: BoxFit
                                                                        .none,
                                                                    alignment:
                                                                        const Alignment(
                                                                            0.0,
                                                                            -0.3),
                                                                  ),
                                                                ),
                                                              ),
                                                              // 닉네임
                                                              CustomTextBuilder(
                                                                text:
                                                                    '${getSubscribeFeedListData['list'][index]['nick']}',
                                                                fontColor:
                                                                    ColorsConfig()
                                                                        .textWhite1(),
                                                                fontSize:
                                                                    14.0.sp,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w700,
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        // 뱃지
                                                        getSubscribeFeedListData[
                                                                        'list'][
                                                                    index]['gift']
                                                                .isNotEmpty
                                                            ? InkWell(
                                                                onTap:
                                                                    () async {
                                                                  final _prefs =
                                                                      await SharedPreferences
                                                                          .getInstance();

                                                                  GetGiftHistoryListDataAPI()
                                                                      .giftHistory(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: getSubscribeFeedListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                      .then(
                                                                          (history) {
                                                                    showModalBottomSheet(
                                                                        context:
                                                                            context,
                                                                        backgroundColor:
                                                                            ColorsConfig()
                                                                                .subBackground1(),
                                                                        shape:
                                                                            const RoundedRectangleBorder(
                                                                          borderRadius:
                                                                              BorderRadius.only(
                                                                            topLeft:
                                                                                Radius.circular(12.0),
                                                                            topRight:
                                                                                Radius.circular(12.0),
                                                                          ),
                                                                        ),
                                                                        builder:
                                                                            (BuildContext
                                                                                context) {
                                                                          return SafeArea(
                                                                            child:
                                                                                Container(
                                                                              decoration: const BoxDecoration(
                                                                                borderRadius: BorderRadius.only(
                                                                                  topLeft: Radius.circular(12.0),
                                                                                  topRight: Radius.circular(12.0),
                                                                                ),
                                                                              ),
                                                                              child: Column(
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Container(
                                                                                    width: 50.0,
                                                                                    height: 4.0,
                                                                                    margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                    decoration: BoxDecoration(
                                                                                      color: ColorsConfig().textBlack2(),
                                                                                      borderRadius: BorderRadius.circular(100.0),
                                                                                    ),
                                                                                  ),
                                                                                  Center(
                                                                                    child: Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                      decoration: BoxDecoration(
                                                                                        border: Border(
                                                                                          bottom: BorderSide(
                                                                                            width: 0.5,
                                                                                            color: ColorsConfig().border1(),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftHistoryText,
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 18.0.sp,
                                                                                        fontWeight: FontWeight.w600,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  Expanded(
                                                                                    child: ListView.builder(
                                                                                        itemCount: history.result['users'].length,
                                                                                        itemBuilder: (context, historyIndex) {
                                                                                          return Container(
                                                                                            width: MediaQuery.of(context).size.width,
                                                                                            height: 65.0,
                                                                                            padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                            decoration: BoxDecoration(
                                                                                              border: Border(
                                                                                                bottom: BorderSide(
                                                                                                  width: 0.5,
                                                                                                  color: ColorsConfig().border1(),
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                            child: Row(
                                                                                              children: [
                                                                                                Expanded(
                                                                                                  child: InkWell(
                                                                                                    onTap: () {
                                                                                                      Navigator.pop(context);
                                                                                                      if (history.result['users'][historyIndex]['isMe']) {
                                                                                                        Navigator.pushNamed(context, '/my_profile', arguments: {
                                                                                                          'onNavigator': true,
                                                                                                        });
                                                                                                      } else {
                                                                                                        Navigator.pushNamed(context, '/your_profile', arguments: {
                                                                                                          'user_index': history.result['users'][historyIndex]['user_index'],
                                                                                                          'user_nickname': history.result['users'][historyIndex]['nick'],
                                                                                                        });
                                                                                                      }
                                                                                                    },
                                                                                                    child: Row(
                                                                                                      children: [
                                                                                                        // 아바타 이미지
                                                                                                        Container(
                                                                                                          width: 35.0,
                                                                                                          height: 35.0,
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig().userIconBackground(),
                                                                                                            borderRadius: BorderRadius.circular(17.5),
                                                                                                            image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                                ? DecorationImage(
                                                                                                                    image: NetworkImage(
                                                                                                                      history.result['users'][historyIndex]['avatar'],
                                                                                                                      scale: 7.0,
                                                                                                                    ),
                                                                                                                    filterQuality: FilterQuality.high,
                                                                                                                    fit: BoxFit.none,
                                                                                                                    alignment: const Alignment(0.0, -0.3),
                                                                                                                  )
                                                                                                                : null,
                                                                                                          ),
                                                                                                        ),
                                                                                                        const SizedBox(width: 15.0),
                                                                                                        CustomTextBuilder(
                                                                                                          text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                          fontColor: ColorsConfig().textWhite1(),
                                                                                                          fontSize: 16.0.sp,
                                                                                                          fontWeight: FontWeight.w400,
                                                                                                        ),
                                                                                                      ],
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                                Expanded(
                                                                                                  child: ListView.builder(
                                                                                                    scrollDirection: Axis.horizontal,
                                                                                                    itemCount: history.result['gifts'].length,
                                                                                                    itemBuilder: (context, giftHistory) {
                                                                                                      if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                        return Container();
                                                                                                      }
                                                                                                      return Row(
                                                                                                        children: [
                                                                                                          Image(
                                                                                                            image: NetworkImage(
                                                                                                              history.result['gifts'][giftHistory]['image'],
                                                                                                            ),
                                                                                                          ),
                                                                                                          const SizedBox(width: 4.0),
                                                                                                          CustomTextBuilder(
                                                                                                            text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                            fontColor: ColorsConfig().textBlack2(),
                                                                                                            fontSize: 12.0.sp,
                                                                                                            fontWeight: FontWeight.w700,
                                                                                                          ),
                                                                                                          const SizedBox(width: 4.0),
                                                                                                        ],
                                                                                                      );
                                                                                                    },
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          );
                                                                        });
                                                                  });
                                                                },
                                                                child: Row(
                                                                  children: [
                                                                    // 뱃지
                                                                    Container(
                                                                      width:
                                                                          18.0,
                                                                      height:
                                                                          18.0,
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          right:
                                                                              4.0),
                                                                      decoration:
                                                                          BoxDecoration(
                                                                        borderRadius:
                                                                            BorderRadius.circular(9.0),
                                                                      ),
                                                                      child:
                                                                          Image(
                                                                        image:
                                                                            NetworkImage(
                                                                          getSubscribeFeedListData['list'][index]['gift'][0]
                                                                              [
                                                                              'image'],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    // 뱃지 개수
                                                                    CustomTextBuilder(
                                                                      text:
                                                                          '+$_giftTotalCount',
                                                                      fontColor:
                                                                          ColorsConfig()
                                                                              .textWhite1(),
                                                                      fontSize:
                                                                          13.0.sp,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .w400,
                                                                      height:
                                                                          1.0,
                                                                    ),
                                                                  ],
                                                                ),
                                                              )
                                                            : Container(),
                                                      ],
                                                    ),
                                                  ),
                                                  // 포스트 이미지
                                                  getSubscribeFeedListData[
                                                                  'list'][index]
                                                              ['category'] ==
                                                          'i'
                                                      ? Image(
                                                          image: NetworkImage(
                                                              getSubscribeFeedListData[
                                                                          'list']
                                                                      [index]
                                                                  ['image'][0]),
                                                          fit: BoxFit.cover,
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                        )
                                                      : getSubscribeFeedListData[
                                                                          'list']
                                                                      [index][
                                                                  'sub_link'] !=
                                                              null
                                                          ? Image(
                                                              image: NetworkImage(
                                                                  getSubscribeFeedListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'sub_link']),
                                                              fit: BoxFit.cover,
                                                              width:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                            )
                                                          : Container(),
                                                  // 포스트 타이틀
                                                  Container(
                                                    width:
                                                        MediaQuery.of(context)
                                                            .size
                                                            .width,
                                                    padding: const EdgeInsets
                                                        .symmetric(
                                                        horizontal: 10.0,
                                                        vertical: 12.0),
                                                    child: ExtendedText(
                                                      '${getSubscribeFeedListData['list'][index]['title']}',
                                                      style: TextStyle(
                                                        color: ColorsConfig()
                                                            .textWhite1(),
                                                        fontSize: 15.0.sp,
                                                        fontWeight:
                                                            FontWeight.w400,
                                                      ),
                                                      maxLines: 2,
                                                      textScaleFactor: 1.0,
                                                      overflowWidget:
                                                          TextOverflowWidget(
                                                        position:
                                                            TextOverflowPosition
                                                                .end,
                                                        align: TextOverflowAlign
                                                            .center,
                                                        child: Row(
                                                          mainAxisSize:
                                                              MainAxisSize.min,
                                                          children: <Widget>[
                                                            CustomTextBuilder(
                                                              text: '\u2026 ',
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textWhite1(),
                                                            ),
                                                            CustomTextBuilder(
                                                              text: TextConstant
                                                                  .onlyMoreReadText,
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textBlack2(),
                                                              fontSize: 10.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w400,
                                                            )
                                                          ],
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          );
                                        } else {
                                          int _giftTotalCount = 0;
                                          if (getSubscribeFeedListData['list']
                                                  [index]['gift']
                                              .isNotEmpty) {
                                            for (int i = 0;
                                                i <
                                                    getSubscribeFeedListData[
                                                                'list'][index]
                                                            ['gift']
                                                        .length;
                                                i++) {
                                              _giftTotalCount +=
                                                  getSubscribeFeedListData[
                                                          'list'][index]['gift']
                                                      [i]['gift_count'] as int;
                                            }
                                          }
                                          return InkWell(
                                            onTap: () {
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                  builder: (context) =>
                                                      PostingDetailScreen(
                                                    postIndex:
                                                        getSubscribeFeedListData[
                                                                'list'][index]
                                                            ['post_index'],
                                                    postType: 1,
                                                  ),
                                                ),
                                              );
                                            },
                                            child: Container(
                                              width: (MediaQuery.of(context)
                                                          .size
                                                          .width -
                                                      35.0) /
                                                  2,
                                              margin: index != 1
                                                  ? const EdgeInsets.only(
                                                      top: 11.0)
                                                  : null,
                                              decoration: BoxDecoration(
                                                color: ColorsConfig()
                                                    .subBackground1(),
                                                borderRadius:
                                                    BorderRadius.circular(8.0),
                                                boxShadow: [
                                                  BoxShadow(
                                                    color: ColorsConfig()
                                                        .linkIconBackground(),
                                                    blurRadius: 9.0,
                                                    offset:
                                                        const Offset(0.0, 0.0),
                                                  ),
                                                ],
                                              ),
                                              child: Column(
                                                children: [
                                                  // 프로필 이미지, 닉네임, 뱃지, 더보기
                                                  Padding(
                                                    padding: const EdgeInsets
                                                        .symmetric(
                                                        horizontal: 10.0,
                                                        vertical: 7.0),
                                                    child: Row(
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        // 프로필 이미지, 닉네임
                                                        Row(
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .center,
                                                          children: [
                                                            // 프로필 이미지
                                                            Container(
                                                              width: 24.0,
                                                              height: 24.0,
                                                              margin:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      right:
                                                                          6.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .userIconBackground(),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            12.0),
                                                                image:
                                                                    DecorationImage(
                                                                  image:
                                                                      NetworkImage(
                                                                    getSubscribeFeedListData['list']
                                                                            [
                                                                            index]
                                                                        [
                                                                        'avatar_url'],
                                                                    scale: 9.0,
                                                                  ),
                                                                  filterQuality:
                                                                      FilterQuality
                                                                          .high,
                                                                  fit: BoxFit
                                                                      .none,
                                                                  alignment:
                                                                      const Alignment(
                                                                          0.0,
                                                                          -0.3),
                                                                ),
                                                              ),
                                                            ),
                                                            // 닉네임
                                                            CustomTextBuilder(
                                                              text:
                                                                  '${getSubscribeFeedListData['list'][index]['nick']}',
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textWhite1(),
                                                              fontSize: 14.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w700,
                                                            ),
                                                          ],
                                                        ),
                                                        // 뱃지
                                                        getSubscribeFeedListData[
                                                                        'list'][
                                                                    index]['gift']
                                                                .isNotEmpty
                                                            ? InkWell(
                                                                onTap:
                                                                    () async {
                                                                  final _prefs =
                                                                      await SharedPreferences
                                                                          .getInstance();

                                                                  GetGiftHistoryListDataAPI()
                                                                      .giftHistory(
                                                                          accesToken: _prefs.getString(
                                                                              'AccessToken')!,
                                                                          postIndex: getSubscribeFeedListData['list'][index]
                                                                              [
                                                                              'post_index'])
                                                                      .then(
                                                                          (history) {
                                                                    showModalBottomSheet(
                                                                        context:
                                                                            context,
                                                                        backgroundColor:
                                                                            ColorsConfig()
                                                                                .subBackground1(),
                                                                        shape:
                                                                            const RoundedRectangleBorder(
                                                                          borderRadius:
                                                                              BorderRadius.only(
                                                                            topLeft:
                                                                                Radius.circular(12.0),
                                                                            topRight:
                                                                                Radius.circular(12.0),
                                                                          ),
                                                                        ),
                                                                        builder:
                                                                            (BuildContext
                                                                                context) {
                                                                          return SafeArea(
                                                                            child:
                                                                                Container(
                                                                              decoration: const BoxDecoration(
                                                                                borderRadius: BorderRadius.only(
                                                                                  topLeft: Radius.circular(12.0),
                                                                                  topRight: Radius.circular(12.0),
                                                                                ),
                                                                              ),
                                                                              child: Column(
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Container(
                                                                                    width: 50.0,
                                                                                    height: 4.0,
                                                                                    margin: const EdgeInsets.symmetric(vertical: 8.0),
                                                                                    decoration: BoxDecoration(
                                                                                      color: ColorsConfig().textBlack2(),
                                                                                      borderRadius: BorderRadius.circular(100.0),
                                                                                    ),
                                                                                  ),
                                                                                  Center(
                                                                                    child: Container(
                                                                                      width: MediaQuery.of(context).size.width,
                                                                                      padding: const EdgeInsets.only(left: 20.0, top: 10.0, right: 20.0, bottom: 15.0),
                                                                                      decoration: BoxDecoration(
                                                                                        border: Border(
                                                                                          bottom: BorderSide(
                                                                                            width: 0.5,
                                                                                            color: ColorsConfig().border1(),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      child: CustomTextBuilder(
                                                                                        text: TextConstant.giftHistoryText,
                                                                                        fontColor: ColorsConfig().textWhite1(),
                                                                                        fontSize: 18.0.sp,
                                                                                        fontWeight: FontWeight.w600,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  Expanded(
                                                                                    child: ListView.builder(
                                                                                        itemCount: history.result['users'].length,
                                                                                        itemBuilder: (context, historyIndex) {
                                                                                          return Container(
                                                                                            width: MediaQuery.of(context).size.width,
                                                                                            height: 65.0,
                                                                                            padding: const EdgeInsets.fromLTRB(20.0, 15.0, 20.0, 15.0),
                                                                                            decoration: BoxDecoration(
                                                                                              border: Border(
                                                                                                bottom: BorderSide(
                                                                                                  width: 0.5,
                                                                                                  color: ColorsConfig().border1(),
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                            child: Row(
                                                                                              children: [
                                                                                                Expanded(
                                                                                                  child: InkWell(
                                                                                                    onTap: () {
                                                                                                      Navigator.pop(context);
                                                                                                      if (history.result['users'][historyIndex]['isMe']) {
                                                                                                        Navigator.pushNamed(context, '/my_profile', arguments: {
                                                                                                          'onNavigator': true,
                                                                                                        });
                                                                                                      } else {
                                                                                                        Navigator.pushNamed(context, '/your_profile', arguments: {
                                                                                                          'user_index': history.result['users'][historyIndex]['user_index'],
                                                                                                          'user_nickname': history.result['users'][historyIndex]['nick'],
                                                                                                        });
                                                                                                      }
                                                                                                    },
                                                                                                    child: Row(
                                                                                                      children: [
                                                                                                        // 아바타 이미지
                                                                                                        Container(
                                                                                                          width: 35.0,
                                                                                                          height: 35.0,
                                                                                                          decoration: BoxDecoration(
                                                                                                            color: ColorsConfig().userIconBackground(),
                                                                                                            borderRadius: BorderRadius.circular(17.5),
                                                                                                            image: history.result['users'][historyIndex]['avatar'].toString().startsWith('https://image.DRPublic.co.kr/undefined') == false
                                                                                                                ? DecorationImage(
                                                                                                                    image: NetworkImage(
                                                                                                                      history.result['users'][historyIndex]['avatar'],
                                                                                                                      scale: 7.0,
                                                                                                                    ),
                                                                                                                    filterQuality: FilterQuality.high,
                                                                                                                    fit: BoxFit.none,
                                                                                                                    alignment: const Alignment(0.0, -0.3),
                                                                                                                  )
                                                                                                                : null,
                                                                                                          ),
                                                                                                        ),
                                                                                                        const SizedBox(width: 15.0),
                                                                                                        CustomTextBuilder(
                                                                                                          text: '${history.result['users'][historyIndex]['nick']}',
                                                                                                          fontColor: ColorsConfig().textWhite1(),
                                                                                                          fontSize: 16.0.sp,
                                                                                                          fontWeight: FontWeight.w400,
                                                                                                        ),
                                                                                                      ],
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                                Expanded(
                                                                                                  child: ListView.builder(
                                                                                                    scrollDirection: Axis.horizontal,
                                                                                                    itemCount: history.result['gifts'].length,
                                                                                                    itemBuilder: (context, giftHistory) {
                                                                                                      if (history.result['gifts'][giftHistory]['user_index'] != history.result['users'][historyIndex]['user_index']) {
                                                                                                        return Container();
                                                                                                      }
                                                                                                      return Row(
                                                                                                        children: [
                                                                                                          Image(
                                                                                                            image: NetworkImage(
                                                                                                              history.result['gifts'][giftHistory]['image'],
                                                                                                            ),
                                                                                                          ),
                                                                                                          const SizedBox(width: 4.0),
                                                                                                          CustomTextBuilder(
                                                                                                            text: '${history.result['gifts'][giftHistory]['count']}',
                                                                                                            fontColor: ColorsConfig().textBlack2(),
                                                                                                            fontSize: 12.0.sp,
                                                                                                            fontWeight: FontWeight.w700,
                                                                                                          ),
                                                                                                          const SizedBox(width: 4.0),
                                                                                                        ],
                                                                                                      );
                                                                                                    },
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          );
                                                                                        }),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          );
                                                                        });
                                                                  });
                                                                },
                                                                child: Row(
                                                                  children: [
                                                                    // 뱃지
                                                                    Container(
                                                                      width:
                                                                          18.0,
                                                                      height:
                                                                          18.0,
                                                                      margin: const EdgeInsets
                                                                          .only(
                                                                          right:
                                                                              4.0),
                                                                      decoration:
                                                                          BoxDecoration(
                                                                        borderRadius:
                                                                            BorderRadius.circular(9.0),
                                                                      ),
                                                                      child:
                                                                          Image(
                                                                        image:
                                                                            NetworkImage(
                                                                          getSubscribeFeedListData['list'][index]['gift'][0]
                                                                              [
                                                                              'image'],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    // 뱃지 개수
                                                                    CustomTextBuilder(
                                                                      text:
                                                                          '+$_giftTotalCount',
                                                                      fontColor:
                                                                          ColorsConfig()
                                                                              .textWhite1(),
                                                                      fontSize:
                                                                          13.0.sp,
                                                                      fontWeight:
                                                                          FontWeight
                                                                              .w400,
                                                                      height:
                                                                          1.0,
                                                                    ),
                                                                  ],
                                                                ),
                                                              )
                                                            : Container(),
                                                      ],
                                                    ),
                                                  ),
                                                  // 포스트 이미지
                                                  getSubscribeFeedListData[
                                                                  'list'][index]
                                                              ['category'] ==
                                                          'i'
                                                      ? Image(
                                                          image: NetworkImage(
                                                              getSubscribeFeedListData[
                                                                          'list']
                                                                      [index]
                                                                  ['image'][0]),
                                                          fit: BoxFit.cover,
                                                          width: MediaQuery.of(
                                                                  context)
                                                              .size
                                                              .width,
                                                        )
                                                      : getSubscribeFeedListData[
                                                                          'list']
                                                                      [index][
                                                                  'sub_link'] !=
                                                              null
                                                          ? Image(
                                                              image: NetworkImage(
                                                                  getSubscribeFeedListData[
                                                                              'list']
                                                                          [
                                                                          index]
                                                                      [
                                                                      'sub_link']),
                                                              fit: BoxFit.cover,
                                                              width:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .width,
                                                            )
                                                          : Container(),
                                                  // 포스트 타이틀
                                                  Container(
                                                    width:
                                                        MediaQuery.of(context)
                                                            .size
                                                            .width,
                                                    padding: const EdgeInsets
                                                        .symmetric(
                                                        horizontal: 10.0,
                                                        vertical: 12.0),
                                                    child: ExtendedText(
                                                      '${getSubscribeFeedListData['list'][index]['title']}',
                                                      style: TextStyle(
                                                        color: ColorsConfig()
                                                            .textWhite1(),
                                                        fontSize: 15.0.sp,
                                                        fontWeight:
                                                            FontWeight.w400,
                                                      ),
                                                      maxLines: 2,
                                                      textScaleFactor: 1.0,
                                                      overflowWidget:
                                                          TextOverflowWidget(
                                                        position:
                                                            TextOverflowPosition
                                                                .end,
                                                        align: TextOverflowAlign
                                                            .center,
                                                        child: Row(
                                                          mainAxisSize:
                                                              MainAxisSize.min,
                                                          children: <Widget>[
                                                            CustomTextBuilder(
                                                              text: '\u2026',
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textBlack2(),
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w400,
                                                            ),
                                                            CustomTextBuilder(
                                                              text: TextConstant
                                                                  .onlyMoreReadText,
                                                              fontColor:
                                                                  ColorsConfig()
                                                                      .textBlack2(),
                                                              fontSize: 10.0.sp,
                                                              fontWeight:
                                                                  FontWeight
                                                                      .w400,
                                                            )
                                                          ],
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          );
                                        }
                                      } else {
                                        if (!loadState) {
                                          SharedPreferences.getInstance()
                                              .then((_prefs) {
                                            if (!hasSelected) {
                                              setState(() {
                                                loadState = true;

                                                GetSubscribePostListAPI()
                                                    .subscribePostList(
                                                        accesToken: _prefs
                                                            .getString(
                                                                'AccessToken')!,
                                                        cursor:
                                                            getSubscribeFeedListData[
                                                                        'list']
                                                                    [index - 1]
                                                                ['post_index'],
                                                        isFeed: true)
                                                    .then((value) {
                                                  setState(() {
                                                    for (int i = 0;
                                                        i <
                                                            value.result['list']
                                                                .length;
                                                        i++) {
                                                      getSubscribeFeedListData[
                                                              'list']
                                                          .add(value.result[
                                                              'list'][i]);
                                                    }
                                                    loadState = false;
                                                  });
                                                });
                                              });
                                            } else {
                                              setState(() {
                                                loadState = true;

                                                GetSubscribePostListAPI()
                                                    .subscribePostList(
                                                        accesToken: _prefs
                                                            .getString(
                                                                'AccessToken')!,
                                                        cursor:
                                                            getSubscribeFeedListData[
                                                                        'list']
                                                                    [index - 1]
                                                                ['post_index'],
                                                        userIndex:
                                                            selectedUserIndex,
                                                        isFeed: true)
                                                    .then((value) {
                                                  setState(() {
                                                    for (int i = 0;
                                                        i <
                                                            value.result['list']
                                                                .length;
                                                        i++) {
                                                      getSubscribeFeedListData[
                                                              'list']
                                                          .add(value.result[
                                                              'list'][i]);
                                                    }
                                                    loadState = false;
                                                  });
                                                });
                                              });
                                            }
                                          });
                                        }

                                        return Container();
                                      }
                                    },
                                  ),
                                )
                              : Column(
                                  children: [
                                    Container(
                                      height: 88.0,
                                      color: ColorsConfig().subBackground1(),
                                      child: Row(
                                        children: [
                                          Expanded(
                                            child: ListView.builder(
                                              scrollDirection: Axis.horizontal,
                                              itemCount:
                                                  getSubscribeFeedListData[
                                                          'subscribe']
                                                      .length,
                                              itemBuilder: (context, hor) {
                                                return InkWell(
                                                  onTap: () async {
                                                    final _prefs =
                                                        await SharedPreferences
                                                            .getInstance();

                                                    setState(() {
                                                      if (selectedUserIndex !=
                                                          getSubscribeFeedListData[
                                                                      'subscribe']
                                                                  [hor]
                                                              ['user_index']) {
                                                        selectedUserIndex =
                                                            getSubscribeFeedListData[
                                                                    'subscribe']
                                                                [
                                                                hor]['user_index'];

                                                        GetSubscribePostListAPI()
                                                            .subscribePostList(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!,
                                                                userIndex:
                                                                    selectedUserIndex)
                                                            .then((value) {
                                                          setState(() {
                                                            currentPage2
                                                                .clear();
                                                            getSubscribeMoreBtnState
                                                                .clear();
                                                            getSubscribePostListData =
                                                                value.result;
                                                            for (int i = 0;
                                                                i <
                                                                    value
                                                                        .result[
                                                                            'list']
                                                                        .length;
                                                                i++) {
                                                              currentPage2
                                                                  .add(0);
                                                              getSubscribeMoreBtnState
                                                                  .add(false);
                                                            }
                                                          });
                                                        });
                                                      } else {
                                                        selectedUserIndex = 0;

                                                        GetSubscribePostListAPI()
                                                            .subscribePostList(
                                                                accesToken: _prefs
                                                                    .getString(
                                                                        'AccessToken')!,
                                                                isFeed: true)
                                                            .then((value) {
                                                          setState(() {
                                                            getSubscribeFeedListData =
                                                                value.result;
                                                          });
                                                        });
                                                      }
                                                    });
                                                  },
                                                  child: Stack(
                                                    children: [
                                                      Container(
                                                        margin: hor == 0
                                                            ? const EdgeInsets
                                                                .only(
                                                                left: 15.0,
                                                                right: 4.0)
                                                            : const EdgeInsets
                                                                .symmetric(
                                                                horizontal:
                                                                    4.0),
                                                        child: Column(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment
                                                                  .center,
                                                          children: [
                                                            Container(
                                                              width: 52.5,
                                                              height: 52.5,
                                                              margin:
                                                                  const EdgeInsets
                                                                      .only(
                                                                      bottom:
                                                                          2.0),
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: ColorsConfig()
                                                                    .userIconBackground(),
                                                                border: selectedUserIndex ==
                                                                        getSubscribeFeedListData['subscribe'][hor]
                                                                            [
                                                                            'user_index']
                                                                    ? Border
                                                                        .all(
                                                                        width:
                                                                            2.0,
                                                                        color: ColorsConfig()
                                                                            .primary(),
                                                                      )
                                                                    : null,
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            100.0),
                                                                image:
                                                                    DecorationImage(
                                                                  image:
                                                                      NetworkImage(
                                                                    getSubscribeFeedListData['subscribe']
                                                                            [
                                                                            hor]
                                                                        [
                                                                        'avatar_url'],
                                                                    scale: 4.5,
                                                                  ),
                                                                  filterQuality:
                                                                      FilterQuality
                                                                          .high,
                                                                  fit: BoxFit
                                                                      .none,
                                                                  alignment:
                                                                      const Alignment(
                                                                          0.0,
                                                                          -0.3),
                                                                ),
                                                              ),
                                                            ),
                                                            SizedBox(
                                                              width: 60.0,
                                                              child: Center(
                                                                child:
                                                                    CustomTextBuilder(
                                                                  text: getSubscribeFeedListData[
                                                                              'subscribe']
                                                                          [hor][
                                                                      'user_nick'],
                                                                  fontColor:
                                                                      ColorsConfig()
                                                                          .textWhite1(),
                                                                  fontSize:
                                                                      12.0.sp,
                                                                  maxLines: 1,
                                                                  textOverflow:
                                                                      TextOverflow
                                                                          .ellipsis,
                                                                ),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      selectedUserIndex != 0 &&
                                                              selectedUserIndex !=
                                                                  getSubscribeFeedListData[
                                                                              'subscribe']
                                                                          [hor][
                                                                      'user_index']
                                                          ? Container(
                                                              width: 60.5,
                                                              height:
                                                                  MediaQuery.of(
                                                                          context)
                                                                      .size
                                                                      .height,
                                                              color: ColorsConfig()
                                                                  .subBackground1(
                                                                      opacity:
                                                                          0.5),
                                                            )
                                                          : Container(),
                                                    ],
                                                  ),
                                                );
                                              },
                                            ),
                                          ),
                                          InkWell(
                                            onTap: () {
                                              Navigator.pushNamed(
                                                  context, '/subscribe',
                                                  arguments: {
                                                    'tabIndex': 1,
                                                    'user_nickname':
                                                        getProfileData['nick'],
                                                  }).then((value) async {
                                                final _prefs =
                                                    await SharedPreferences
                                                        .getInstance();

                                                GetSubscribePostListAPI()
                                                    .subscribePostList(
                                                        accesToken:
                                                            _prefs.getString(
                                                                'AccessToken')!,
                                                        isFeed: true)
                                                    .then((value) {
                                                  setState(() {
                                                    getSubscribeFeedListData =
                                                        value.result;
                                                  });
                                                });
                                              });
                                            },
                                            child: Container(
                                              width: 73.0,
                                              color: ColorsConfig()
                                                  .subBackground1(),
                                              child: Center(
                                                child: CustomTextBuilder(
                                                  text: TextConstant.allText,
                                                  fontColor:
                                                      ColorsConfig().primary(),
                                                  fontSize: 14.0.sp,
                                                  fontWeight: FontWeight.w400,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    Expanded(
                                      child: Center(
                                        child: Container(
                                          color: ColorsConfig().background(),
                                          child: Center(
                                            child: Column(
                                              mainAxisAlignment:
                                                  MainAxisAlignment.center,
                                              children: [
                                                const SizedBox(
                                                  width: 100.0,
                                                  height: 100.0,
                                                  child: Image(
                                                    image: AssetImage(
                                                        'assets/img/none_data.png'),
                                                    filterQuality:
                                                        FilterQuality.high,
                                                  ),
                                                ),
                                                const SizedBox(height: 20.0),
                                                CustomTextBuilder(
                                                  text: TextConstant
                                                      .noContentsToSubscribeText,
                                                  fontColor: ColorsConfig()
                                                      .textWhite1(),
                                                  fontSize: 16.0.sp,
                                                  fontWeight: FontWeight.w400,
                                                )
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                        )
                      : Expanded(
                          child: Container(
                            color: ColorsConfig().background(),
                            child: Center(
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  const SizedBox(
                                    width: 82.0,
                                    height: 82.0,
                                    child: Image(
                                      image: AssetImage(
                                          'assets/img/none_subscribe.png'),
                                      filterQuality: FilterQuality.high,
                                    ),
                                  ),
                                  const SizedBox(height: 20.0),
                                  CustomTextBuilder(
                                    text: TextConstant.noFollowText,
                                    fontColor: ColorsConfig().textWhite1(),
                                    fontSize: 16.0.sp,
                                    fontWeight: FontWeight.w400,
                                  ),
                                  CustomTextBuilder(
                                    text:
                                        TextConstant.checkSubscribeContentsText,
                                    fontColor: ColorsConfig().textBlack2(),
                                    fontSize: 16.0.sp,
                                    fontWeight: FontWeight.w400,
                                  )
                                ],
                              ),
                            ),
                          ),
                        ),
                ],
              ),
            ],
          ),
        ),
      );
    }

    return Expanded(
      child: Center(
        child: Container(
          color: ColorsConfig().background(),
          child: Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const SizedBox(
                  width: 114.0,
                  height: 114.0,
                  child: Image(
                    image: AssetImage('assets/img/none_data.png'),
                    filterQuality: FilterQuality.high,
                  ),
                ),
                const SizedBox(height: 20.0),
                CustomTextBuilder(
                  text: TextConstant.noContentsText,
                  fontColor: ColorsConfig().textWhite1(),
                  fontSize: 16.0.sp,
                  fontWeight: FontWeight.w400,
                )
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget selectCategoryWidget() {
    return Container(
      width: MediaQuery.of(context).size.width,
      color: ColorsConfig().subBackground1(),
      margin: const EdgeInsets.only(bottom: 8.0),
      child: SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 15.0, vertical: 10.0),
          child: Row(
              children: List.generate(toggleData.length, (toggles) {
            return InkWell(
              onTap: () async {
                final _prefs = await SharedPreferences.getInstance();

                setState(() {
                  switch (toggles) {
                    case 0:
                      toggleData[0]['state'] = true;
                      toggleData[1]['state'] = false;
                      toggleData[2]['state'] = false;
                      toggleData[3]['state'] = false;
                      toggleData[4]['state'] = false;
                      toggleData[5]['state'] = false;
                      GetPostListAPI()
                          .list(accesToken: _prefs.getString('AccessToken')!)
                          .then((value) {
                        setState(() {
                          postListData = value.result['data'];
                          for (int i = 0;
                              i < value.result['data'].length;
                              i++) {
                            currentPage.add(0);
                            getPostListMoreBtnState.add(false);
                          }
                        });
                      });
                      break;
                    case 1:
                      toggleData[0]['state'] = false;
                      toggleData[1]['state'] = true;
                      toggleData[2]['state'] = false;
                      toggleData[3]['state'] = false;
                      toggleData[4]['state'] = false;
                      toggleData[5]['state'] = false;
                      GetPostListAPI()
                          .list(
                              accesToken: _prefs.getString('AccessToken')!,
                              postCategory: 1)
                          .then((value) {
                        setState(() {
                          postListData = value.result['data'];
                          for (int i = 0;
                              i < value.result['data'].length;
                              i++) {
                            currentPage.add(0);
                            getPostListMoreBtnState.add(false);
                          }
                        });
                      });
                      break;
                    case 2:
                      toggleData[0]['state'] = false;
                      toggleData[1]['state'] = false;
                      toggleData[2]['state'] = true;
                      toggleData[3]['state'] = false;
                      toggleData[4]['state'] = false;
                      toggleData[5]['state'] = false;
                      GetPostListAPI()
                          .list(
                              accesToken: _prefs.getString('AccessToken')!,
                              postCategory: 2)
                          .then((value) {
                        setState(() {
                          postListData = value.result['data'];
                          for (int i = 0;
                              i < value.result['data'].length;
                              i++) {
                            currentPage.add(0);
                            getPostListMoreBtnState.add(false);
                          }
                        });
                      });
                      break;
                    case 3:
                      toggleData[0]['state'] = false;
                      toggleData[1]['state'] = false;
                      toggleData[2]['state'] = false;
                      toggleData[3]['state'] = true;
                      toggleData[4]['state'] = false;
                      toggleData[5]['state'] = false;
                      GetPostListAPI()
                          .list(
                              accesToken: _prefs.getString('AccessToken')!,
                              postCategory: 3)
                          .then((value) {
                        setState(() {
                          postListData = value.result['data'];
                          for (int i = 0;
                              i < value.result['data'].length;
                              i++) {
                            currentPage.add(0);
                            getPostListMoreBtnState.add(false);
                          }
                        });
                      });
                      break;
                    case 4:
                      toggleData[0]['state'] = false;
                      toggleData[1]['state'] = false;
                      toggleData[2]['state'] = false;
                      toggleData[3]['state'] = false;
                      toggleData[4]['state'] = true;
                      toggleData[5]['state'] = false;
                      GetPostListAPI()
                          .list(
                              accesToken: _prefs.getString('AccessToken')!,
                              postCategory: 4)
                          .then((value) {
                        setState(() {
                          postListData = value.result['data'];
                          for (int i = 0;
                              i < value.result['data'].length;
                              i++) {
                            currentPage.add(0);
                            getPostListMoreBtnState.add(false);
                          }
                        });
                      });
                      break;
                    case 5:
                      toggleData[0]['state'] = false;
                      toggleData[1]['state'] = false;
                      toggleData[2]['state'] = false;
                      toggleData[3]['state'] = false;
                      toggleData[4]['state'] = false;
                      toggleData[5]['state'] = true;
                      GetPostListAPI()
                          .list(
                              accesToken: _prefs.getString('AccessToken')!,
                              postCategory: 5)
                          .then((value) {
                        setState(() {
                          postListData = value.result['data'];
                          for (int i = 0;
                              i < value.result['data'].length;
                              i++) {
                            currentPage.add(0);
                            getPostListMoreBtnState.add(false);
                          }
                        });
                      });
                      break;
                  }
                });
              },
              child: Container(
                padding:
                    const EdgeInsets.symmetric(horizontal: 8.0, vertical: 6.0),
                margin: toggles != toggleData.length - 1
                    ? const EdgeInsets.only(right: 7.0)
                    : EdgeInsets.zero,
                child: Center(
                  child: CustomTextBuilder(
                    text: toggleData[toggles]['name'],
                    fontColor: toggleData[toggles]['state']
                        ? ColorsConfig().textBlack2()
                        : ColorsConfig.defaultGray,
                    fontSize: 16.0.sp,
                    fontWeight: toggleData[toggles]['state']
                        ? FontWeight.w700
                        : FontWeight.w400,
                  ),
                ),
              ),
            );
          })),
        ),
      ),
    );
  }
}
